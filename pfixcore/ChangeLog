2004-06-03  Michael Hartmier  <mhm@schlund.de>
	Minore cleanup to prepare pfixschlund upgrade:
	* build.xml
	* src/de/schlund/pfixcore/util/TargetGeneratorTask.java
	* src/de/schlund/pfixcore/util/XsltGenericTask.java
	* src/de/schlund/pfixxml/DependencyTracker.java

2004-06-15  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/AbstractXMLServer.java (handleDocument):
	fixed handling of user supplied response headers and response errors

2004-06-07  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml: Let target "generate" depend on "all" again
	(instead of "targetdefs, stylesheets, compile, installjars, check-permissions")

2004-06-01  Ralf Rapude    <rapude@schlund.de>
	* A project generator has been integrated in pfixcore
	- Therefore a new package exists: de.schlund.pfixcore.util.basicapp
	- It consists of different packages with all necessary classes
	- Each dom to change is represented by its own object in 
	  de.schlund.pfixcore.util.basicapp.projectdom
	  
	* Two new files will be found in /example/conf
	- newproject.prop.in can be used for project properties
	- newprjlog.xml.in configures log4j
	
	* The directory "prjtemplates" in example/core has been created. All 
	  xml files to generate a new project can be found there. To avoid problems
	  with ant the suffix tmpl is used.
	
	* To generate a project in pfixcore or in the skel use the newproject.sh. 
	  This file (with a different project path) also exists in the skel folder.
	
	* follow the command-line instructions
	
	* Afterwards run ant, restart apache and type in 
	  http://projectname.HOSTNAME.DOMAIN

2004-06-03  Michael Hartmier  <mhm@schlund.de>
	* src/de/schlund/pfixcore/editor/EditorHelper.java,
	* src/de/schlund/pfixcore/util/XsltGenericTask.java,
	* src/de/schlund/pfixxml/testenv/RecordManager.java
	remove unnecessary xerces dependencies

2004-06-03  Michael Hartmier  <mhm@schlund.de>
	* src/de/schlund/pfixxml/targets/TargetGenerator.java
	* src/de/schlund/pfixcore/util/TargetGeneratorTask.java: extract common code
	* src/de/schlund/pfixcore/editor/EditorCommonsFactory.java
	* src/de/schlund/pfixcore/editor/handlers/CommonsHandler.java: fix
	ClassCastException when clicking on DynIncludes

2004-06-02  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/include.xsl.in (pfx:include): added attribute
	noedit to inhibit the creation of the edit brackets in
	editmode=admin. Those includes can only be edited by selecting
	them in the editor application.

	* src/de/schlund/pfixcore/util/TargetGeneratorTask.java: added the resetting of internal
	factories here, too.

2004-06-02  Michael Hartmeier <mhm@schlund.de>

	cleanup to prepare for saxon 7:
	* src/de/schlund/pfixxml/targets/TargetGenerationException.java:
	use Java 1.4 nested exceptions to improve stack trace
	* src/de/schlund/pfixcore/util/XsltWebXmlTask.java:
	removed commented-out lines
	* src/de/schlund/pfixxml/IncludeDocument.java
	minor optimization, more final fields
	* src/de/schlund/pfixxml/targets/TargetImpl.java
	improved exception message

2004-06-01  Niels Schelbach    <niels@schlund.de>
	* src/de/schlund/pfixxml/targets/TargetGeneratorFactory.java
	* src/de/schlund/pfixxml/targets/cachestat/SPCacheStatistic.java
	- Adding reset methods to these factories, for better memory performance during ant generate

	* src/de/schlund/pfixxml/targets/TargetGenerator.java:
	- Calling above described reset methods, after generation of each project

2004-05-28  Niels Schelbach    <niels@schlund.de>
	* src/de/schlund/pfixxml/IncludeDocumentFactory.java
	* src/de/schlund/pfixxml/targets/AuxDependencyFactory.java
	* src/de/schlund/pfixxml/targets/PageInfoFactory.java
	* src/de/schlund/pfixxml/targets/SPCacheFactory.java
	* src/de/schlund/pfixxml/targets/SharedLeafFactory.java
	* src/de/schlund/pfixxml/targets/TargetFactory.java:
	- Adding reset methods to these factories, for better memory performance during ant generate
	* src/de/schlund/pfixxml/targets/TargetGenerator.java:
	- Calling above described reset methods, after generation of each project

2004-05-27  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/serverutil/SessionHelper.java: for now
	remove the setting of the port number. Made something that should
	work, but commented out until further testing.

2004-05-26  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/PfixServletRequest.java (generateSynthetics):
	- one more instance to check for null values
	- Eeek, first fix didn't work out. we need to check the parameters
	hashmap not the request as multi parameters are not accessible
	through the request, but only the parameters map.

2004-05-25  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/forminput.xsl.in: pfx:xinp type="submit|image":
	Fixed a big bug in the encoding of parameters and commands. Now it
	should work that you can iterate at runtime over the DOM with
	changing values to xinp parameters.

	* example/core/xsl/navigation.xsl.in: eeek. bug fix for implementation of mode attribute in
	pfx:button...

2004-05-25  Benjamin Reitzammer <benjamin@schlund.de>

	* example/core/build/create_propfiles.xsl changed exception template to transform
	exception configuration into a more sensible property format (no more numbers
	in property names) -> this allows overriding of exception configuration from
	pustefix.prop.in in project specific *.prop.in files
	* src/de./schlund/pfixxml/ServletManager.java adapted initializing of
	ExceptionConfig objects to new property format

2004-05-24  Michael Hartmeier <mhm@schlund.de>

	* src/de/schlund/pfixcore/editor/EditorHelper.java
	* src/de/schlund/pfixcore/editor/handlers/AppletInfoFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/ImagesFinalizer.java
	* src/de/schlund/pfixcore/util/Meminfo.java
	* src/de/schlund/pfixxml/DependencyTracker.java
	* src/de/schlund/pfixxml/IncludeDocumentExtension.java
	* src/de/schlund/pfixxml/targets/AbstractDependency.java
	* src/de/schlund/pfixxml/targets/AuxDependency.java
	* src/de/schlund/pfixxml/targets/AuxDependencyFactory.java
	* src/de/schlund/pfixxml/targets/AuxDependencyManager.java
	* src/de/schlund/pfixxml/targets/DependencyRefCounter.java
	* src/de/schlund/pfixxml/targets/DependencyType.java
	* src/de/schlund/pfixxml/targets/FileDependency.java
	* src/de/schlund/pfixxml/targets/ProductIncludePart.java
	* src/de/schlund/pfixxml/targets/StaticFileDependency.java
	* src/de/schlund/pfixxml/targets/Target.java
	* src/de/schlund/pfixxml/targets/TargetGenerator.java
	* src/de/schlund/pfixxml/targets/TargetImpl.java
	* src/de/schlund/pfixxml/targets/VirtualTarget.java
	- simplified dependencies: removed FileDependency, StaticFileDependency and
	  ProductIncludePart since they don't have specific functionality - everything
	  is defined in one of the base classes or DependencyType.
	- removed AbstractDependency, all functionality is in AuxDependency now
	- more final fields
	- moved AuxDependencyManager from TargetImpl down to VirtualTarget.
	- removed AuxDependency.getDir(), use AuxDependency.getPath().getDir() instead
	- util.Meminfo.java: performance tweak - explict gc is expensive

2004-05-18  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/targets/TargetGenerator.java
	(main): do remove(generatorfile) again.

	* src/de/schlund/pfixxml/targets/TargetGeneratorFactory.java
	(remove): use the depend file object and genKey() to get the map key.
	(genKey): new method.

2004-05-18 Ralf Rapude <rapude@schlund.de>
	- There are three new directories in the example dir called simplepage,
	simplelink and simpleform.
	Each consists of a simple application for pustefix in order to deliver basic
	functionalities as a turorial.

	- A new target called "dist-examples" has been added to the build.xml. It
	builds a tar to the dist directory containing the example projects and
	also a src folder with all appropriate files. This target will be
	also called if you run "ant notag" or "ant dist".
	Ant realclean will delete all generated files from "example" as well as from
	src/de/skelexamples.

	- A README_EXAMPLES.txt has been added to the example directory. This file
	supplies basic informations related to the examples.

	- INSTALL has a new topic (No 6). It is a short hint to the
	new sample applications.

	- There's now a package "skelexamples" in the src folder.
	The java files for the examples are stored in this folder and also
	the DemoText.iwrp will generate the related file in this folder.


2004-05-18  Michael Hartmeier <mhm@schlund.de>
	* example/core/build/iwrapper.xsl
	* src/de/schlund/pfixcore/editor/CoreDocumentation.java
	* src/de/schlund/pfixcore/editor/EditorDocumentation.java
	* src/de/schlund/pfixcore/editor/EditorHelper.java
	* src/de/schlund/pfixcore/editor/EditorLockFactory.java
	* src/de/schlund/pfixcore/editor/EditorPageUpdater.java
	* src/de/schlund/pfixcore/editor/FileLockFactory.java
	* src/de/schlund/pfixcore/editor/PfixcoreNamespace.java
	* src/de/schlund/pfixcore/editor/auth/EditorUserInfo.java
	* src/de/schlund/pfixcore/editor/auth/FileAuthManager.java
	* src/de/schlund/pfixcore/editor/handlers/AppletInfoFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/CancelEditUserHandler.java
	* src/de/schlund/pfixcore/editor/handlers/CommonsBranchHandler.java
	* src/de/schlund/pfixcore/editor/handlers/CommonsFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/CommonsHandler.java
	* src/de/schlund/pfixcore/editor/handlers/CommonsUploadHandler.java
	* src/de/schlund/pfixcore/editor/handlers/DeleteLockHandler.java
	* src/de/schlund/pfixcore/editor/handlers/DocumentationFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/DocumentationHandler.java
	* src/de/schlund/pfixcore/editor/handlers/EditUserDataHandler.java
	* src/de/schlund/pfixcore/editor/handlers/EditorStdHandler.java
	* src/de/schlund/pfixcore/editor/handlers/HomeFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/ImagesFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/ImagesHandler.java
	* src/de/schlund/pfixcore/editor/handlers/ImagesUploadHandler.java
	* src/de/schlund/pfixcore/editor/handlers/IncludesBranchHandler.java
	* src/de/schlund/pfixcore/editor/handlers/IncludesFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/IncludesHandler.java
	* src/de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java
	* src/de/schlund/pfixcore/editor/handlers/LockManagerFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/LoginStatusHandler.java
	* src/de/schlund/pfixcore/editor/handlers/LogoutHandler.java
	* src/de/schlund/pfixcore/editor/handlers/PagesFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/PagesHandler.java
	* src/de/schlund/pfixcore/editor/handlers/ProductSelectFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/ProductSelectHandler.java
	* src/de/schlund/pfixcore/editor/handlers/SearchFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/TargetsFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/TargetsHandler.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseDeleteHandler.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseResetHandler.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseSelectHandler.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseStartHandler.java
	* src/de/schlund/pfixcore/editor/handlers/UpdateProductPagesHandler.java
	* src/de/schlund/pfixcore/editor/handlers/UserAuthHandler.java
	* src/de/schlund/pfixcore/editor/handlers/UserForEditHandler.java
	* src/de/schlund/pfixcore/editor/handlers/XMLUploadHandler.java
	* src/de/schlund/pfixcore/editor/resources/CRTestcaseImpl.java
	* src/de/schlund/pfixcore/editor/resources/EditorSearchImpl.java
	* src/de/schlund/pfixcore/example/ContextAdultInfo.java
	* src/de/schlund/pfixcore/example/ContextCounter.java
	* src/de/schlund/pfixcore/example/ContextTShirt.java
	* src/de/schlund/pfixcore/example/ContextTShirtImpl.java
	* src/de/schlund/pfixcore/example/ContextTogglePicImpl.java
	* src/de/schlund/pfixcore/example/ContextTrouser.java
	* src/de/schlund/pfixcore/example/ContextTrouserImpl.java
	* src/de/schlund/pfixcore/example/CounterHandler.java
	* src/de/schlund/pfixcore/example/CounterSetHandler.java
	* src/de/schlund/pfixcore/example/MsgFlowStepAction.java
	* src/de/schlund/pfixcore/example/OverviewState.java
	* src/de/schlund/pfixcore/example/TShirtHandler.java
	* src/de/schlund/pfixcore/example/TrouserHandler.java
	* src/de/schlund/pfixcore/generator/IHandlerFactory.java
	* src/de/schlund/pfixcore/generator/IWrapperImpl.java
	* src/de/schlund/pfixcore/generator/IWrapperIndexedParam.java
	* src/de/schlund/pfixcore/generator/IWrapperParamInfo.java
	* src/de/schlund/pfixcore/generator/casters/ToLowerCase.java
	* src/de/schlund/pfixcore/util/CheckIncludes.java
	* src/de/schlund/pfixcore/util/MakeStatusMessageXML.java
	* src/de/schlund/pfixcore/util/PropertiesUtils.java
	* src/de/schlund/pfixcore/util/TargetGeneratorTask.java
	* src/de/schlund/pfixcore/util/UnixCrypt.java
	* src/de/schlund/pfixcore/util/XsltGenericTask.java
	* src/de/schlund/pfixcore/util/XsltIWrapperTask.java
	* src/de/schlund/pfixcore/util/XsltTransformer.java
	* src/de/schlund/pfixcore/util/XsltWebXmlTask.java
	* src/de/schlund/pfixcore/workflow/AuthContext.java
	* src/de/schlund/pfixcore/workflow/Context.java
	* src/de/schlund/pfixcore/workflow/ContextResource.java
	* src/de/schlund/pfixcore/workflow/ContextResourceManager.java
	* src/de/schlund/pfixcore/workflow/DirectOutputPageMap.java
	* src/de/schlund/pfixcore/workflow/DirectOutputStateFactory.java
	* src/de/schlund/pfixcore/workflow/FlowStepActionFactory.java
	* src/de/schlund/pfixcore/workflow/FlowStepJumpToAction.java
	* src/de/schlund/pfixcore/workflow/Navigation.java
	* src/de/schlund/pfixcore/workflow/NavigationFactory.java
	* src/de/schlund/pfixcore/workflow/ObservableContextResource.java
	* src/de/schlund/pfixcore/workflow/PageFlowManager.java
	* src/de/schlund/pfixcore/workflow/PageRequest.java
	* src/de/schlund/pfixcore/workflow/PageRequestProperties.java
	* src/de/schlund/pfixcore/workflow/State.java
	* src/de/schlund/pfixcore/workflow/StateFactory.java
	* src/de/schlund/pfixcore/workflow/StateImpl.java
	* src/de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java
	* src/de/schlund/pfixcore/workflow/app/FileDownloadDOState.java
	* src/de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java
	* src/de/schlund/pfixcore/workflow/app/RequestDataImpl.java
	* src/de/schlund/pfixcore/workflow/app/ResdocSimpleFinalizer.java
	* src/de/schlund/pfixxml/AbstractXMLServer.java
	* src/de/schlund/pfixxml/AppContext.java
	* src/de/schlund/pfixxml/ContextXMLServer.java
	* src/de/schlund/pfixxml/DependencyTracker.java
	* src/de/schlund/pfixxml/DirectOutputServlet.java
	* src/de/schlund/pfixxml/ImageInfo.java
	* src/de/schlund/pfixxml/IncludeDocument.java
	* src/de/schlund/pfixxml/PfixServletRequest.java
	* src/de/schlund/pfixxml/ResultDocument.java
	* src/de/schlund/pfixxml/ServletManager.java
	* src/de/schlund/pfixxml/SessionCleaner.java
	* src/de/schlund/pfixxml/exceptionhandler/ExceptionContext.java
	* src/de/schlund/pfixxml/exceptionhandler/ExceptionHandler.java
	* src/de/schlund/pfixxml/exceptionhandler/PFXHandler.java
	* src/de/schlund/pfixxml/exceptionhandler/PropertyManager.java
	* src/de/schlund/pfixxml/exceptionhandler/ReportGeneratorTask.java
	* src/de/schlund/pfixxml/exceptionhandler/STraceCleanupTask.java
	* src/de/schlund/pfixxml/loader/AppLoader.java
	* src/de/schlund/pfixxml/loader/AppLoaderConfig.java
	* src/de/schlund/pfixxml/loader/CommandClient.java
	* src/de/schlund/pfixxml/multipart/HeaderStruct.java
	* src/de/schlund/pfixxml/multipart/MultipartHandler.java
	* src/de/schlund/pfixxml/multipart/MultipartStream.java
	* src/de/schlund/pfixxml/serverutil/SessionAdmin.java
	* src/de/schlund/pfixxml/serverutil/SessionHelper.java
	* src/de/schlund/pfixxml/targets/AbstractDependency.java
	* src/de/schlund/pfixxml/targets/AuxDependency.java
	* src/de/schlund/pfixxml/targets/AuxDependencyFactory.java
	* src/de/schlund/pfixxml/targets/AuxDependencyManager.java
	* src/de/schlund/pfixxml/targets/FileDependency.java
	* src/de/schlund/pfixxml/targets/LeafTarget.java
	* src/de/schlund/pfixxml/targets/ProductIncludePart.java
	* src/de/schlund/pfixxml/targets/SPCacheFactory.java
	* src/de/schlund/pfixxml/targets/StaticFileDependency.java
	* src/de/schlund/pfixxml/targets/TargetGenerator.java
	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java
	* src/de/schlund/pfixxml/targets/VirtualTarget.java
	* src/de/schlund/pfixxml/targets/cachestat/SPCacheStatistic.java
	* src/de/schlund/pfixxml/xpath/PFXPathEvaluator.java
	* src/de/schlund/util/statuscodes/StatusCode.java
	* src/de/schlund/util/statuscodes/StatusCodeFactory.java
	various fixes to eleminate jikes- and eclipse warnings:
	- removed unused imports
	- make final Strings static to save space
	- renamed local variable if it shadowed a field
	- removed unnecessary casts
	- removed unnecessary semicolons
	- renamed enum variabled to enm (to prepare for Java 1.5)
	- deprecated methods:
	- replaced URLEncoder.encode(String) by URLEncoder.encode(String, "UTF-8")
	- replaced HttpSession.getValue/putValue by getAttribute/setAttribute

2004-05-17  Michael Hartmeier <mhm@schlund.de>

	- all paths in .cache are relative now, and file:// has been stripped
	- relative paths are represented by instances of de.schlund.pfixxml.targets.Path
	- use chained exceptions to improve error messages (e.g in AbstractXMLServer)

2004-05-17  Jens Lautenbacher  <jtl@schlund.de>

	* build.xml: released 0.5.4
	started 0.6.0-pre

2004-05-12  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml: fixed deletion of classes symlink in target
	"clean" so no error message is shown if link does not exist.
	* build.xml: Added description to targets dist and notag.
	* skel/build.xml: added target "compile-xml".
	Let target "statusmessages_xml" only depend on "propfiles" not "compile"
	as class de.schlund.pfixcore.util.MakeStatusMessageXML is in pfixcore.jar
	already so target "compile-xml" has no dependency on target "compile".

2004-05-11  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/generator/IWrapperParamInfo.java
	(setSimpleObjectValue): new method. Allows a naive conversion (by
	calling toString()) of the input Object[] array to a string
	representation. This can be used instead of the usual
	setStringValue(String[]) method, unless toString() isn't good enough.

	* example/core/build/iwrapper.xsl: we now generate for every
	parameter FOO of type BAR another method called:
	setFOO(BAR) or setFOO(BAR[]) or setFOO(BAR, String) or setFOO(BAR[], String)
	depending on if the parameter is multiple or not and if it's indexed or not.

	* src/de/schlund/pfixcore/example/TrouserHandler.java:
	* src/de/schlund/pfixcore/example/TShirtHandler.java:
	* src/de/schlund/pfixcore/example/AdultInfoHandler.java: Use the above...


	* src/de/schlund/util/statuscodes/StatusCodeException.java:
	* src/de/schlund/util/statuscodes/StatusCodeFactory.java:
	* src/de/schlund/util/statuscodes/StatusCode.java:
	* src/de/schlund/util/FactoryInit.java: new files. Added from util-MINI.jar

	* lib/util-MINI-1.1.10.jar: REMOVED

2004-05-10  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml: changed creation of symlink from directory
	tomcat shared/classes to directory build in target installjars.
	Link now always gets (re-)created. Fixed deletion of symlink classes
	in target clean.

2004-05-10  Jens Lautenbacher  <jtl@schlund.de>
	* example/core/xsl/forminput.xsl.in:
	(pfx:button_impl): assume mode="force" when neither a page
	attribute nor a mode attribute has been given. Add the attribute
	'sendtoflow', which, if set to true, will trigger the first page
	of the current pageflow, and not the page given (this is only used
	for determining the link status (active/normal/invisible)

	* example/core/xsl/forminput.xsl.in: generate_coded_name: removed.
	generate_coded_input: new template, used to put
	pfx:argument/pfx:anchor/pfx:command in special named hidden input
	fields.  <pfx:xinp type="submit|image"> now use this instead of
	coding their pfx:argument/command/anchor children into the name of
	the submit button. (This whole stuff is due to a suggestion by ae@schlund.de)

	* src/de/schlund/pfixxml/PfixServletRequest.java
	(checkParameterNameForEmbeddedData): removed. We no longer submit
	data encoded into submit button names. The new method works the
	following way: The name of a submit button is generated with a
	uniq id to look like: '__SBMT:<UNIQ_ID>:' All arguments / commands
	associated to this button are encoded as hidden input fields with
	a name that looks like this: __SYNT:<UNIQ_ID>:<REAL_PARAM_NAME>
	This solves among other stuff the problem that the ':' was special as
	as seperator of the name/value in the old case of encoded names.

	Another thing that changes is that commands are no longer of the
	form '__CMD[page]:<CMD_NAME>:<CMD_VALUE>:' which results in a
	dicardable parameter value when used in a get request (as all info
	is already encoded in the parameter name). The cmdvalue is now
	simply the value of the hidden input field
	'__SYNT:<UNIQ_ID>:<REAL_PARAM_NAME>' with REAL_PARAM_NAME being
	'__CMD[page]:<CMD_NAME>'.

	(generateSynthetics): new method, used to generate the synthetic
	parameters which match a submitted __SBMT parameter <UNIQ_ID>:

	* src/de/schlund/pfixcore/workflow/app/RequestDataImpl.java:
	we no longer store cmds or parameters as hashsets, but use arrays instead.
	(parseNameForPrefix): removed
	(addCmds): removed
	(initData): heavily simplified. As cmds are simple parameters, we no longer need to
	parse through parameter names. Also drop parameters starting with __SBMT or __SYNTH from
	adding to the data map (as the are already parsed and handled in the PfixServletRequest)

	* src/de/schlund/pfixcore/workflow/Context.java: reworked the way "sendtoflow" works:
	it no longer assumes some arbitrary predefined pagename, but rather looks for the
	request parameter __sendtoflow.

2004-05-03  Tom Braun <thomas.braun@schlund.de>
	* src/de/schlund/pfixcore/generator/postchecks/StringLength.java:
	a post-checker, that allows to check an inputs min and max length.
	it provides two parameters. namely min_length and max_length, that
	have a their defaults set to 1 and 64, respectivly.

2004-05-01  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java:
	implement another case where we want to set the continue flag:
	when the currentpagerequest is NOT a member of the current
	pageflow, but the pageflow has been explicitely set (see below).

	* src/de/schlund/pfixcore/workflow/PageFlowManager.java: remove
	the variant of pageFlowToPageRequest, that was responsible for
	setting the pageflow from a submitted __pageflow parameter. This
	now done in the context's trySettingPageRequestAndFlow method.

	* src/de/schlund/pfixcore/workflow/Context.java (isCurrentPageFlowRequestedByUser)
	new method: check to see if the current pagerequest was set
	explicitely set from a submitted __pageflow parameter.
	(trySettingPageRequestAndFlow) now do the ckecking for the
	__pageflow parameter directly here, no onger in PageFlowManager.

2004-04-28  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/util/email/EmailSender.java: throw
	IllegalArgumentException if to[] contains NULL or "" values.

2004-04-28  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/*.xsl: moved from XSLT 1.0 to 1.1. Still pending some
	testing if other projects don't regress. This will help to bridge the time until
	we finally switch to 2.0

	* src/de/schlund/pfixcore/workflow/Context.java
	(documentFromFlow): only set currentpageflow to jumptopageflow if
	the latter is != null

2004-04-27  Michael Hartmeier <mhm@schlund.de>

	* src/de/schlund/pfixxml/serverutil/SessionHelper.java
	port number was lost when redirecting a request; this problem
	showed up when using a none-standard port (e.g. 8080)


2004-04-26  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/build/create_depend.xsl: implement a new format
	for the depend.xml.in (see docs for details). Main achievments:
	metatags now handled similar to master: customizable template
	stylesheets that will be included by a core/xsl/metatags.xsl.
	parameters or (runtime) stylesheets for pages are now directly
	given in the standardpage tag (or a new "global" section)

	* example/core/xsl/customizemaster.xsl:
	* example/core/xsl/master.xsl.in: changed accordingly

	* example/core/editor/conf/depend.xml.in:
	* example/sample1/conf/depend.xml.in: use the new format
	(standardmaster, standardmetatags etc.)

	* example/core/xsl/metatags.xsl.in: new file. aggregate the common
	header of all metatags.xsl files into one core file.

	* example/sample1/xsl/metatags.xsl:
	* example/core/editor/xsl/metatags.xsl: remove framework header,
	be only a client xsl included by core/xsl/metatags.xsl

2004-04-26  Benjamin Reitzammer <benjamin@schlund.de>

	* example/core/build/create_propfiles.xsl
	added exception-template to incorparate exception-configuration into the
	servlet-property-files.

	* src/de/schlund/pfixcore/workflow/Context.java:
	added getLastException()-method which simply calls getLastException()
	on the current request.

	* src/de/schlund/pfixxml/PfixServletRequest.java:
	added getLastException/setLastException which stores/retrieves the
	provided parameter (a Throwable-instance) in/from the original request

	* src/de/schlund/pfixxml/ServletManager.java:
	added initExceptionConfigs()-method for initialization of declarative
	exception handling and the hook that calls the configured
	ExceptionProcessors for appropriate exceptions (processException()-method).
	If no exceptions are configured with the exception-tag, the behaviour
	of this class is unchanged.

	* src/de/schlund/pfixxml/exceptionprocessor/ExceptionConfig
	Objects of this class encapsulate the configuration for one type
	of exception done via the exception-tag; they are constructed during
	servlet initialization in initExceptionConfigs().

	* src/de/schlund/pfixxml/exceptionprocessor/ExceptionProcessor
	the interface that all classes must implement, that should act as an
	ExceptionProcessor (configured via the processor-attribute of the
	exception-tag).

	* src/de/schlund/pfixxml/exceptionprocessor/PageForwardingExceptionProcessor
	the default ExceptionProcessor, which is used, when the processor-attribute
	of the exception-tag is absent.


2004-04-26  Niels Schelbach <niels@schlund.de>

	* src/de/schlund/pfixxml/targets/TargetGenerator.java:
	added extern control ability of generation process. Callback
	methods will be called after finishing a single target, to
	inform previously registered TargetGenerationListener's

	* src/de/schlund/pfixxml/targets/TargetGeneratorListener.java:
	new interface for callback methods, called after finishing a single
	target or when a TargetGenerationException occured. There is a further
	method to ask wether to stop process or continue generating


2004-04-23  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/Context.java: made checkAuthorization() synchronized.

2004-04-16  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java
	(handleSubmittedData): now also insert the CRs when the state
	wants to continue AND the corresponding FlowStep has Actions
	that may need the DOM for their tests.

	* src/de/schlund/pfixcore/workflow/PageFlow.java: use FlowSteps
	as members of the flow. Fix return values of the relevant methods accordingly.

	* src/de/schlund/pfixcore/workflow/Context.java: change
	accordingly.
	(documentFromFlow): when the state returns and wants to continue,
	let the state check it's FlowStepActions before the flow continues.

	* src/de/schlund/pfixcore/workflow/FlowStep.java: New class. Now
	PageFlows no longer contain PageRequests but PageSteps to
	aggregate other data that's associated to a single step in a
	PageFlow. It contains the PageRequest, the "isstophere" flag
	(aka stophere="true") and possible FlowStepActions (see
	below). The method applyActionsOnContinue(...) applies all
	matching actions before the page wants to continue with the flow.

	* src/de/schlund/pfixcore/workflow/FlowStepAction.java:
	Interfaces for classes that define actions that should be
	executed after a flowstep is ready to continue in the
	pageflow. Resdoc and context are supplied to the
	doAction() method.

	* src/de/schlund/pfixcore/workflow/FlowStepActionFactory.java:
	New class. Factory to produce FlowStepActions: type "jumpto" is
	predefined to result in FlowStepJumpToAction, all other types are
	interpreted as classes implementing FlowStepAction.

	* src/de/schlund/pfixcore/workflow/FlowStepJumpToAction.java:
	New class. Main FlowStepAction class that is able to set the
	jumptopage and jumptopageflow.

	* src/de/schlund/pfixcore/example/MsgFlowStepAction.java: New
	class. Example FLowStepAction that simply prints some text to the
	log file

	* example/core/build/create_propfiles.xsl: make all the config
	stuff for the FlowStepActions work

2004-04-14  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/navigation.xsl.in (button, jsbutton): Now
	accept the attribute pageflow to designate the pageflow that
	should be selected when the request is handled. It's no longer
	needed to use the clumsy <pfx:argument name="__pageflow"> stuff
	for this. As an added benefit, because there's no longer an
	pfx:argument when only selecting a flow, it's no longer needed to
	specify nodata="true" to inhibit submit data handling in the states.

	* example/core/xsl/forminput.xsl.in (forminput):
	Handle (similar to the already present send-to-page) a new attribute send-to-pageflow
	to select the pageflow when the request is submitted.

	* src/de/schlund/pfixcore/workflow/Context.java
	(documentFromFlow): if the pagerequest is the special page
	__STARTWITHFLOW, directly do a page flow run to determine the page that should
	be shown. CAUTION: there is no real support from the XSLT side, only some hackisch way
	to do it, that is not guaranteed to work in the future.

	* src/de/schlund/pfixcore/workflow/PageFlowManager.java: changed
	logging to recognize the STARTWITHFLOW_PAGE stuff

2004-04-13  Benjamin Reitzammer  <benjamin@schlund.de>

	* /home/benjamin/projects/pfixcore/example/core/build/create_propfiles.xsl:
	added @copyfrom attribute to <pagerequest>. A pagerequest that uses this
	attribute copies all configuration from another pagerequest, that is named by
	the @copyfrom attribute. If @copyfrom is present on a pagerequest all other
	attributes and elements are ignored

2004-04-13  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/DefaultAuthIWrapperState.java: added more debug to
	maybe find the mysterious authwrapper count > 1 bug.

	* src/de/schlund/pfixcore/workflow/ContextResource.java: removed
	needsData() as part of the interface. This was never really needed anyway.
	Fixed some CRs to implement needsData() themself.

2004-04-08  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/FactoryInitServlet.java:
	new method : public static boolean isConfigured()

2004-04-07  Adam Habermann  <adam.habermann@schlund.de>

	* skel/build.xml: changed targets "core-data-check" and "core-data" to
	created and use the file ${dir.projects}/core/TIMESTAMP to decide whether
	pfixcore-data.jar has to be extracted or not.
	Added deletion of directory ${dir.projects}/core in target "realclean".

	* build.xml: updated project.version to 0.5.4-pre2

2004-04-07 Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/InstanceCheckerContainer.java(getReports):
	now we use the first line of the stacktrace for mail subject.

2004-04-06  Jens Lautenbacher  <jtl@coltrane.laudi.ka>

	* example/core/xsl/forminput.xsl.in: changed the stuff in entry
	2004-02-11 again: now the behaviour described there will not be
	automatically, you need to add the attribute position="auto" to
	the text, hidden, or area xinp tag. Alternatively you can also add
	position="n" where n is some integer to specify exactly which
	value of the multiple parameter you want to reference (note this
	is only when displaying the values from the output tree, this does
	not give any "index" when submitting the form)

	Reson for this is that it's impossible to make something like
	<ixsl:choose><ixsl:when test="...">
	  <pfx:xinp type="text" name="foo" .../>
	</ixsl:when><ixsl:otherwise>
	  <pfx:xinp type="text" name="foo" .../>
	</ixsl:otherwise></ixsl:choose>
	because the second occurance of foo will try to get it's  value from position()=2
	unless the automatism is removed as done in this patch.

2004-04-02  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/include.xsl.in: added @noerror attribute (and $noerror param) to
	pfx:include to suppress the insertion of a "missing include" warning. HANDLE WITH CARE.

2004-04-01  Corinna Herrmann  <ch17@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java
	(readIWrappersConfigFromProperties): add prefix name for debug

2004-03-31  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/PfixServletRequest.java: make the
	startLogEntry and endLogEntry mehtods synchronized.

2004-03-30  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/ExceptionContext.java(createMailSubject):
	added pagename to mail subject.

2004-03-29  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/PfixServletRequest.java:
	(endLogEntry) bug fix: test if list is really empty

2004-03-26  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/IncludeDocumentExtension.java(get):
	catch all exceptions, print a message and rethrow.

	* src/de/schlund/pfixxml/exceptionhandler/ExceptionContext.java(createMailSubject):
	now we use the first line of the stacktrace for mail subject.

2004-03-25  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/AbstractXMLServer.java(handleDocument):
	make sure no to rethrow TransformerExceptions which wrap a
	'org.apache.catalina.connector.ClientAbortException'(quick fix)

2004-03-24  Jens Lautenbacher  <jtl@schlund.de>

	* build.xml: started 0.5.4-pre

	* build.xml: released 0.5.3

	* src/de/schlund/pfixcore/workflow/Context.java: make sure to
	throw an 404 when the user requests an unknown page

	* src/de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java:
	(addErrorCodes)	call wrapper.tryErrorLogging() to maybe log StatusCodes

	* src/de/schlund/pfixcore/generator/IWrapper.java:
	(tryParamLogging) changed name from tryLogging
	(tryErrorLogging) new method

	* src/de/schlund/pfixcore/generator/IWrapperImpl.java: implement
	changes above. Now a wrapper also logs it's StatusCodes (when in
	logging mode)

2004-03-12  Joerg Haecker <haecker@schlund.de>

	* Integrated tomcat 4.1.30 into pfixcore

	* example/servletconf/tomcat/common/lib/:
	Replaced jndi.jar, naming-common.jar, naming-resources.jar, servlet.jar
	with new libs from tomcat dist.
	Added commons-collections.jar from tomcat dist.

	* example/servletconf/tomcat/bin/:
	Replaced bootstrap.jar, catalina.sh, setclasspath.sh
	with new libs from tomcat dist.

	* example/servletconf/tomcat/server/lib:
	Replaced catalina.jar, commons-logging.jar, servlets-common.jar,
	servlets-default.jar, servlets-invoker.jar, servlets-manager.jar,
	servlets-webdav.jar,tomcat-http11.jar, tomcat-util.jar with
	new libs from tomcat dist.
	Replaced jakarta-regexp-1.2.jar with jakarta-regexp-1.3.jar from
	tomcat dist.
	Replaced tomcat-ajp.jar with tomcat-jk.jar from tomcat dist.
	Added commons-beanutils.jar, commons-digester.jar from tomcat dist.

	* build.xml: Now we use 'tomcat/shared/classes' and
	'tomcat/shared/lib' for webapp-shared classes. Replaced
	'tomcat/classes' by 'tomcat/shared/classes' and 'tomcat/libs'
	by 'tomcat/shared/libs'.

	* lib/saxon6_5_3.jar: Currently tomcat does not like the
	services/javax.xml.parsers.SAXParserFactory property
	which points to com.icl.saxon.aelfred.SAXParserFactoryImpl.
	Removing this property from lib/saxon6_5_3.jar made it work.


2004-03-12  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/ExceptionContext(createLastSteps):
	fix for possible NPEx.

2004-03-09  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/ExceptionContext.java(createSTraceText):
	throwable.getStackTrace seems not to work with nested exceptions. So
	printStackTrace(PrintWriter) is used.

2004-03-09  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/AbstractXMLServer.java: added logging of pageflow to TRAIL log (if set)

2004-03-08  Jens Lautenbacher  <jtl@coltrane.laudi.ka>

	* src/de/schlund/pfixcore/generator/IWrapper{Impl}.java: Add logging to the IWrapper.
	(initLogging) needs to be called to switch on logging for an IWrapper.
	(tryLogging) called by IWrapperSimpleContainer to finally log the input whenever a IWrapper got data.
	* src/de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java:
	(handleSubmittedData): call tryLogging() on wrappers.
	(readIWrappersConfigFromProperties): call initLogging() according to properties from config file.
	* example/core/build/create_propfiles.xsl: make it configurable:
	attribute logging="true" on an <interface> node marks this IWrapper for logging.
	You need to have a property set for the directory where to log to:

	E.g. <prop name="interfacelogging"><cus:docroot/>sample1/log</prop>


2004-03-04  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/Context.java: you can specify a
	jumptopageflow without the jumptopage necessarily being a member of it.

2004-03-04  Jens Lautenbacher  <jtl@coltrane.laudi.ka>

	* src/de/schlund/pfixcore/workflow/PageFlowManager.java: Now you
	can select a pageflow (via __pageflow) even when the current page
	is not a member of it.

	* src/de/schlund/pfixcore/workflow/Context.java: now you can use
	__jumptopageflow to also set the pageflow to use for a
	jumptopage (for cases where it's not unambiguous which pageflow to
	use for a page)

2004-03-03 Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/ExceptionContext.java:
	use only methods from JDK for retrieving  stacktrace information
	* src/de/schlund/pfixxml/exceptionhandler/ExceptionHandler.java,
	src/de/schlund/pfixxml/exceptionhandler/PFUtil.java: minor

	* src/de/schlund/pfixxml/exceptionhandler/InstanceCheckerContainer.java,
	src/de/schlund/pfixxml/exceptionhandler/Report.java,
	src/de/schlund/pfixxml/exceptionhandler/ReportGeneratorTask.java,
	src/de/schlund/pfixxml/exceptionhandler/STraceCheckerContainer.java:
	Now for each stored exception a separate mail will be sent.
	Subject of reports improved, no trigger and auto stuff more.


2004-03-01 Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java:
	removed static constructor and all ugly system properties stuff.
	* src/de/schlund/pfixcore/util/MultiTransform.java:
	moved static constructor to private and removed all ugly
	system properties stuff.

2004-03-01  Jens Lautenbacher  <jtl@coltrane.laudi.ka>

	* src/de/schlund/pfixcore/workflow/Context.java:
	(jumpToPageIsRunning) new method. returns true when a jumped into
	a jumptopage.
	(setJumpToPageRequest) new method. used to set the jumptopage
	(getJumpToPageRequest) returns a set jumptopage, null otherwise.

	* src/de/schlund/pfixcore/workflow/StateImpl.java:
	(isDirectTrigger)
	(isSubmitTrigger) make sure that we don't interpret a request
	with __sendingdata=1 as a data submit if the context is already
	handling a jumptopage (as the original request was for a
	different page in that case)

	* src/de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java:
	Implement the state specific part of __jumptopage handling. this
	basically means that after a successful submit, if the context
	has a jumptopage set, set the continue flag to true
	regardless of any SELWRP stuff. The UI is supposed to know what
	to do.

	* src/de/schlund/pfixcore/workflow/Context.java:
	(runPageFlow) new private method - just refactoring
	(documentFromFlow) added __jumptopage handling: it's possible now
	to set a page from the UI the system should jump to after a successful submit
	handling. this calls documentFromFlow recursively.

	* src/de/schlund/pfixxml/IncludeDocument.java:
	* src/de/schlund/pfixcore/workflow/PageRequest.java:
	* src/de/schlund/pfixxml/AbstractXMLServer.java:
	* src/de/schlund/pfixcore/workflow/PageMap.java: whitespace fixes

2004-02-26  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/include.xsl.in: cleanup. moved <cus:documentation> nodes to end of templates to
	again have valid xsl even in the *.xsl.in

	* example/core/xsl/forminput.xsl.in:
	cleanup. moved <cus:documentation> nodes to end of templates to
	again have valid xsl even in the *.xsl.in

	made pfx:xinp[@type = "image"] callable as template
	named pfx:xinp_image with optional parameter "src". This way a contructedf src attribute could be used
	inside a custom template (E.g. <foobar_submit attr="val">...</...> could be handled by a template
	that calls pfx:xinp_image with a computed "src" attribute. The "attr" attribute would still be copied
	by pfx:xinp_image into the resulting <input type="image"> html tag.

2004-02-05  Adam Habermann  <adam.habermann@schlund.de>

	* .classpath: Because of the removal of lib/ant*.jar a local ant.jar must
	be specified in Java Buildpath for eclipse to build without errors.
	The ant.jar is now referenced using the eclipse variable PFX_ANT_LIB which
	is saved somewhere in your workspace/.metadata directory not in the
	.classpath file which is under cvs control. To set this variable, go to
	Windows -> Preferences -> Java -> Classpath Variables.
	Optionally PFX_ANT_SRC may point to the ant source.

2004-02-25  Jens Lautenbacher  <jtl@coltrane.laudi.ka>

	* example/core/build/create_workersprop.xsl: patched missing customisability of
	connectorport and jkmount string

2004-02-23  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/PropertyManager.java,
	src/de/schlund/pfixxml/exceptionhandler/PFXThreadedHandler.java,
	src/de/schlund/pfixxml/exceptionhandler/PFXHandler.java,
	src/de/schlund/pfixxml/exceptionhandler/PFUtil.java:
	minor changes

	* src/de/schlund/pfixxml/exceptionhandler/ExceptionHandler.java(handle),
	src/de/schlund/pfixxml/ServletManager.java(callProcess):
	removed param HttpServletResponse

	* src/de/schlund/pfixxml/exceptionhandler/ExceptionContext.java
	(createMailSubject): format of mail subject changed.

	* src/de/schlund/pfixxml/PfixServletRequest.java: new method
	'getServletName()'.


2004-02-20  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/serverutil/SessionHelper.java
	(saveSessionData, copySessionData, stripUriSessionId): added
	a CAT.warn when catching NullPointerException(!)
	* src/de/schlund/pfixxml/serverutil/SessionHelper.java:
	(getClearedURI, getClearedURL, getURLSessionId, encodeURI,
	encodeURL): removed useless param HttpServletResponse.
	* src/de/schlund/pfixxml/ServletManager.java: adjusted all
	calls to SessionHelper
	* src/de/schlund/pfixxml/PfixServletRequest.java(getRequestURI):
	removed useless param HttpServletResponse
	* src/de/schlund/pfixxml/AbstractXMLServer.java: adjusted all
	calls to PfixServletRequest
	* src/de/schlund/pfixxml/DerefServer.java: adjusted all
	calls to SessionHelper
	* src/de/schlund/pfixxml/testenv/RecordManager.java: adjusted calls
	to PfixServletRequest
	* src/de/schlund/pfixxml/exceptionhandler/ExceptionContext.java:
	adjusted calls to PfixServletRequest.

2004-02-18  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/testenv/*: Added support for retrieving timing information.
	* src/de/schlund/pfixcore/editor/resources/CRTestcaseImpl.java,
	src/de/schlund/pfixcore/editor/resources/CRTestcase.java,
	example/core/editor/txt/pages/main_testcaseoverview.xml: Editor update
	for new features.

2004-02-16  Jens Lautenbacher  <jtl@schlund.de>

	* started 0.5.3-pre

	* released 0.5.2

2004-02-13  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/Context.java: remember all pages that have been visited, set the
	attribute "visited" to 0,1 accordingly in the navigation.

	* example/core/xsl/navigation.xsl.in: pfx:visited / pfx:unvisited:
	new templates: show the content if the referenced page (via @page
	OR via a suppplied parameter $pagename OR as default $page) has
	been already visited (or not resp.)

2004-02-12  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/Context.java: Eeeek. don't "break" the for loop when a state
	is inaccessible..

	* started 0.5.2-pre

	* released 0.5.1

	* example/core/build/create_propfiles.xsl: Eeeeeeek. the last fix
	was stupid, now the context resource manager thinks there is a CR named
	param.AContextResource.... New naming scheme is:
	context.resoureparameter.AContextResource.AName=AValue

	* starting 0.5.1-pre

	* never released 0.4.3 :-) ... released 0.5.0. May use 0.4.3 for a bugfixing release
	of the branch cut just before the change to the state interface et.al.

	* example/core/build/create_propfiles.xsl: changed the created
	property prefix for <param>s as children of <resource> nodes to
	context.resoure.param.AContextResource.AName=AValue

2004-02-11  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/build/create_propfiles.xsl: new recognize also
	<param name="AName">AValue</param> nodes under <resource>. This
	results in properties being set relative to the context resources
	classname: context.param.AContextResource.AName=AValue

	* lib/xalan-2.1.0.jar removed, java-1.4 already has the XPathAPI from xalan we use.
	* lib/xercesImpl-2.6.1.jar
	* lib/xml-apis.jar  Updated to version 2.6.1 of xerces. Should fix some quotation
	problems at least. Still a main problem to solve to get rid of xalan completely and
	port to a new saxon.

	* example/core/xsl/forminput.xsl.in: try to handle multiple input
	elements with the same name more sensible (only text, hidden and
	area). If the parameter is defined as "multiple" the return values
	in formvalues will be used to fill the input fields one after the other.

2004-02-06  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml: fixed generation of property fqdn for manually
	specified machine value. Made build process fail if property makemode
	(environment MAKE_MODE) unset, instead of defaulting to makemode=prod.
	Using attribute loaderRef within task definition of target ant-tasks
	for sharing one classloader between tasks.

	* example/core/build/create_apacheconf.xsl: Added check on existence of
	node serveralias, so ServerAlias directive is added only if there is one
	defined.
	* src/de/schlund/pfixcore/util/XsltTransformer.java: minor, cleanup
	* src/de/schlund/pfixcore/util/XsltGenericTask.java: minor, cleanup

2004-02-05  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/targets/TargetImpl.java: eeeek. bugfix,
	don't set to null, but clear() it.

	* src/de/schlund/pfixxml/targets/TargetRW.java:  (resetParams) new method.
	* src/de/schlund/pfixxml/targets/TargetImpl.java: implement it

	* src/de/schlund/pfixxml/targets/TargetGenerator.java: reset
	params in targets when loading config (because it may be a reload
	of already exsting targets)

2004-02-04  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml:
	Changed target doc for javadoc generation. Using <packageset> instead of
	<fileset>, because <javadoc> does not work with many files.
	Changed location for javadoc from apidocs to docs/api to more conform
	to java conventions.

2004-02-02  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/Context.java: Quite some hefty
	restructuring. First of all, the new State method needsData() is
	used during a pageflow run to determine if the current page under
	consideration wants to generate output. This helps with methods
	like flowBeforeNeedsData() that no longer need to generate a DOM
	tree just to signal that they would be shown when a pagflow runs,
	now a boolean return value is all that's needed. In the course of
	repairing this long standing malfunktion, I streamlined the use of
	the PageResuestStatus that can be used and set them more
	consequently to sane values.

	(getInitialPageRequest)
	(getCurrentPageFlow)
	(flowIsStopped) have been removed as they shouldn't have been
	available from the bginning anyway, and were only introduced to
	fix other ill-designed features of the context's pageflow
	handling. Hope every current app can be ported without having to
	reintroduce them.

	In the process of cleaning up the class, I merged in the functionality of the
	former AuthContext. It has been shown that the auth stuff works, so this
	can be inplemented by the Context itself now without any problems and need for a
	stupidly deriving class.

	* src/de/schlund/pfixcore/workflow/app/DefaultAuthIWrapperState.java:
	Implement the new needsData() method. Simplify getDocument() while doing so.

	* src/de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java:
	implemented the new needsData() method by delegating to
	IHanderContainer.needsData().  Added all the logic into the
	getDocument() method needed to decide if the pageflow process
	should be startet.  Use the new setContinue() method of the
	ResultDocument to signal the start of a pageflow process.

	* src/de/schlund/pfixcore/workflow/app/ResdocSimpleFinalizer.java:
	completely simplified the default ResdocFinalizer: no longer any
	logic to decide if we should start a pageflow run or stay on the
	current page. All this is handled now by DefaultIWrapperState or
	descendants. It is also assured that onSuccess() will be called in
	everytime a data submitting request has been handled without an
	error, onWorkError will be called erverytime an error happened and
	onRetrieveStatus will be only called when a request to show the
	current status of the page has been handled.

	* src/de/schlund/pfixxml/ResultDocument.java: (setContinue)
	(wantsContinue): new methods, used to signal the Context that the
	State wants to start a pageflow run. Note that up to now, the
	SPDocument in the ResultDocument was set to "null" to start the
	pageflow process. This is no longer allowed!

	* src/de/schlund/pfixcore/workflow/State.java: new method in
	interface: boolean needsData(Context, PfixServletRequest). This
	represents a long standing change in the way the context, workflow
	and state work together. This method is called during a pageflow
	cycle to test if the page wants to show itself.  Up to now, the
	called method was just getDocument, and the State had to make sure
	that it returned a "null" SPDocument to signal that it doesn't
	want to be shown. Now the process is two-fold: first, check the
	needsData method, and in case it returns true, use the getDocument
	method to retrieve the DOM tree.  WITH OTHER WORDS: getDocument is
	expected to ALWAYS return a ResultDocument with a non-null
	SPDocument now! This and the fact that the workflow stuff is no
	longer handled inside the getDocument method is a mostly
	incompatible change that needs serious consideration of every self
	written State. Of course StaticState and
	Default(Auth)IWrapperState are already ported, so most people
	shouuld have a mostly pain free transition.

	* src/de/schlund/pfixcore/workflow/StateImpl.java: (needsData)
	implemented it, defaults to "true"

	* src/de/schlund/pfixcore/workflow/PageRequestStatus.java: clean
	up of pagerequest status: Now we only have types NAVIGATION,
	WORKFLOW, DIRECT, FINAL, AUTH (and UNDEF, which should not happen
	normally). Note that WORKFLOW_STOP and AUTH_WORKFLOW have been
	killed.

	* src/de/schlund/pfixcore/workflow/AuthContext.java: this now is only a dummy.
	All the functionality has been moved to Context.java. The class will be removed soon.

	* src/de/schlund/pfixxml/DirectOutputServlet.java: no longer needed to check the instance of the Context
	to be AuthContext (see above).

	* example/common/conf/pfixlog.xml.in: some changes personalized for uid=jtl

	* src/de/schlund/pfixxml/AbstractXMLServer.java:
	* src/de/schlund/pfixcore/workflow/app/StaticState.java: small cosmetic changes

2004-02-02  Adam Habermann  <adam.habermann@schlund.de>

	* docs/sf/*:
	Adjusted documentation to ant.
	* build.xml, skel/build.xml:
	Added <description> for displaying help via ant -projecthelp.
	Added default value prohibitedit=no for makemode=stage.
	Added property gen for specifiying include patterns for target generate,
	so generate may be performed on just a subset of pustefix projects.
	Removed target generate-mx, for not having to maintain two different
	launch mechanisms for TargetGenerator.
	Using target check-permissions now also in build.xml.
	* build.xml:
	* skel/INSTALL: removed, INSTALL is now included in build of skeleton.
	* example/INSTALL, example/INSTALL.ps: removed, now INSTALL

2004-01-28  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml:
	Added recognition of environment variable MACHINE. Its contents go to propery machine.

2004-01-26  Joerg Haecker <haecker@schlund.de>

	* example/core/build/create_propfiles.xsl(xsl:template
	match="pagerequest//ssl): Handle the pagerequest-name correctly, also
	when ssl is enclosed by cus-tags.

2004-01-20  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/DerefServer.java: Eeek. bugfix. stupid emacs align destroyed my strings.
	And I forgot to flush the stream.

2004-01-20  Niels Schelbach    <niels@schlund.de>

	* example/core/build/create_serverxml.xsl: inactive projects do not get an entry in the
	server.xml now like the apache.conf

2004-01-20  Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/StateTransfer.java: Important bugfix.
	Fixed error in the recursive state transfer algorithm (insufficient
	termination condition), which, under certain conditions, could cause
	the creation of more than one new instance of the same object.

2004-01-16  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java:
	(readIWrappersConfigFromProperties) throw an exception when we find a prefix is used more
	than one time on a page.

2004-01-15  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/Context.java: (currentPageNeedsSSL) guard against null properties

	* src/de/schlund/pfixxml/DerefServer.java: use the OutputStream, not the PrintWriter.

	* example/core/xsl/utils.xsl.in: changed the layer stuff so that a
	layer name that contains a "/" is not treated as page local --
	with other word, you have some crude way to use "namespaces" for
	layers (e.g. "GLOBAL/Help" is layer Help in the GLOBAL namespace)
	Of course nothing internal knows about these as first class
	objects... It's just that normally a layer name as given via the
	@name attribute is expanded with the current page name (so you
	have e.g. home_Help for layer "Help" used on page "home"). This
	will just be supressed for names with a "/".

2004-01-14  Jens Lautenbacher  <jtl@schlund.de>

	* build.xml: started 0.4.3-pre

	* src/de/schlund/pfixxml/AbstractXMLServer.java: ignore exceptions that happen when trying to write
	the timing info to the outputstream

	* build.xml: finally released 0.4.2.

2004-01-12  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/AbstractXMLServer.java: after everything has been rendered, add
	the time for getDom() and handleDocument() as a html comment to the outputstream
	(only if content type is text/html)

	* src/de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java:
	added the ability to have two instances of the same wrapper on one
	page by always using the unique prefix to reference them. removed the stupid
	prefix->interface => interface->instance mapping

	* src/de/schlund/pfixcore/workflow/app/ResdocSimpleFinalizer.java:
	Simplified onSuccess(), moved most of it as seen below
	* src/de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java: (getDocument)
	took onSuccess() handling from ResdocSimpleFinalizer and do it here.

2004-01-08  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/PfixServletRequest.java:
	PerfEvent: new inner class
	initPerfLog/startLogEntry/endLogEntry/printLog: new methods. This is is used to add performance logging.
	* example/common/conf/pfixlog.xml.in: add corresponding PFXPERF category and appender.
	* src/de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java:
	* src/de/schlund/pfixcore/workflow/app/StaticState.java:
	* src/de/schlund/pfixxml/AbstractXMLServer.java:
	* src/de/schlund/pfixxml/ServletManager.java:
	* src/de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java:
	* src/de/schlund/pfixcore/workflow/Context.java: use it here.

2004-01-05  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/targets/TargetGeneratorFactory.java:
	releaseGenerator: new method.

2003-12-08  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml:
	In target "jni" set unjar/untar attributes overwrite to false, so jni.tar.gz does not
	get extracted out of pfixcore.jar and not get extracted to lib/jni on every build.
	* build.xml, skel/build.xml:
	Changed creation of ant.dtd to manual. Checkins	g in ant.dtd. Added DOCTYPE Definition.

2003-12-22  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/build/create_propfiles.xsl: handle the "stophere" attribute of flowsteps and the "stopnext" of the
	pageflow the same (see below)

	* src/de/schlund/pfixcore/workflow/PageFlow.java: remember all steps with stophere="true" as clearing points.
	Removed special handling of stopnext attribute for the whole flow (see below)

	* src/de/schlund/pfixcore/workflow/Context.java: now check if the current page is a "clearing point" in
	the current pageflow (it has the "stophere" attribute set), if yes, set the PageRequestStatus to WORKFLOW_STOP.
	The handling of "stopnext" for the whole flow has been implemented in terms of "stophere" for all steps.

2003-12-18  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/targets/cachestat/SPCacheStatistic.java: start Timer as daemon.

2003-12-08  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml:
	Added hook for plugging in a build file (Name: build-include.xml).
	Targets being called from the "main" build file are pre-compile, post-compile
	and clean.
	* build.xml:
	Removed property "build.compiler.fulldepend" (=true), as compile dependencies
	are handled by task depend now.
	Removed uptodate check properties "upd.jni" and "upd.jni.javah" as the
	are not used anymore (jni is in separate build file).
	Renamed tagret pre-compile to init-compile to avoid name clash with new targets
	pre-compile and post-compile.
	* skel/build.xml:
	Changed creation of *-res.jar from being recreated from scratch on every build
	to being updated by task jar. Note: files being deleted from directory
	res remain in *-res.jar until next clean build.

2003-12-15  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/cachestat/AdvanceCacheStatistic.java
	(AdvanceCacheStatistic): bugfix. If queuesize and queueticks are not
	given, use sensible default values to make 'make generate' work.

2003-12-12  Sebastian Werner  <sw@schlund.de>
	* example/core/script/baselib.js: fixed small typo in js

2003-12-12  Joerg Haecker <haecker@schlund.de>

	* example/core/build/create_tomcatweb.xsl: if sessiontimeout-node
	in project.xml.in exists use it, else use default with 60.

	* Almost complete rewrite of SPCacheStatistic:
	* src/de/schlund/pfixxml/targets/SPCacheStatistic.java moved to
	src/de/schlund/pfixxml/targets/cachestat/SPCacheStatistic.java
	* src/de/schlund/pfixxml/targets/cachestat/AdvanceCacheStatistic.java: added
	* src/de/schlund/pfixxml/targets/cachestat/CacheHitMissPair.java: added
	* example/common/conf/factory.prop.in: adjusted, added property
	cachestatistic.queuesize and cachestatistic.queueticks.
	* src/de/schlund/pfixxml/CacheStatisticServlet.java: minor
	* src/de/schlund/pfixxml/targets/TargetImpl.java: minor
	* See javadoc for more info.

2003-12-08  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml:
	Removed java.home fallback for property javahome, as it might lead to confusing results.
	Fixed/Improved *.jar symlink handling in target installjars. Deletion of symlinks did not work
	with task delete. Using native tools now (os=Linux).
	Fixed/Added deletion of *.jar symlinks and de/classes symlinks in target clean.

2003-12-08  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml:
	In target test-skeleton apache fails to start, when project example/sample1
	is copied in, complaining about non existent DocumentRoot htdocs. As the htdocs
	location is a definition of example/sample1/conf/project.xml.in, the creation of
	dir htdocs has been moved from skel/build.xml target init to build.xml target test-skeleton.

2003-12-04 Niels Schelbach <niels.schelbach@schlund.de>
	* src/de/schlund/pfixcore/workflow/ContextResourceManager
	fixed bug in checkInterface(), to allow also extended ContextResources to be recognized as implementing
	the requested interface

2003-12-01  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml:
	fixed handling of property javahome in task properties.

2003-11-28  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml:
	Added handling of javahome property.
	Added handling of value stage for property makemode.
	* skel/build.xml:
	Added task generate-mx (experimental).

2003-11-28  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/navigation.xsl.in: change in button_impl for pfx:command handling:
	if the pfx:command has no page attribute, default to use is now: if the pfx:button has
	a page attribute set, use this, if not use $page.
	* example/core/xsl/forminput.xsl.in: a similar change as above, only this time we look at a
	possible send-to-page attribute of the enclosing pfx:forminput

2003-11-27  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/generator/IHandlerFactory.java:
	(getIHandler, getIHandlerForWrapperClass): if exceptions occur, do
	not log them only any more, but throw a IllegalStateException.

2003-11-13  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/build/create_propfiles.xsl: eeek important bugfix. <ssl> nodes were not recognized

2003-11-10  Jens Lautenbacher  <jtl@schlund.de>

	* released 0.4.1. This is the last release with Makefiles.

	* started 0.4.2-pre: Removed all the makefile cruft. There needs still more work to
	be done wrt the INSTALL files.

2003-11-08  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/PageFlow.java:
	(getIndexOfPageRequest): new method. This allows to retrieve the
	index of a PageRequest in the pageflow. returns -1 if PageRequest
	is not contained in the page flow.

	* src/de/schlund/pfixcore/workflow/Context.java:
	(getInitialPageRequest) new method. the initialpagerequest is now
	stored and can be retrieved with this method. the current
	pagerequest will be different from this during the pageflow run.

2003-11-07  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/AbstractXMLServer.java (process): added
	the remote IP address and servername to the xsl parameters for the
	transormation

	* src/de/schlund/pfixcore/workflow/Context.java (handleRequest):
	add the current pageflow name to the spdoc properties (and by that
	to the used xsl parameters).

	* example/core/xsl/master.xsl.in: handle the above with the ixsl variables pageflow,
	__remote_addr and __server_name

	* src/de/schlund/pfixxml/SPDocument.java (setProperty): new method, inits properties
	instance variable first if still == null

2003-11-05  Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfexditor/editor/PfixDebug.java
	A Small Class that helps debugging the applet

	* editorapplet/src/de/schlund/pfexditor/editor/PfixHighlight.java
	* editorapplet/src/de/schlund/pfexditor/editor/PfixCheckXml.java
	Debug-Modus implemented

	* editorapplet/src/de/schlund/pfexditor/editor/PfixTextPane.java
	Real-Time tabbing (after pressing the return key) implemented. Tabbing
	a single Row or the whole document will be added soon, after fixing
	a few bugs. I will put those functions in a TabSetting Class later.


2003-11-04  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml, jni/build.xml:
	Added target "force". When called before other targets this one sets a property
	for skipping the usual uptodate checks.
	* build.xml, skel/build.xml:
	Removed copying of ant.dtd to skel dir, added as tarfileset to target "skeleton" instead.
	Fixed target "projects_xml" to handle multiple projects correctly.
	Fixed targets "propfiles" and "web_xml" to include param "machine".
	* skel/build.xml:
	Changed handling of projects/core directroy from dependent patternset exclusion
	to target *-check logic.
	* jni/build.xml:
	Added target "all" to unify style of build files. Added target descriptions.

2003-11-03  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/customizemaster.xsl: new file. used intstead of preject specific custommaster.xsl files.

	* example/core/build/create_depend.xsl:
	* example/core/xsl/master.xsl.in:  handle the new tags and attributes.

	* build.xml: use modern as default compiler because jikes doesn't
	seem to trigger a "build failed" reliably.

	* example/core/script/baselib.js: Just some source code cleanups

2003-11-03  Sebastian Werner  <sw@schlund.de>
	* example/core/script/baselib.js: Fixed cookie handling: Some erroneous cookie value's are
	now ignored by the script.
	* example/core/script/baselib.js: Added another better handling algorithmus to store cookies

2003-10-31  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml:
	Removed DOCTYPE declaration, as it causes problems if ant.dtd does not (yet) exist
	Changed creation and extraction of pfixcore-data.jar for compatibility with make;
	contents of jar are now again prefixed with "core".
	* build.xml:
	Added target "doc" for javadoc generation
	Changed jni targets to use newly created jni/build.xml
	* skel/build.xml
	Copied in target "checkfiles" from build.xml
	* jni/build.xml
	Replaces jni/Makefile* (not yet removed from repository), Requires >= ant-1.5.4 for javah task
	* .cvsignore
	Added .classpath, .project and ant.dtd
	* jni/.cvsignore
	Added dir pkg
	* jni/build/.cvsignore
	Created as a (cvs-)workaround for directory not being empty. Added pattern "*.so".
	* jni/include/.cvsignore
	Created as a (cvs-)workaround for directory not being empty. Added pattern "*.h".

2003-10-31  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/Context.java (flowBeforeNeedsData): Eeeek! this will use a complete
	wrong pageflow when generating the navigation (... to be exact: the workflow of the page we
	are currently working on, and not of the state that is currently inspected by the navigation builder)

	* src/de/schlund/pfixcore/workflow/PageRequestStatus.java (NAVI_GEN): new PageRequestStatus. May be useful.

	* example/core/xsl/master.xsl.in: Eeeek. seem to finally have solved the stupid copying of namespaces
	into the html.... wonder why I always thought this wouldn't work?????

2003-10-29  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml:
	Added target "fixtabs" for converting hard tabs to softtabs of length 4 in the build.xml files
	Added target "checkfiles". Replaces example/checkfiles.sh (not yet removed from repository)
	* build.xml, skel/build.xml:
	Added DTD generation and DOCTYPE declaration

2003-10-28  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml:
	Made cvs tag work in target "dist", removed workaround for jni from pfixcore.jar
	Cleaned up format of CVS_AUTOTAG to be terminated by "&#010;"
	Removed make comments for easier diffing with skel/build.xml
	* build.xml, skel/build.xml:
	Let target statusmessages_xml depend on target propfiles
	Using only one classpath including example/servletconf/tomcat/common/lib/servlet.jar
	Synchronized the two build files more closer for easier (xml-)diffing

2003-10-27  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml: Incorporated compilation/generation exclusion
	- by taking property "excludes.src" into account within tasks "compile, generate-src"
	- by taking property "excludes.projects" into account within task "generate"
	* build.xml: added target "test-skeleton", to verify skel builds without errors
	* skel/build.xml: Added mkdir ${dir.projects}/htdocs to task "init" to prevent apache from failing to start.
	Added target "check-permissions" to ensure executability of shell scripts.

2003-10-27  Sebastian Werner  <sw@schlund.de>
	* example/core/script/baselib.js: Fixed bug in add-function for cookie handling. Now should
	work correctly.

2003-10-25  Jens Lautenbacher  <jtl@schlund.de>

	* build.xml: changed "files" attribute to "includes" as ant doesn't seem to know about this attribute
	(Error is:
	BUILD FAILED
	file:/home/jtl/projects/pfixcore/build.xml:454: The <fileset> data type doesn't support the "files" attribute.)

2003-10-24  Adam Habermann  <adam.habermann@schlund.de>

	* skel/build.xml: does not require specifying the version of pfixcore here, in order to be able
	to find pfixcore-*.jar and pfixcore-data-*.tar.gz
	Added "mkdir src" in target init, so first time build does not fail
	* build.xml, skel/build.xml: changed guessing of machine property from "hostname" to "hostname -s"

2003-10-24  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/util/XsltGenericTask.java: killed extra imports to make it compile

2003-10-23  Adam Habermann  <adam.habermann@schlund.de>

	* build.xml, skel/build.xml: checked in the new ant build system consisting of the build.xml
	files, custom ant tasks in src/de/schlund/pfixcore/util
	* de/schlund/pfixxml/targets/TargetGenerator.java: added method getReportAsString()
	to be able to display the generator's report by an ant task
	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java: changed instantiation of TransformerFactory
	from TransformerFactory.newInstance() to new com.icl.saxon.TransformerFactoryImpl() because the Factory
	failed to load saxon with the current (Ant-)ClassLoader

2003-10-23  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/ContextXMLServer.java (needsSSL):
	implement own version of this method. In case the whole servlet
	does not want to run under SSL anyway, check the context if the current page wants SSL.
	Return true if this is the case.

	* src/de/schlund/pfixxml/AppContext.java (currentPageNeedsSSL): new method in interface.
	* src/de/schlund/pfixcore/workflow/Context.java (currentPageNeedsSSL): implement it. This will
	try to get a page from the current request, and that failing, use the current page of the context to
	check for the property pagerequest.<PAGENAME>.FORCE_SSL. If this is property is true, return true, too.
	* example/sample1/conf/config.prop.in: handle the new attribute "forcessl" of the <pagerequest> node to
	build the mentioned java property.

	* src/de/schlund/pfixxml/ServletManager.java (needsSSL): now get the request as a parameter.
	(doGet): change accordingly

2003-10-22  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/script/baselib.js: small bugfixes.

2003-10-20  Sebastian Werner <sw@schlund.de>
	* example/core/script/baselib.js:
	Bugfix for cookie handling: better store algorithmus; no more
	asso-array used to store new values; move new/changed cookies
	to the begin to allow correct expiration

2003-10-20  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/CacheStatisticServlet.java:
	if doreset=true, print infos first, then reset.
	* src/de/schlund/pfixxml/targets/SPCacheStatistic.java:
	code cleanup.

2003-10-17 Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/SPCacheStatistic.java:
	added methods for reseting and retrieving textual statistic.
	Now lists product specific info. Implements FactoryInit now.
	* example/common/conf/factory.prop.in: added SPCacheStatistic.
	* src/de/schlund/pfixxml/CacheStatisticServlet.java: added params
	to use above functionality.

2003-10-15  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/editor/auth/AuthManagerFactory.java:
	this factory is now initialized lazy.
	* src/de/schlund/pfixcore/editor/EditorUser.java: adjusted to above
	changes

	* src/de/schlund/pfixxml/targets/LRUCache.java(getIterator): copy the
	cache to a temporary hashmap, not a treemap. Do not cast cache-keys
	to String.
	* src/de/schlund/pfixxml/targets/TargetImpl.java(getCurrValue): call
	new method doCacheStatistic to register hits and misses.
	* src/de/schlund/pfixxml/targets/SPCacheStatistic.java: added class
	to manage and create cachestatistic.
	* src/de/schlund/pfixxml/CacheStatisticServlet.java: added servlet
	for retrieving cachestatistic.
	* example/servletconf/projects.xml.in: added new servlet.

2003-10-15  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/ServletManager.java (redirectToSecureSSLSession): Ugh.
	I hope this finally fixes the non non-cookie problems for real...

2003-10-15 Thomas Braun <thomas.braun@schlund.de>

	* src/de/schlund/pfixcore/generator/caster/ToLowerCase.java: inserted
	This caster may be used for input fields, that are case insensitive.
	It simply converts the input string to lower-case.
	Note though, that special char conversion was only tested with german umlaute.


2003-10-14  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/ServletManager.java (redirectToSecureSSLSession): fixed a
	Nullpointer Excpetion that could happen if the secure ssl cookie was removed while browsing.
	Not really sure if this is the right thing to do, but it's a corner case anyway.

2003-10-13  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/script/baselib.js (__js_Layer): Rewrote cookie
	handling after a suggestion of Sebastian Werner <sw@schlund.de>:
	We store the state of the layers not each in it's own cookie but
	concatenated together in up to 10 cookies.

2003-10-09  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java
	(createRestrictedContinueGroup): new method
	(createAlwaysRetrieveGroup): new method. Refactored the parsing of
	the two attribtes "continue" and "alwaysretrieve" (which is a new
	feature)

	(retrieveCurrentStatus): New feature: we call
	retrieveCurrentStatus() not only for the memebers of the selected
	wrappers, but also for all members of the always_retrieve
	IWrapperGroup (that are not members of the selected
	wrappers...). A wrapper is a member of the always_retrieve group
	if it has the alwaysretrieve attribute set in the <interface
	prefix="..." class="..." alwaysretrieve="true"/> part of the
	config file.

2003-10-06  Joerg Haecker <haecker@schlund.de>

	* example/core/build/iwrapper.xsl: added support
	for occurance=multiple for generated toString method(see 2003-09-23).

2003-10-01  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/forminput.xsl.in: Eeek. All the default value stuff somehow disappeared during
	a merge not long after it made it into CVS...and nobody missed it :-( It's now restored again.

2003-09-23  Joerg Haecker <haecker@schlund.de>

	* example/core/build/iwrapper.xsl: added generation of toString
	method for wrapper which prints all String values of all params.

	* src/de/schlund/pfixcore/util/email/EmailSender.java: added
	method for sending mail with bccs.

2003-09-17  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/utils.xsl.in: (pfx:layer_ref): add autoclose
	parameter (default is now "false"), only close referenced layers
	now when the containing layer closes when autoclose == true.
	(pfx:layer_check): add type attribute (radio|checkbox) and attributes class, style, disabled.
	Now you can use a radio or checkbox input element as a view of the state of a referenced layer.
	See documentation for more info.

	* example/core/script/baselib.js (__js_Layer): add another array to hold input elements (radio/checkboxes) as
	switches that should be changed.
	(layer.addInputElem): new method to add input elements to the array.

2003-09-17 Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletInfo.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixIncludeDialog.java

	Image-Path Bug fixed. <pfx:image path=""> replaced by <pfx:image src="">


2003-09-16  Martin Leidig <mleidig@schlund.de>

	* example/common/conf/apploader.prop.in:
	Added property for excluding single classes from reload.
	* src/de/schlund/pfixxml/loader/AppClassLoader.java:
	Excluded classes are loaded by parent classloader.
	* src/de/schlund/pfixxml/loader/AppLoader.java:
	Added code for excluding classes from reload (new methods
	excludeClass and isExcludedClass).
	* src/de/schlund/pfixxml/loader/AppLoaderConfig.java:
	Added support for reading/processing new AppLoader configuration
	property "apploader.class.exclude".

2003-09-11  Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletNeu.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixHighlight.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixTextPane.java

	New Version of Synstax-Highlighting. Many Bugs could be fixed. The Method
	HighlightAll is replaced by HighlightRegion.


2003-09-11  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/DependencyTracker.java(log):
	Added debug output.

	* src/de/schlund/pfixxml/IncludeDocumentExtension.java(get):
	Log the part as default product, if it could not be found
	or any errors occured.

2003-09-04  Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixHighlight.java

	Prefix bug fixed ! <pfx:button> etc. should work now without errors.
	Other bugs will be fixed soon


2003-09-04  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/editor/handlers/UserAuthHandler.java(handleSubmittedData):
	ignore the 'isLoginAllowed' flag for admins.

	* src/de/schlund/pfixxml/testenv/TestcaseStep.java(getResultFromFormInput):
	bugfix for wrong handling of server-side closed connections.
	* src/de/schlund/pfixcore/editor/handlers/TestcaseStartHandler.java(handleSubmittedData):
	do not catch Exceptions, throw them.
	* src/de/schlund/pfixxml/testenv/TestcaseStepResult.java(createDiff):
	wrong sequence for diffing..

2003-09-02  Volker Zaich <zaich@schlund.de>

	* src/de/schlund/pfixcore/editor/handlers/AppletInfoFinalizer.java

	Small bug fixed. Error handling added.

2003-09-02  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/build/create_propfiles.xsl: added attribute "stopnext" to pageflow tag. This triggers
	the stuff described below.

	* src/de/schlund/pfixcore/workflow/PageRequestStatus.java (PageRequestStatus): new status WORKFLOW_STOP.

	* src/de/schlund/pfixcore/workflow/PageFlow.java (getStopAtFirstAfterCurrent): return true
	if the property "context.pageflowproperty.CURRENTFLOWNAME.stopatfirstaftercurrent" is set to "true".
	(PageFlow): check for the mentioned property.

	* src/de/schlund/pfixcore/workflow/Context.java: (flowIsStopped): new method.
	returns true if the currently active page's PageRequestStatus == WORKFLOW_STOP.
	(documentFromFlow): if the current flow returns true for getStopAtFirstAfterCurrent() and
	the workflow iterator is past the current page, set the PageRequestStatus of the currently
	iterated page to WORKFLOW_STOP instead of WORKFLOW.

	* src/de/schlund/pfixcore/workflow/StateImpl.java (isDirectTrigger): change to return true whenever
	context.flowIsStopped() is true.

	* src/de/schlund/pfixcore/workflow/StateImpl.java (isSubmitTriggerAny): changed.
	context.flowIsStopped() must return false, too (besides all the other prerequesites) for this
	method to return true.

2003-08-27  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/workflow/Context.java (recursePages):
	add timing infos to passed stringbuffers. If a state's isAccessible
	method tooks longer than Context.MAXTIME_ISACCESSIBLE_DEBUG it is added to
	the debug buffer. If it tooks longer than Context.MAXTIME_ISACCESSIBLE_WARN
	it is added the warn buffer. After recursion is done, print the buffers.

2003-08-26  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/ExceptionContext.java (createMailSubject):
	bugfix: when handling subclasses of java.lang.Error with no message, the size of the
	array containing stacktraces seems only to have the length of 1. An
	access to higher elements caused an ArrayIndexOutOfBoundsException.

2003-08-25  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/multipart/MultipartHandler.java (getHeaderStruct):
	Calling new method 'removeIEDirtyPath' for Content-Disposition header.
	When uploading a file IE sends whole path information containing '\'.
	New method removes all path information that only the filename is
	left.

2003-08-22  Joerg Haecker <haecker@schlund.de> / Martin Leidig <mleidig@schlund.de>

	* example/core/build/create_serverxml.xsl: added new template
	handling serveraliases correctly for Tomcat. Tomcat doesn't
	support a whitespace separated list of serveraliases as Apache does.
	Tomcat wants each serveralias within an 'Alias' element.

2003-08-15  Joerg Haecker <haecker@schlund.de> / Jens Lautenbacher <jtl@schlund.de>

	* src/de/schlund/pfixcore/editor/EditorProductFactory.java (getAllEditorProducts):
	important bugfix: do not read the file always!
	* src/de/schlund/pfixcore/editor/EditorHelper.java (getAffectedProductsForInclude):
	completely rewritten.
	* src/de/schlund/pfixcore/editor/auth/EditorUserInfo.java (isIncludeEditAllowed):
	pass the affected products, do not retrieve it here.
	* src/de/schlund/pfixcore/editor/handlers/IncludesFinalizer.java (renderDefault):
	src/de/schlund/pfixcore/editor/handlers/IncludesHandler.java(handleSubmittedData,
	retrieveCurrentStatus),
	src/de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java(checkAccess)
	logging, retrieve the affected products here.
	* src/de/schlund/pfixcore/editor/handlers/UserAuthHandler.java,
	src/de/schlund/pfixcore/editor/handlers/XMLUploadHandler.java: minor
	* src/de/schlund/pfixcore/editor/resources/CurrentIncludeInfo.java:
	added, holds various infos about current include.
	* src/de/schlund/pfixcore/editor/resources/EditorSessionStatus.java,
	src/de/schlund/pfixcore/editor/resources/EditorSessionStatusImpl.java:
	use CurrentIncludeInfo


2003-08-14  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/util/MakeStatusMessageXML.java (needToGenerate): new mthod to
	ceck if any scode property file or a jar file containing a scode property file is
	newer than the last timestamp when we called MakeStatusMessageXML. Only call it if the timestamp is
	earlier than the max of the modtimes.

2003-08-13  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/TargetGenerator.java
	(TargetGenerationReport.addError): bugfix for serious bug.
	Lost exceptions when adding for the first time. Quite clumsy.

	* src/de/schlund/pfixxml/exceptionhandler/PFXHandler.java(xhandle):
	if mail sending is disabled, only log to file and return.

2003-08-13  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/AbstractXMLServer.java (isDebugEnabled):
	(isInfoEnabled): two new methods to decide if we should write the logfile.
	This takes into account not only the usual CAT.isDebugEnabled() but also the setting
	of a property xmlserver.prohibitdebug (or prohibitinfo resp.).

	* example/core/editor/conf/config.prop.in: set those two to "true" for the editor.

2003-08-12  Joerg Haecker <haecker@schlund.de>

	* lib/saxon-6_5_2: removed
	* lib/saxon6_5_3: added
	* Saxon 6_5_3 is a bugfix release. If any problems
	occur, please let me know.

2003-08-12  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: released 0.3.9
	started 0.4.0-pre

	* make "make clean" work for the jni stuff

2003-08-12  Martin Leidig  <mleidig@schlund.de>

	Added support for building native part of AppLoader to skeleton.

	Added:
	* skel/Makefile.jni:

	Changed:
	* jni/Makefile
	* skel/Makefile
	* skel/apploader.sh
	* skel/startTomcat.sh

2003-08-12  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/include.xsl.in: added pfx:attribute to define dynamic attributes for tags

	* src/de/schlund/pfixcore/workflow/Context.java (pageIsSidestepPage): bugfix, dont bug out
	but print a warning to the log when the properties are null

2003-08-12  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/testenv/TestClient.java: release the
	connection after playback is finished.

	* src/de/schlund/pfixxml/testenv/TestcaseStep.java: print a warning
	if connection is closed. IMPORTANT NOTE: The Testclient uses the
	keep-alive feature. 'MaxKeepAliveRequests' in your apache conf  must be
	greater then the number of steps for your testcase. A fix will be applied soon.

2003-08-11  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/testenv/* : Refactored.
	* src/de/schlund/pfixcore/editor/handlers/TestcaseStartHandler.java,
	src/de/schlund/pfixcore/editor/resources/CRTestcase.java,
	src/de/schlund/pfixcore/editor/resources/CRTestcaseImpl.java,
	example/testenv/log4jconf.xml, example/testenv/default.xsl: adjusted
	to above changes.

	* src/de/schlund/pfixxml/exceptionhandler/PFXHandler.java: better
	debug messages.

2003-08-08  Martin Leidig  <mleidig@schlund.de>

	Made major AppLoader changes. Now native code is used to set final
	fields and create uninitialized objects. It comes as part of pfixcore,
	but has to be extracted and compiled on its target platform.

	Added:

	* src/de/schlund/pfixxml/loader/ObjectBuilder.java:
	Responsible for setting final fields and allocating objects. This is
	done by native methods. The necessary shared library is loaded on
	demand.
	* src/de/schlund/pfixxml/loader/ObjectBuilderException.java:
	Exception type for ObjectBuilder exceptions.
	* jni/Makefile:
	Makefile for building native part of AppLoader.
	* jni/src/de_schlund_pfixxml_loader_ObjectBuilder.c:
	Implementation of C header generated from ObjectBuilder.java via javah.
	It has functions for static field access and object allocation, which
	use the according functions provided by JNI.
	* jni/Makefile.pkg:
	Makefile for building native part of AppLoader within other projects.

	Changed:

	* Makefile:
	Added support for JNI part of AppLoader (jni target calls jni/Makefile
	for building, jar target adds jni package to jar file)
	* startTomcat.sh:
	LD_LIBRARY_PATH environment variable is set, so that shared library can
	be found, when it's loaded on demand.
	* src/de/schlund/pfixxml/loader/AppClassLoader.java:
	A list of all loaded application classes is provided at call.
	* src/de/schlund/pfixxml/loader/AppLoader.java:
	After reloading the referenced objects all classes, which were loaded
	by the AppClassLoader, but had no transferred instance, are identified
	and also transferred (newly created and set values of static fields).
	* src/de/schlund/pfixxml/loader/AppLoaderConfig.java:
	* src/de/schlund/pfixxml/loader/Profiler.java:
	Pure cosmetics.
	* src/de/schlund/pfixxml/loader/StateTransfer.java:
	Removed java version dependent, reflection abusing, object allocation
	stuff. Creation of uninitialized objects and setting of final member
	fields now are done with the ObjectBuilder's native methods. The
	classes of all transferred objects are provided at call.

2003-08-07  Sebastian Werner   <sw@schlund.de>
	* core/xsl/forminput.xsl.in
	* core/xsl/include.xsl.in
	* core/xsl/master.xsl.in
	* core/xsl/navigation.xsl.in
	* core/xsl/utils.xsl.in:
	Convert to new documentation format with new extendet attributes.

	* core/editor/xsl/custommaster.xsl
	* core/editor/xsl/metatags.xsl:
	Changed and extended documentation template/format and redesign of editor for Pustefix.
	Introduces a new parent child to define what parents are ok for the template.
	Introduces a new values tag indead of the now deprecated ones "possible_values" and
	"standard". Look in the core to understand the new format. The xsl.in's defined above
	use already the new format.

	* core/editor/xml/three_frames.xml
	* core/editor/xml/three_frames_applet.xml
	* core/editor/xml/three_frames_doku.xml
	* core/editor/xml/three_frames_wide.xml
	* core/editor/xml/two_frames.xml
	* core/editor/xml/two_frames_deaktiv.xml:
	Modified frame layout to look good with new editor design. Add class to navigation body and
	changed navigation frame height.

	* core/editor/txt/pages/main_commons.xml
	* core/editor/txt/pages/main_editoruserauth.xml
	* core/editor/txt/pages/main_editoruserdata.xml
	* core/editor/txt/pages/main_editorusermanager.xml
	* core/editor/txt/pages/main_home.xml
	* core/editor/txt/pages/main_images.xml
	* core/editor/txt/pages/main_includes.xml
	* core/editor/txt/pages/main_lockmanager.xml
	* core/editor/txt/pages/main_pages.xml
	* core/editor/txt/pages/main_prodselect.xml
	* core/editor/txt/pages/main_sessionmanager.xml
	* core/editor/txt/pages/main_targets.xml:
	These are the pages I have modified and optimizied in html-code and style usage to
	display optiomal with the new css.

	* core/editor/txt/navigation.xml:
	New navigation style and html code. Know uses and list with floats. Really nice I think.

	* core/editor/txt/styles.xml:
	The most changes here. Most styles rewritten from the scratch. Much more usage
	of real html structuren tags instead of groups of span e.g.

2003-08-07  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/forminput.xsl.in: added a "default" attribute to most of the pfx:xinp tags.
	This applies whenever no value is given via the formresults/formvalues DOM tree.

	* src/de/schlund/pfixcore/editor/EditorDocumentation.java (getCoreDocumentationForId): new method

	* src/de/schlund/pfixcore/editor/handlers/DocumentationFinalizer.java
	(renderAllDocumentation): add more attributes to the template_doc
	tag.

2003-08-05  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: release 0.3.8, started 0.3.9-pre

	* src/de/schlund/pfixcore/workflow/app/FileDownloadDOState.java
	(isAccessible):
	(handleRequest): make it both synchronized

	* src/de/schlund/pfixcore/workflow/AuthContext.java (checkAuthorization): make it synchronized so calls from
	outside are propery serialized

	* src/de/schlund/pfixxml/DirectOutputServlet.java (process): bugfix, more logging

2003-08-05  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/AbstractXMLServer.java(handleDocument):
	we only ignore java.net.SocketExceptions wrapped in the
	TransformerException in the last transformation.
	On all other wrapped exceptions the TransfomerException will be
	thrown again.

2003-08-05  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/StaticState.java (getDocument):
	changed to respect to properties:
	pagerequest.PAGENAME.mimetype=MIMETYPE to set the mimetype to
	something else than the default text/html (e.g. text/css).  and
	pagerequest.PAGNAME.responseheader.HEADER=HEADERVAL to set
	headers in the servlets http response (e.g. to change the cache strategies)
	(addResponseHeader): new private helper method.

	* src/de/schlund/pfixxml/AbstractXMLServer.java:
	* src/de/schlund/pfixxml/SPDocument.java:
	* src/de/schlund/pfixcore/workflow/Context.java:
	* example/sample1/conf/depend.xml.in:
	* example/sample1/conf/config.prop.in:
	* example/core/build/create_propfiles.xsl: support another
	attribute "nostore" of the "pagerequest" tag to allow for a page
	to be a "sidestep" page: The DOM tree is not stored for reuse (so
	no frames are possible!) and the Context doesn't change it's
	current page or current pageflow. This is useful for CSS or
	JavaScript output of pages (together with the change of the
	outputmethod described below).

	* example/sample1/conf/depend.xml.in:
	* example/sample1/xsl/custommaster.xsl:
	* example/core/editor/xsl/custommaster.xsl:
	* example/core/xsl/master.xsl.in:
	* example/core/build/create_depend.xsl: support another optional
	attribute "outputmethod" of the "standardpage" tag to allow for
	setting the output method of the last transformation to something
	else than html (eg. text).  this works by supplying a param
	"outputmethod" to the master transformation. (this needs a trivial
	change to the custommaster stylesheet to work)

2003-08-01  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/loader/AppClassLoader.java (AppClassLoader): really removed BCEL...
	and the jar file, too

2003-08-01  Martin Leidig  <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/AppClassLoader.java:
	Removed class loading with BCEL.
	* src/de/schlund/pfixxml/loader/AppLoader.java:
	Added access method for current AppClassLoader.
	* src/de/schlund/pfixxml/loader/Profiler.java:
	Added constructor and method data output for classinfo command.
	* src/de/schlund/pfixxml/loader/StateTransfer.java:
	Changed back from BCEL to native instance creation handling.

2003-08-01  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/navigation.xsl.in: pfx:button, pfx:jsbutton, pfx:button_impl:
	Added attribute "accesskey" (and handling of it): use the specified accesskey in the
	generated link. This will use a default specified in the navigation structure from depend.xml:
	<page name="foo" handler="/xml/blah" accesskey="D"/> if it's there and no accesskey attribute is given.

	* src/de/schlund/pfixxml/multipart/MultipartHandler.java (parseRequest):
	fixed handling of file upload: now we check if the "filename"
	param is set in the Content-Disposition header and don't simply
	parse everything that has content type "text/*" as a simple field
	parameter (unfortunately some uploaded files with e.g. suffix .txt
	are transmitted as content type text/plain).

2003-07-31 Joerg Haecker  <haecker@schlund.de>

	* src/de/schlund/pfixcore/editor/resources/CRTestcaseImpl.java,
	src/de/schlund/pfixxml/testenv/TestClient.java,
	example/core/editor/txt/pages/main_testcasestart.xml: more information
	printed on selected testcases.

	* src/de/schlund/pfixcore/generator/IWrapperImpl.java(load),
	src/de/schlund/pfixcore/generator/casters/ToFile.java(castValue):
	added some CAT.isDebugEnabled for loops.

	* src/de/schlund/pfixxml/exceptionhandler/PFXHandler.java(ruleNoMatch):
	only do mail of mailsending is enabled.

	* src/de/schlund/pfixcore/workflow/app/DefaultAuthIWrapperState.java(getDocument):
	more information on 'ERROR: Need exactly one interface definition for
	authpage!' exception.

2003-07-30  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/targets/LRUCache.java (getIterator): new
	version of jakarta-ORO returns an Iterator, not an Enumeration.

2003-07-30 Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/StateTransfer.java:
	Added additional parameter to transfer() method: a reference to the current
	object is passed to recursive calls (predecessor object in the new context).
	The reference is passed to the createInstance() method, where it is used for
	for creating inner class instances with a reference to the according outer
	class instances. Added support for creating static nested classes.
	* src/de/schlund/pfixxml/loader/AppClassLoader.java:
	Improved logging.


2003-07-29 Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/Profiler.java:
	Extended type check by traversing all threads (retrieved from thread hierarchy
	resp. ThreadGroups). Thus objects can be found, which aren't directly referenced
	by objects reachable from the usual entry points resp. Reloader implementations.

2003-07-28 Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/AppClassLoader.java:
	AppLoader now gets notified when AppClassLoaders are created or finalized, which
	enables it to discover multiple occurrence.
	* src/de/schlund/pfixxml/loader/AppLoader.java:
	Added simple history mechanism, e.g. for storing information about AppClassLoader
	creation/finalization.
	* src/de/schlund/pfixxml/loader/CommandProcessor.java:
	Added support for new commands: 'history' gets the AppLoader history and 'gcrun'
	runs the garbage collector to force cleaning up after reload.
	* src/de/schlund/pfixxml/loader/Profiler.java:
	Added support for detecting all references to class instances, e.g. synthetic
	fields added by compiler.
	* src/de/schlund/pfixxml/loader/StateTransfer.java:
	Added support for detecting and transferring all references to class instances,
	e.g. synthetic fields added by the compiler.

2003-07-25 Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/CommandProcessor.java
	* src/de/schlund/pfixxml/loader/CommandClient.java
	* apploader.sh

	Did some commandline usage cosmetics. Added help command, which gives
	an overview of all executable AppLoader commands.

2003-07-22 Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixIncludeDialog.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletInfo.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletNeu.java

	Layout changing and BugFixed. Undo/Redo should work now



2003-07-21  Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixIncludeDialog.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletInfo.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletNeu.java

	JTrees added instead of ComboBoxes

2003-07-18  Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixcore/workflow/DirectOutputPageMap.java:
	Now implements Reloader interface (necessary because it holds reloadable DirectOutputStates,
	but isn't referenced by other classes in the AppLoader's scope).

2003-07-17  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: released 0.3.7

2003-07-16  Joerg Haecker <haecker@schlund.de>

	BUGFIX for editor crash when creating new includes
	* de/schlund/pfixcore/editor/auth/EditorUserInfo.java(isIncludeEditAllowed):
	check if part exists first. If not, return if includedit for this
	product is allowed.

	* de/schlund/pfixcore/editor/handlers/IncludesFinalizer.java(renderDefault):
	check if part exists. If not, most of rendering in resdoc is skipped.


2003-07-15  Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/AppClassLoader:
	BCEL repository now gets cleared within AppClassLoader's constructor.
	New method createDefaultConstructor() can create empty default constructors for inner
	classes using BCEL. Added support for detecting and handling inner classes (getClassData).

2003-07-14  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/editor/auth/AuthManagerFactory.java,
	src/de/schlund/pfixcore/editor/auth/FileAuthManager.java: minor

	* src/de/schlund/pfixcore/editor/handlers/(Commons|Images|Includes)Finalizer
	(renderDefault): Only lock if permissions granted (see 2003-07-09)


2003-07-11  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/DirectOutputStateFactory.java (reload):
	new method. Implemented Reloader interfacce and use AppLoader to load the DirectOutputStates.

2003-07-10  Jens Lautenbacher  <jtl@schlund.de>

	* example/servletconf/projects.xml: REMOVED. see below.

	* example/sample1/conf/project.xml.in: New file. This is the
	sample1 project part of the old servletconf/projects.xml file

	* example/servletconf/projects.xml.in: New file. This is the
	common part of the old servletconf/projects.xml file

	* example/core/build/create_projects.xsl: New file. This is used to combine the
	servletconf/projects.xml.in + all found project.xml.in into the old servletconf/projects.xml
	file.

2003-07-09  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/build/create_apacheconf.xsl: now <passthrough> nodes can also be
	under the <project> node in the projects xml file.

2003-07-09  Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixIncludeDialog.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletInfo.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletNeu.java
	* src/de/schlund/pfixcore/editor/EditorHelper.java
	* src/de/schlund/pfixcore/editor/handlers/AppletInfoFinalizer.java

	The Includes/Images functionally for the Editor-Applet is finished
	and should work now. The Layout of the new Frame(PfixIncludeDialog)
	will be changed next time. If anyone had a good idea, let me know :)

2003-07-09  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/editor/handlers/(Commons|Images|Includes)Handler
	(retrieveCurrentStatus): do only lock if allowed

2003-07-08  Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixIncludeDialog.java
	Not finished yet, only a Prototyp

	* editorapplet/Makefile
	Removed unnecessary *.jar files

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletInfo.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletNeu.java
	Changes

2003-07-08  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/editor/EditorUser.java,
	src/de/schlund/pfixcore/editor/auth/AuthManagerFactory.java: more debug output

	* Editor: Now we do not lock the include any more if permission
	denied.
	* src/de/schlund/pfixcore/editor/auth/EditorUserInfo.java: added
	is(Include|DynInclude|Image)EditAllowed.
	* (Commons|Includes)Handler: only lock if permission is granted.
	* (Commons|Includes|Images)UploadHandler: uses XXXEditAllowed
	from EditorUserInfo.

2003-07-08  Volker Zaich <zaich@schlund.de>

	* example/core/editor/conf/config.prop.in
	Removed bugs

	* src/de/schlund/pfixcore/editor/handlers/AppletInfoHandler.java
	Unessecary Handler removed

	* src/de/schlund/pfixcore/editor/handlers/AppletInfoFinalizer.java
	renderAllImages() added

2003-07-08  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/editor/EditorCommonsFactory.java (realInit): new method, delay the initialization
	of the EditorCommonsFactory to the point where we need it.

2003-07-07 Volker Zaich <zaich@schlund.de>

	* src/de/schlund/pfixcore/editor/EditorHelper.java
	New Method: renderIncludesForAppletInfo(TreeSet includes, ResultDocument resdoc, Element root) added.
	Displays all the includes in ResultDocument for the AppletInfo

	* src/de/schlund/pfixcore/editor/handlers/AppletInfoFinalizer.java
	Now works, all Includes are displayed in the ResultSet

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletInfo.java
	Class PfixAppletInfo added. The AppletClass getting the Product-Include-Files from the Server.


2003-07-03  Volker Zaich <zaich@schlund.de>

	* src/de/schlund/pfixcore/editor/handlers/AppletInfoFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/AppletInfoHandler.java
	--> Both Classes are still in work ! Only for testing-reasons committed !

	* editorapplet/Makefile
	* editorapplet/lib/xerces.jar
	Now, the Editor-Applet uses Classes from the xerces.jar for parsing DomTrees

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletNeu.java
	still in work -- only for testing committed !

	* example/core/editor/txt/pages/main_AppletInfo.xml
	* example/core/editor/conf/config.prop.in
	* example/core/editor/conf/depend.xml.in
	New Page added. Page holds informations for the Applet, e.g. all Includes
	or Images in the Project


2003-06-26  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/AbstractXMLServer.java(handleDocument):
	added pagename for XMLException thrown when stylesheet==null.

	* src/de/schlund/pfixxml/FactoryInitServlet.java(init):
	Print some timing infos to debug.

	* src/de/schlund/pfixxml/IncludeDocumentExtension.java,
	src/de/schlund/pfixxml/testenv/XMLSerializeUtil.java,
	src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java: Code cleanup.

	* src/de/schlund/pfixxml/exceptionhandler/ExceptionContext.java,
	src/de/schlund/pfixxml/exceptionhandler/Cubbyhole.java: more debug messages.

	* example/common/conf/pfixlog.xml.in: Added category de.schlund.pfixcore.editor
	to log in LOGGER_EDITOR.

	* Editor changes files:
	example/core/editor/xsl/custommaster.xsl,
	example/core/editor/xsl/metatags.xsl,
	src/de/schlund/pfixcore/editor/EditorUser.java,
	src/de/schlund/pfixcore/editor/auth/EditorUserInfo.java,
	src/de/schlund/pfixcore/editor/auth/FileAuthManager.java,
	src/de/schlund/pfixcore/editor/auth/GlobalPermissions.java,
	src/de/schlund/pfixcore/editor/auth/ProjectPermissions.java,
	src/de/schlund/pfixcore/editor/handlers/AddUserHandler.java,
	src/de/schlund/pfixcore/editor/handlers/EditUserDataHandler.java,
	src/de/schlund/pfixcore/editor/handlers/ImagesUploadHandler.java,
	src/de/schlund/pfixcore/editor/handlers/UserAuthHandler.java: Bugfixes and code clean up.

2003-06-25  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/loader/AppClassLoader.java
	(getClassData): we now use BCEL to add a possibly missing default constructor
	to the bytecode of the classes we load before the VM sees it...

	* src/de/schlund/pfixxml/loader/StateTransfer.java (createInstance):
	...because of this we don't need the native voodoo anymore, but can be sure to create new instances
	via constructor.newInstance().

2003-06-25  Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletNeu.java
	Cosmetics

2003-06-24  Joerg Haecker <haecker@schlund.de>

	* example/common/conf/apploader.prop.in: added support for editor.

	* example/common/conf/factory.prop.in: added AuthManagerFactory(see
	  below)

	* src/de/schlund/pfixcore/editor: added new management of access
	  rights. For details see the pustefix-devel mailing list.
	  This is work in progress.

	* example/core/editor/txt/pages/main_editoruserdata.xml,
	* example/core/editor/txt/pages/main_prodselect.xml,
	* example/core/editor/xsl/metatags.xsl: GUI changes

	* example/common/conf/userdata.xml: adjusted.

2003-06-23  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java: removed the whole stuff of the last change again :-)

2003-06-20  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/IWrapperContainer.java (retrieveCurrentStatus): add a boolean var
	to specify (if true) that only wrappers with errorHappened() == false should be used for
	calling handler.retrieveCurrentStatus(context, wrapper).
	* src/de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (retrieveCurrentStatus):  implement it.
	* src/de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java
	(getDocument): changed accordingly, but no new functionality
	yet. Need to think further about the ramifications.

2003-06-20  Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletNeu.java:
	action = getActionByName(DefaultEditorKit.pasteAction) throws a Null Pointer Exception by the second time,
	now replaced with action = new DefaultEditorKit.PasteAction();

	new protected SelectAll Class added


2003-06-20  Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/AppLoader.java:
	Added state indication support. The new method isLoading() returns
	true while AppLoader is reloading.
	* src/de/schlund/pfixxml/ServletManager.java (doGet):
	If AppLoader is enabled and currently doing a reload, incoming
	requests are blocked until reloading is finished.
	* src/de/schlund/pfixxml/loader/CommandProcessor.java:
	Returns more detailed information about reloading process to
	command client.
	* src/de/schlund/pfixxml/loader/CommandListener.java:
	Changed output formatting.

2003-06-18  Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletNeu.java:
	Some bug fixed

2003-06-18  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: released 0.3.6, started 0.3.7-pre

2003-06-18  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler: cosmetics.

2003-06-18  Martin Leidig  <mleidig@schlund.de>

	* src/de/schlund/pfixxml/PfixServletRequest.java (getRequestParams):
	Added again bugfix for embedded param data processing. Now it is ensured
	that from a set of param names, which differ in their .x or .y
	extensions, only the first occurring param is processed.

2003-06-18  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/forminput.xsl.in: once again we change the way
	<select> and <option> tags are handled --maybe the last time? only
	time will tell...

	pfx:xinp[@type="dynselect"] is now DEPRECATED. pfx:xinp[@type="select"] can now do everything the old
	dyselect stuff did, too.

	pfx:xinp[@type="select"] changed how the actual options are
	rendered; previously, the xinp tag itself selected its pfx:option
	children and rendered them. Now it only calls apply-templates.

	<pfx:option>: a new template that now provides for the rendering
	of the <option> tag

	<pfx:dynoptions optionspath="...">: a new template that provides
	for the rendering of <option> tags supplied via the result tree

2003-06-17  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/PfixServletRequest.java (checkParameterNameForEmbeddedData): Eeek.
	needed to remove bug fix from Martin (see below) as it didn't work for some cases (need to check further)

	* META-INF/pfixcore.version:  released 0.3.5
	started 0.3.6-pre

	* docs/sf/*: new files. Start of sourceforge web site online documentation. Real content follows (I hope)

2003-06-17  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/ServletManager.java(callProcess):
	we do not catch an Exception any more but a Throwable now. So
	we will get a mail for errors like StackOverflowError.

	* src/de/schlund/pfixxml/exceptionhandler:
	Handle a Throwable instead of exception. Added number of
	collected exception in mail subject for report.

2003-06-13  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/navigation.xsl.in: (button_impl) Changed the
	way mode=desc works. It used to not make a link when the page it
	points to or any subpage are the current page. Now only the visible appearence is changed
	when the condition matches, but a link is still created when the current page is a subpage.

2003-06-11  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/script/baselib.js: bug fix from sebastian.werner@schlund.de to
	make the browser detection code work on windows.

	* example/core/xsl/utils.xsl.in: moved the "method" attribute from
	the <pfx:switch> tag to it's child tag <pfx:layer_ref>. This
	allows to specify for each of the ref'ed layers on it's own the
	method used when the switch is clicked.
	* example/sample1/txt/pages/main_home.xml: add an example that
	uses the new functionality

2003-06-11 Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixxml/PfixServletRequest.java:
	Fixed bug. Avoid duplicate key/value pairs for input buttons with
	image type by excluding the according duplicate parameter names
	from embedded data check.

2003-06-10 Joerg Haecker <haecker@schlund.de

	* src/de/schlund/pfixcore/util/email/EmailSender.java(sendMail):
	throw IllegalArgumentException when NPs are passed as params.

2003-06-08  Jens Lautenbacher  <jtl@schlund.de>

	* Makefile:
	* skel/Makefile:
	* skel/Makefile.classes:
	* skel/Makefile.iwrp:
	* skel/defines.inc: cosmetics, remove old cruft.

2003-06-06  Jens Lautenbacher  <jtl@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletNeu.java: made a sane menubar with accelerators.
	Removed some unused code (no need to handle the accelerators in a keymap)

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixTextPane.java: cosmetics

	* Makefile:
	* Makefile.local: cosmetics

2003-06-05  Martin Leidig <mleidig@schlund.de>

	All jserv specific stuff was removed: startscript, stylesheets for propertyfile creation,
	libraries, utility class, make instructions, comments, documentation. The abstraction layer,
	represented by the ContainerUtil class, and the derived container specific classes are
	removed. The new SessionHelper class with its static methods serves as substitution for
	container-independent functions provided by the old classes. ContainerUtil methods
	abstracting container-specific ones are removed and substituted by direct Servlet API calls.

	Changed files:
	* .classpath
	* Makefile
	* Makefile.local
	* docs/README.1st
	* example/INSTALL
	* example/INSTALL.ps
	* example/Makefile
	* example/README.1st
	* example/checkfiles.sh
	* example/core/build/create_apacheconf.xsl
	* example/servletconf/projects.xml
	* skel/Makefile
	* skel/Makefile.classes
	* src/de/schlund/pfixcore/editor/handlers/SessionManagerState.java
	* src/de/schlund/pfixcore/util/MultiTransform.java
	* src/de/schlund/pfixcore/workflow/AuthContext.java
	* src/de/schlund/pfixcore/workflow/Context.java
	* src/de/schlund/pfixxml/AbstractXMLServer.java
	* src/de/schlund/pfixxml/AppContext.java
	* src/de/schlund/pfixxml/ContextXMLServer.java
	* src/de/schlund/pfixxml/DerefServer.java
	* src/de/schlund/pfixxml/DirectOutputServlet.java
	* src/de/schlund/pfixxml/PfixServletRequest.java
	* src/de/schlund/pfixxml/ServletManager.java
	* src/de/schlund/pfixxml/SessionCleaner.java
	* src/de/schlund/pfixxml/exceptionhandler/Cubbyhole.java
	* src/de/schlund/pfixxml/exceptionhandler/ExceptionHandler.java
	* src/de/schlund/pfixxml/serverutil/SessionAdmin.java
	* src/de/schlund/pfixxml/serverutil/SessionInfoStruct.java
	* src/de/schlund/pfixxml/testenv/RecordManager.java

	Removed files:
	* startJServ.sh
	* example/core/build/create_jservconf.xsl
	* example/core/build/create_jservprop.xsl
	* example/core/build/create_jservzones.xsl
	* lib/ApacheJServ.jar
	* lib/jserv/jsdk.jar
	* src/de/schlund/pfixxml/serverutil/ContainerUtil.java
	* src-jserv/de/schlund/pfixxml/serverutil/jserv/ModernJServUtil.java
	* src-tomcat4/de/schlund/pfixxml/serverutil/tomcat4/TomcatUtil.java

	Added files:
	* src/de/schlund/pfixxml/serverutil/SessionHelper.java

2003-06-04  Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/Profiler.java:
	Added class which does some application introspection via reflection. E.g. it
	tries to detect if there are class definitions loaded by different AppLoaders,
	it also provides some statistics (object count grouped by classes and classloaders).
	It can be run using the commandline tool.
	* src/de/schlund/pfixxml/loader/CommandProcessor.java:
	Added new commands for Profiler usage. 'typecheck' does some application introspection,
	'classinfo' prints out some class information, like class hierarchy and members.

2003-06-04  Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/StateTransfer.java:
	Optimized lookup strategy for packages which are excluded form traversing during
	state transfer. Removed logging of object value in debug mode to avoid possible
	ClassCastExceptions.

2003-06-03  Martin Leidig <mleidig@schlund.de> J?rg H?cker <haecker@schlund.de>

	* META-INF/pfixcore.version: released 0.3.4 - started 0.3.5-pre.

2003-06-03  Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/AppLoader.java:
	Added support for excluding packages from traversing during state transfer (configurable in
	property file). Single classes within such a package can be (re)included to override
	package exclusion.
	* src/de/schlund/pfixxml/loader/AppLoaderConfig.java:
	Extended configuration reading for new traverse configuration properties.
	* src/de/schlund/pfixxml/loader/StateTransfer.java:
	Instances of external classes now are only traversed if their package isn't excluded or the
	class is explicitly included.
	* example/common/conf/apploader.prop.in:
	Added properties to exclude packages/include classes for state transfer.

2003-06-02  Joerg Haecker <haecker@schlund.de>

	* changed commons-httpclient-2.0-alpha2.jar
	to lib/commons-pfix_httpclient-2.0-beta1.jar:
	Cause: Some applications use the webdav library
	which needs 'commons-httpclient.jar'. To avoid class
	name conflicts, 'commons-pfix_httpclient-2.0-beta1.jar'
	is added with different package name.

	* src/de/schlund/pfixxml/testenv/TestClient.java:
	changes for commons-pfix_httpclient-2.0-beta1.jar.

2003-06-02  Volker Zaich <zaich@schlund.de>

	* example/core/editor/xml/three_frames_applet.xml
	Another small Java-Script Mozilla Bug fixed

2003-05-28  Martin Leidig <mleidig@schlund.de>

	* skel/projects/servletconf/projects.xml:
	added connector attribute minProcessors

2003-05-28  Martin Leidig <mleidig@schlund.de>

	* example/core/build/create_serverxml.xsl:
	added connector attribute minProcessors, set default values for minProcessors and maxProcessors
	* example/servletconf/projects.xml:
	added connector attribute minProcessors

2003-05-28  Volker Zaich <zaich@schlund.de>

	* example/core/editor/xml/three_frames_applet.xml
	* example/core/editor/xsl/metatags.xsl
	Java-Script Bugs for IE fixed.

2003-05-27  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/script/baselib.js: commented out browser detection code until it works with IE

2003-05-26  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/editor/handlers/TargetsHandler.java
	* src/de/schlund/pfixcore/editor/handlers/PagesHandler.java(handleSubmittedData:)
	try-catch around target.getValue(). See jtls entry.

2003-05-26  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/editor/EditorHelper.java
	(doUpdateForAuxDependency): try-catch around getValue: we don't
	want the editor to crash because of buggy client code.

2003-05-26  Martin Leidig  <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/StateTransfer.java:
	Object references for reference resolution are no longer stored directly in hashmaps or hashsets,
	instead their unique hashcode provided by System's identityHashCode method is used. Improved logging
	performance (see below).

	* src/de/schlund/pfixxml/loader/AppClassLoader.java:
	Improved logging performance by doing conditional logging, avoiding time-consuming string manipulation
	and logging api calls.

2003-05-23  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: released 0.3.3 - started 0.3.4-pre.

	* example/core/xsl/utils.xsl.in: new features + cleanup for pfX:layer and related:
		- You can specify what method a switch should call on the layer: on, off, and the default toggle.
		- You can specify a class attribute for pfx:on and pfx:off
		- You can specify the html container a pfx:laer should by setting the "element" attribute; "div" is
		  the default, but now you can also use tr, td, table, span or stuff like that.

	* example/core/script/baselib.js: heavy cleanup + bug fixes for pfx:layer handling.

	* example/sample1/txt/pages/main_home.xml: show new functionality.

2003-05-22  Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/StateTransfer.java:
	Added special handling for HashMaps and Hashtables, which ensures that stored hash data is
	updated when contained objects are reloaded. HashSets are handled as before (since internally
	also HashMaps are used).

	* src/de/schlund/pfixxml/loader/StateTransferException.java:
	Exceptions of type UNHANDLED now give back additional stacktrace information when toString() is called.

2003-05-21  Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/StateTransfer.java:
	Improved array transfer and circular reference handling. Transfer now runs up to 5 times faster.

2003-05-21  Joerg Haecker / Martin Leidig <haecker@schlund.de> <mleidig@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/ResdocFinalizerFactory.java:
	Added reloading support for ResdocFinalizers.

2003-05-21  Jens Lautenbacher  <jtl@schlund.de>

	* skel/INSTALL: added.

2003-05-20  Martin Leidig  <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/AppClassLoader:
	Fixed bug (added package defining).

2003-05-19  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/util/MakeStatusMessageXML.java
	(updatePart): bug fix, really delete the children before updating

	* Makefile: quite some changes to make generation of a skeleton package work.

	* src/de/schlund/pfixcore/util/MakeStatusMessageXML.java (addMessageToLangElem): new private method used to
	add the default message of a statuscode to the <lang> node. This method now handles the message as a xml fragment.
	This allows e.g. to also use <pfx:argref> or other tags right in the default message.

	* src/de/schlund/pfixxml/ResultDocument.java (addUsedNamespace): new method: add namespaces used in the result tree.
	* src/de/schlund/pfixcore/editor/handlers/IncludesFinalizer.java (renderDefault): use this to add all namespaces defined
	for the product (because they could occur in an include part)

	* example/core/xsl/customizestylesheet.xsl: new file. this replaces
	all the custommetatags files currently in use.
	* ..../depend.xml.in: use it.

	* META-INF/pfixcore.version: start 0.3.3-pre

2003-05-17  Jens Lautenbacher  <jtl@schlund.de>

	* Makelfile:
	* skel/*: more work for skeleton generation

	* src/de/schlund/pfixcore/util/MultiTransform.java (doServletZone): don't require to build jserv anymore

2003-05-16  Joerg Haecker <haecker@schlund.de>

	* skel: added skeleton project directory. Work in progress.

2003-05-15  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/*: Bugfix
	for NPException when mailsending is disabled but
	exceptionhandler tries to send a mail.

2003-05-14  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/Target.java: getValue()
	now throws TargetGenerationException.

	* src/de/schlund/pfixxml/targets/TargetImpl.java(getValue):
	catch all exeptions thrown by getModTimeMaybeUpdate() and
	other methods. Throw a TargetGenerationException instead.

2003-05-14  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: released 0.3.2 - bug fix release again :-(

2003-05-14  Martin Leidig  <mleidig@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/DefaultAuthIWrapperState.java:
	Important bugfix, now uses AppLoader for creation of IWrapper instances

2003-05-14  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: released 0.3.1 (bug fix release)

2003-05-13  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: starting 0.3.1-pre
	cosmetics

2003-05-13 Martin Leidig  <mleidig@schlund.de>

	* src/de/schlund/pfixxml/loader/StateTransfer.java:
	Added support for handling different java versions and the different ways instances of classes
	with no no-arg constructors are created. Now supports Sun and IBM JDK versions 1.3.x and 1.4.x.

2003-05-12  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: released 0.3.0

2003-05-12 Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/TargetGenerator.java(main):
	System.exit() on all exceptions other than TargetGenerationException.

	* src/de/schlund/pfixcore/editor/resources/CRTestcaseImpl.java:
	fixed crash if tested server crashes.

2003-05-11 Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixHighlight.java
	Layout-Changing


2003-05-09 Joerh Haecker <haecker@schlund.de>

	* example/sample1/conf/depend.xml.in: remove recordmode_allowed attribute. If record_dir is set,
	recordmode is allowed.

	* src/de/schlund/pfixxml/targets/TargetGenerationException.java,
	src/de/schlund/pfixxml/testenv/RecordManager.java: made
	more functions!

	* example/core/editor/txt/pages/main_testcaseoverview.xml: use the
	displayerrortree tag for representing exceptions from TestClient.

	* src/de/schlund/pfixxml/testenv/RecordManagerFactory.java(createRecordManager):
	now throws ParserConfigurationException, SAXException, IOException.

	* src/de/schlund/pfixxml/testenv/TestClientException.java: added
	getXMLRepresentation().

	* src/de/schlund/pfixxml/testenv/TestcasePlaybackResult.java: added
	methods and field to hold an exception.

	* src/de/schlund/pfixcore/editor/resources/CRTestcase.java(executeTest):
	throws now TestClientException.

	* src/de/schlund/pfixcore/editor/resources/CRTestcaseImpl.java:
	getAvailableTestcaseDir(): now throws TestClientException.
	executeTest(): adjusted.
	insertStatus: append the errortree to the resulttree if exceptions
	occur.

	* src/de/schlund/pfixcore/editor/handlers/TestcaseStartHandler.java
	(handleSubmittedData): finallay catch the TestClientException.
	NOTE: error handling happens in CRTestcaseImpl.executeTest()


2003-05-09  Martin Leidig <mleidig@schlund.de>

	Added dynamic class reloading support. New files:

	* apploader.sh:
	shell script to control class reloading mechanism from commandline
	* example/common/conf/apploader.prop.in:
	class reloading mechanism configuration file
	* src/de/schlund/pfixxml/loader/AppClassLoader.java:
	adapted classloader implementation
	* src/de/schlund/pfixxml/loader/AppLoader.java:
	application loader
	* src/de/schlund/pfixxml/loader/AppLoaderConfig.java:
	manages configuration
	* src/de/schlund/pfixxml/loader/AppLoaderConfigException.java:
	handles configuration errors
	* src/de/schlund/pfixxml/loader/CommandClient.java:
	commandline tool, called by shell script
	* src/de/schlund/pfixxml/loader/CommandListener.java:
	listens for reloading commands via socket
	* src/de/schlund/pfixxml/loader/CommandProcessor.java:
	processes reloading commands
	* src/de/schlund/pfixxml/loader/IllegalCommandException.java:
	handles command errors
	* src/de/schlund/pfixxml/loader/Reloader.java:
	interface for reload event listeners
	* src/de/schlund/pfixxml/loader/StateTransfer.java:
	transfers object state
	* src/de/schlund/pfixxml/loader/StateTransferException.java:
	handles state transfer errors

	Changes:

	* Makefile:
	now only resources are deployed as jar file in tomcat's lib directory,
	classes are made available with a symbolic link in tomcat's classes
	directory
	* Makefile.local:
	added new entry for loader directory
	* example/common/conf/factory.prop.in:
	start application loader as factory
	* example/common/conf/pfixlog.xml.in:
	log application loader messages in own file
	* src/de/schlund/pfixcore/generator/IHandlerFactory.java
	* src/de/schlund/pfixcore/workflow/ContextResourceManager.java
	* src/de/schlund/pfixcore/workflow/PageMap.java
	* src/de/schlund/pfixcore/workflow/StateFactory.java
	* src/de/schlund/pfixcore/workflow/app/IHandlerSimpleContainer.java
	* src/de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java
	* src/de/schlund/pfixxml/FactoryInitServlet.java:
	the above classes register themselves as reloading entry points and
	provide an according reload method


2003-05-09  Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixHighlight.java
	More ugly Syntax-Hilighting Bux fixed

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletNeu.java
	Close button added

2003-05-09  Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixTextPane.java
	Closing Tags should work now ! Comment-Tags and already-Closed-tags
	will be ignored.


2003-05-08  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/AbstractXMLServer.java(handleXXXProps):
	moved debugging output from INFO to DEBUG.

	* src/de/schlund/pfixxml/ServletManager.java(relocate):
	SC_MOVED_TEMPORARILY is now accessed in a static way.

	* src/de/schlund/pfixxml/DirectOutputServlet.java,
	src/de/schlund/pfixxml/SessionCleaner.java,
	src/de/schlund/pfixxml/targets/TargetGenerationException.java:
	organized imports.

	* src/de/schlund/pfixxml/targets/TargetImpl.java,
	src/de/schlund/pfixxml/targets/VirtualTarget.java,
	src/de/schlund/pfixxml/targets/X[M|S][Leaf|Virtual]Target.java: javadoc


2003-05-08  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java: cosmetics

	* src/de/schlund/pfixxml/ResultDocument.java (init): we need to set the ixsl namespace here
	now, as the content of nodes edited in the cms is inserted literally into the result tree.

2003-05-08  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java:
	added class implementing ErrorListener for handling corrupt
	xsl-expressions during transformation.
	xslObjectFromDisc: Set this ErrorListener to the TransformerFactory.

	* src/de/schlund/pfixxml/targets/TargetGenerationException.java:
	added getXMLRepresentation and getStringRepresentation which replace
	the utility methods in AbstractXMLServer and TargetGenerator.

	* src/de/schlund/pfixxml/AbstractXMLServer.java,
	src/de/schlund/pfixxml/targets/TargetGenerator.java: use functionality
	from TargetGenerationException.

2003-05-08  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/targets/TargetImpl.java (getValue):
	really set the TargetKey in the Exception

	* src/de/schlund/pfixxml/AbstractXMLServer.java (insertErrInfo): new helper method
	(printEx): much smaller now. reorder generated xml output.

	* example/core/xsl/errorrepresentation.xsl.in: make it look cute.

2003-05-08  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/xsl/metatags.xsl: fix frame and target for "used Includes" to not always
	reload _top. Some little cleanups.

2003-05-08  Volker Zaich <zaich@schlund.de>
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletNeu.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixCheckXml.java
	XML-Error Message will now displayed in a Message-Box

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixHighlight.java
	another little Syntax-Hilighting Bug fixed
	Some Styles changed

2003-05-07  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/AuxDependency.java,
	* src/de/schlund/pfixxml/targets/PageInfoFactory.java,
	* src/de/schlund/pfixxml/targets/PageTargetTree.java,
	* src/de/schlund/pfixxml/targets/LRUCache.java,
	* src/de/schlund/pfixxml/targets/TargetGeneratorFactory.java: organized
	imports.

	* src/de/schlund/pfixxml/targets/TargetRW.java(getCurrValue): now
	throws TransformerException.

	* src/de/schlund/pfixxml/targets/TargetImpl.java:
	getValueFromDiscCache: now throws TransformerException.
	getModTimeMaybeUpdate: now throws  TargetGenerationException,
	 XMLException, ParserConfigurationException, IOException.
	getValue: now throws TargetGenerationException, XMLException,
	 ParserConfigurationException, IOException
	getCurrValue: adjusted.

	* src/de/schlund/pfixxml/targets/VirtualTarget.java:
	getModTimeMaybeUpdate: adjusted.
	generateValue: now throws XMLException, TransformerException,
	ParserConfigurationException, IOException.

	* src/de/schlund/pfixxml/targets/X[M|S]L[Virtual|Leaf]Target.java:
	getValueFromDiscCache: adjusted.

	* src/de/schlund/pfixxml/targets/LeafTarget.java:
	getModTimeMaybeUpdate: adjusted

	* src/de/schlund/pfixxml/AbstractXMLServer.java,
	src/de/schlund/pfixxml/IncludeDocumentExtension.java: minor

	* src/de/schlund/pfixxml/targets/AuxDependencyManager.java:
	saveAuxdepend: now throws ParserConfigurationException, IOException

	* src/de/schlund/pfixxml/targets/PublicXSLTProcessor.java:
	applyTrafoForOutput, xmlObjectFromDocument: now throws
	TransformerException.

	* src/de/schlund/pfixxml/targets/PustefixXSLTProcessor.java:
	xslObjectFromDisc: now throws TransformerConfigurationException
	xmlObjectFromDisc: now throws TransformerException

	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java:
	applyTrafoForOutput: adjusted.

2003-05-07  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/txt/pages/main_testcasestart.xml:
	* example/core/editor/txt/pages/main_testcaseoverview.xml: cosmetics.

2003-05-07  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/testenv/RecordManager.java(doRecord): bugfix,
	now we serialize to the right location.

2003-05-07  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/targets/VirtualTarget.java (getModTimeMaybeUpdate): set storedException to null.
	set modification time to -1 to force rebuild in all circumstances.

2003-05-07  Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixTextPane.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletNeu.java
	Undo/Redo-Bugs fixed

	* editorapplet/src/de/schlund/pfixeditor/editor/PfixHighlight.java
	Some known Syntax-Highlighting Bux Fixed and Style-Changing (Comment)

2003-05-07  Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/editor/LineNumber.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixAppletNeu.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixCheckXml.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixHighlight.java
	* editorapplet/src/de/schlund/pfixeditor/editor/PfixTextPane.java
	- Copyright License added
	- Search/Replace added
	- Shortcutz for undo/redo added

	* example/core/script/xmlEditorApplet.jar

2003-06-07  Volker Zaich <zaich@schlund.de>

	All unused-Applet Classes removed


2003-05-06  Joerg Haecker <haecker@schlund.de>

	* example/core/xsl/errorrepresentation.xsl.in: small changes.

	* example/core/xsl/include.xsl.in: removed error-handling from 2003-04-28.

	* src/de/schlund/pfixxml/targets/TargetGenerationException.java: added
	class representing all errors which can occur during generation of a
	target.

	* src/de/schlund/pfixxml/AbstractXMLServer.java(handleDocument):
	try/catch block around target.getValue(). Catches
	TargetGenerationException now.

	* src/de/schlund/pfixxml/IncludeDocument.java: createDocument now
	throws SAXException, IOException and TransformerException. Moved
	DocumentBuilder to a static class variable.

	* src/de/schlund/pfixxml/IncludeDocumentFactory.java: getIncludeDocument
	now throws SAXException, IOException and TransformerException.

	* src/de/schlund/pfixxml/IncludeDocumentExtension.java(get): catch
	SAXExceptions only after getting IncludeDocument.

	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java:
	xmlObjectFromDocument now throws TransformerException.

	* src/de/schlund/pfixxml/targets/VirtualTarget.java(getModTimeMaybeUpdate):
	throw a TargetGenerationException on target specific errors.

	* src/de/schlund/pfixxml/targets/TargetGenerator.java: prints a report
	to screen after generation is complete.

2003-05-05  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/include.xsl.in:
	* example/core/xsl/forminput.xsl.in:
	* example/core/xsl/navigation.xsl.in: added <pfx:anchor frame="...">ANCHOR NAME</pfx:anchor>
	as a new child of <pfx:button> und <pfx:xinp type="submit|image">. You can
	still use the old <pfx:argument name="__anchor">FRAMENAME|ANCHORNAME</pfx:argument> but
	this is deprecated (FRAMENAME:ANCHORNAME is deprecated anyway, see below).

	* example/core/editor/xsl/metatags.xsl: changed to use <pfx:anchor>

	* src/de/schlund/pfixxml/AbstractXMLServer.java (createAnchorMap):
	chenged to prefer "|" as a separator between frame name and anchor
	name (the ":" is still valid for now but deprecated).

2003-05-05  Volker Zaich <zaich@schlund.de>

	* editorapplet/src/de/schlund/pfixeditor/test/LineNumber.java
	* editorapplet/src/de/schlund/pfixeditor/test/PfixAppletNeu.java
	* editorapplet/src/de/schlund/pfixeditor/test/PfixCheckXml.java
	* editorapplet/src/de/schlund/pfixeditor/test/PfixHighlight.java
	* editorapplet/src/de/schlund/pfixeditor/test/PfixTextPane.java
	Classes for the new Applet. The directory has to be renamed ! Test is ugly ..

	* example/core/editor/xml/three_frames_applet.xml
	* example/core/editor/xsl/metatags.xsl
	For new Applet

	* example/core/script/xmlEditorApplet.jar
	The New Aplett jar-File


2003-05-02  Joerg Haecker <haecker@schlund.de>

	NOTE: things in my entry from 2003-04-28 are not longer  valid.
	Error handling works different now.

	* src/de/schlund/pfixxml/targets/TargetImpl.java: field added which
	stores an exception.

	* src/de/schlund/pfixxml/targets/VirtualTarget.java(getModTimeMaybeUpdate):
	handle exceptions thrown by generateValue.

	* src/de/schlund/pfixxml/IncludeDocumentExtension.java(get): instead
	of only throwing exceptions, we catch it, store it in the current target
	and then throw it again.

	* src/de/schlund/pfixxml/AbstractXMLServer.java(handleDocument): Catch
	exception thrown by target.getValue(). If exceptions occur, generate
	an error page and write it directly to the client.

	* example/core/xsl/errorrepresentation.xsl.in: added stylesheet
	for rendering error messages.

2003-04-30  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/*: refactoring. now
	uses de.schlund.pfixcore.util.email.EmailSender.

2003-04-28  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/util/CheckIncludes.java (checkForUnusedIncludes):
	now we don't insert only the text extract but the whole content of the include.

2003-04-28  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/IncludeDocumentExtension.java(get):
	returns an error-tree if exceptions occur when trying to
	read include-documents from IncludeDocumentFactory.
	CAUTION: IncludeDocumentExtension will only catch SAXParseExceptions,
	others will be thrown again. 'Make generate' MUST report
	an error on corrupt XML files. IncludeDocument now prints
	an error message on console via log4j if SAXParseExceptions
	occur.

	* example/core/xsl/include.xsl.in: render the error-tree
	if necessary.

2003-04-25  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/xsl/metatags.xsl: removed editor applet stuff. This is work in progress for
	the new editor applet.

	* src/de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (EditorStdHandler):
	removed URL En/Decoding. Removed applet stuff in preparation for new Applet.

2003-04-24  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/testenv/XMLSerializeUtil.java: added
	class with utility methods for serializing XML documents.

	* src/de/schlund/pfixxml/testenv/RecordManager.java
	* src/de/schlund/pfixxml/testenv/TestClient.java: use
	XMLSerializeUtil now.

	* src/de/schlund/pfixcore/generator/IHandler.java
	* src/de/schlund/pfixcore/generator/IWrapper.java: javadoc added.

2003-04-16  Jens Lautenbacher  <jtl@schlund.de>

	* released 0.2.9

	* example/core/script/baselib.js (__js_Layer_checkCookies): added missing "="
	(bug reported by sebastian.werner@schlund.de)

	* src/de/schlund/pfixcore/util/CheckIncludes.java (checkForUnusedIncludes): Now also print out the
	value of all alt and title tags (as they may contain visible content, too that may need translation)

2003-04-14  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/targets/AuxDependencyManager.java:
	* src/de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java:
	* src/de/schlund/pfixcore/editor/handlers/IncludesBranchHandler.java:
	* src/de/schlund/pfixcore/editor/EditorUserFactory.java:
	* src/de/schlund/pfixcore/editor/EditorHelper.java: more FileWriter=>FileOutputStream

2003-04-11  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/utils.xsl.in:
	* example/core/script/baselib.js: make layers remember their state (open/closed) via cookies. work in progress.

	* src/de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (handleSubmittedData): fix another
	FileWriter occurance unfortunately at a very prominent position... This is a critical bug fix.

2003-04-10  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/editor/resources/CRTestcaseImpl.java
	* src/de/schlund/pfixxml/testenv/ConsoleTestClient.java
	* src/de/schlund/pfixxml/testenv/TestClient.java: some refactoring and
	fixes

	* src/de/schlund/pfixxml/AbstractXMLServer.java: minor

2003-04-09  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/util/CheckIncludes.java: new class. This is work in progress.
	It will be used to check for unused includes, maybe automatically deleting them and producing
	text excerpts from include parts and other stuff.
	* example/core/build/unused.xsl: also part of this stuff...

2003-04-09 Joerg Haecker <haecker@schlund.de>

	* docs/Pustefix_testing_guide.txt: improved

	* example/core/editor/txt/pages/main_testcaseoverview.xml
	* src/de/schlund/pfixcore/editor/resources/CRTestcaseImpl.java:
	application specific changes.

	* src/de/schlund/pfixxml/testenv/ConsoleTestClient.java:
	removed spaghetti command line. Most command-line parameters
	are optional now. If not given, default values will be used.

	* src/de/schlund/pfixxml/testenv/TestClient.java: added more
	debugging info.

2003-04-08 Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/editor/handlers/TestcaseDeleteHandler.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseOverviewHandler.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseResetHandler.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseStartHandler.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseSelectHandler.java
	* src/de/schlund/pfixcore/editor/resources/CRTestcase.java
	* src/de/schlund/pfixcore/editor/resources/CRTestcaseImpl.java
	* example/core/editor/txt/pages/main_testcaseoverview.xml
	* example/core/editor/txt/pages/main_testcaseselect.xml
	* example/core/editor/txt/pages/main_testcasestart.xml:
	application specific changes

	* src/de/schlund/pfixxml/testenv/ConsoleTestClient.java
	* src/de/schlund/pfixxml/testenv/RecordManager.java
	* src/de/schlund/pfixxml/testenv/RecordManagerException.java
	* src/de/schlund/pfixxml/testenv/RecordManagerFactory.java
	* src/de/schlund/pfixxml/testenv/TestClient.java
	* src/de/schlund/pfixxml/testenv/TestClientException.java
	* src/de/schlund/pfixxml/testenv/TestcasePlaybackResult.java
	* src/de/schlund/pfixxml/testenv/TestcaseStepResult.java:
	smaller changes, added java-doc

	* example/testenv/log4jconf.xml: added simple log4j config
	for ConsoleTestClient

	* docs/Pustefix_testing_guide.txt: added and started

2003-04-03 Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/IncludeDocumentExtension.java(get): Track the
	dependencies if exceptions occur. Catch them, track the dependency and
	throw them again.

	* example/core/editor/conf/config.prop.in: removed ugly finalizers for
	testcase-app.
	* example/core/editor/txt/pages/main_home.xml
	* example/core/editor/txt/pages/main_testcaseoverview.xml
	* example/core/editor/txt/pages/main_testcaseselect.xml
	* example/core/editor/txt/pages/main_testcasestart.xml: gui changes

	* src/de/schlund/pfixxml/testenv/ConsoleTestClient.java
	* src/de/schlund/pfixxml/testenv/TestcasePlaybackResult.java
	* src/de/schlund/pfixxml/testenv/TestcaseStepResult.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseDeleteHandler.java
	* src/de/schlund/pfixcore/editor/interfaces/TestcaseDelete.iwrp: added

	* src/de/schlund/pfixcore/editor/handlers/TestcaseOverviewHandler.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseResetHandler.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseSelectHandler.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseStartHandler.java
	* src/de/schlund/pfixcore/editor/interfaces/TestcaseSelect.iwrp
	* src/de/schlund/pfixcore/editor/interfaces/TestcaseStart.iwrp
	* src/de/schlund/pfixcore/editor/resources/CRTestcase.java
	* src/de/schlund/pfixcore/editor/resources/CRTestcaseImpl.java:  application specific changes

	* src/de/schlund/pfixxml/testenv/RecordManager.java
	* src/de/schlund/pfixxml/testenv/TestClient.java: changes

	* src/de/schlund/pfixcore/editor/handlers/TestcaseOverviewFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseSelectFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseStartFinalizer.java: removed

2003-04-03  Jens Lautenbacher  <jtl@schlund.de>

	* example/servletconf/projects.xml:
	* example/core/build/create_serverxml.xsl: added a new config parameter for the server.xml:
	connectorport. If not given, it will default to 8009.

	* src/de/schlund/pfixxml/ServletManager.java (registerSession): not simply uuse the last two digits,
	but instead the part after the last "." from the session id as a suffix to the visit_id.

2003-04-02  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/PFConfigurationException.java:
	* src/de/schlund/pfixxml/exceptionhandler/ExceptionHandler.java:
	* src/de/schlund/pfixxml/exceptionhandler/PropertyManager.java:
	* src/de/schlund/pfixxml/testenv/TestClientException.java:
	* src/de/schlund/pfixxml/testenv/RecordManagerException.java:
	* src/de/schlund/pfixxml/testenv/TestClient.java: make it compile with java 1.4
	Basically just renaming "getCause" methods to non conflicting name "getExceptionCause".
	This should be ported to the real 1.4 api as soon as we have completed the switch.

2003-03-31  Martin Leidig  <mleidig@schlund.de>
	* example/core/build/create_propfiles.xsl: fixed some bugs concerning transformation
	of new property file format, i.e. getting prefix for pagerequest parameters within
	custom choose/test elements, adding support for choose/test elements within
	servletinfo tag.

2003-03-27  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/testenv/RecordManager.java
	(RecordManager): some changes to help with weird errors on certain
	machines (jserv only??)  Still don't really know the cause, but
	changed some stuff nevertheless: DocumentBuilderFactory is now
	inited statically. We don't force a saxxon DOM anymore.  We don't
	use complicated xpath stuff to simply check an attribute in the
	top level element.  The attribute "recodmode_allow" is no longer
	used. We simple check for "record_dir", and if it's there, the
	recordmode is allowed, if not recordmode is forbidden.

	Removed some instances of RecordManagerException... If just
	catching perfectly legal Exceptions, what is the point to NOT throw them, instead wrap
	them in a new Exception type? This will not work like this anyway for 1.4.1 IIRC.

	(writeDocument): use an FileOutputStream, not a FileWriter. see below.

2003-03-25  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/Context.java (addNavigation): rewrote the
	handling of non-autoinvalidating the navigation: We store a HashMap now which may
	contain the status of the pages from the last time. This can be reused.
	(recursePages): also hand the navigation status HashMap when autoinvalidate != true.
	Try to reuse status from this map.

	* src/de/schlund/pfixcore/util/MakeStatusMessageXML.java (writeFile): don't
	use a FileWriter, as we can't set the encoding there!!!!
	We ABSOLUTELY need to make sure that this bug isn not present anywhere else!!!

2003-03-24  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/testenv/TestClient.java: formserial
	is deleted by code, no stylesheet needed any more.

	* src/de/schlund/pfixxml/testenv/RecordManager.java: code cleanup

	* src/de/schlund/pfixxml/AbstractXMLServer.java: Debug code + xsl
	parameter changes for editconsole.

	* src/de/schlund/pfixcore/editor/handlers/TestcaseResetHandler.java
	* src/de/schlund/pfixcore/editor/interfaces/TestcaseReset.iwrp: added

	* example/core/editor/conf/config.prop.in
	* example/core/editor/txt/navigation.xml
	* example/core/editor/txt/pages/main_home.xml
	* example/core/editor/txt/pages/main_testcaseoverview.xml
	* example/core/editor/txt/pages/main_testcaseselect.xml
	* example/core/editor/txt/pages/main_testcasestart.xml
	* example/core/xsl/include.xsl.in
	* src/de/schlund/pfixcore/editor/handlers/TestcaseSelectFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseSelectHandler.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseStartFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseStartHandler.java
	* src/de/schlund/pfixcore/editor/resources/CRTestcase.java
	* src/de/schlund/pfixcore/editor/resources/CRTestcaseImpl.java:
	changes for play-back of recorded testcases in editor.

2003-03-21  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/AbstractXMLServer.java: removed code
	making decisions on record mode. Moved this code to RecordManager.
	Now the record manager is configured for each servlet(depend.xml).
	Only one global property left to enable or disable record mode.

	* src/de/schlund/pfixxml/testenv/RecordManager.java
	* src/de/schlund/pfixxml/testenv/TestClient.java: changes for
	integration into pustefix cms.

	* src/de/schlund/pfixcore/editor/resources/EditorRes.java:
	added method for retrieving CR for testcases.

	* src/de/schlund/pfixcore/editor/EditorProductFactory.java
	* src/de/schlund/pfixcore/editor/EditorProduct.java: store path
	to depend.xml in EditorProduct.

	* example/core/editor/txt/pages/main_testcaseoverview.xml
	* example/core/editor/txt/pages/main_testcaseselect.xml
	* example/core/editor/txt/pages/main_testcasestart.xml
	* src/de/schlund/pfixcore/editor/handlers/TestcaseOverviewFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseOverviewHandler.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseSelectFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseSelectHandler.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseStartFinalizer.java
	* src/de/schlund/pfixcore/editor/handlers/TestcaseStartHandler.java
	* src/de/schlund/pfixcore/editor/interfaces/TestcaseOverview.iwrp
	* src/de/schlund/pfixcore/editor/interfaces/TestcaseSelect.iwrp
	* src/de/schlund/pfixcore/editor/interfaces/TestcaseStart.iwrp
	* src/de/schlund/pfixcore/editor/resources/CRTestcase.java
	* src/de/schlund/pfixcore/editor/resources/CRTestcaseImpl.java:
	 added pages, handlers, finalizers, iwrapper and contextresource for test case
	 handling in pustefix cms.

	* example/sample1/conf/depend.xml.in
	* example/core/editor/txt/navigation.xml
	* example/core/build/create_depend.xsl
	* example/core/editor/conf/depend.xml.in
	* example/core/editor/conf/config.prop.in : adjusted.

	* example/common/conf/pustefix.prop.in: removed recordmode_logdir
	  property

	* src/de/schlund/pfixxml/testenv/RecordManagerFactory.java: added,
	RecordManagers are created by this factory. For every depend.xml one
	RecordManager is created.

	* src/de/schlund/pfixcore/workflow/app/IHandlerContainer.java
	* src/de/schlund/pfixcore/workflow/app/IWrapperContainer.java
	* src/de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java: minor

	* example/testenv/log4jconf.xml: added. Sample log4j config for
	TestClient running in terminal.

	* NOTE: Testcase handling in pustefix cms ready for production use yet!

2003-03-21  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/SessionCleaner.java (storeSPDocument): remove the boolean stattask parameter,
	add the int timeout. We unconditionally create TimerTask, but can specify different timeout values.

	* example/common/conf/pustefix.prop.in: set the property sessioncleaner.timeout to 20 for mode=prod and
	600 for mode=test.

	* src/de/schlund/pfixxml/AbstractXMLServer.java (initValues): read another property
	sessioncleaner.timeout to specify how long the timeout for removing the SPDocument should be.

2003-03-20  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/serverutil/NoCopySessionData.java: new
	dummy interface. Use to mark all classes whose objects shouldn't
	be copied from one session to another, new one (for the jump
	NON_SSL => SSL)
	* src-jserv/de/schlund/pfixxml/serverutil/jserv/ModernJServUtil.java (copySessionData):
	* src-tomcat4/de/schlund/pfixxml/serverutil/tomcat4/TomcatUtil.java (copySessionData): use this here for an instance of check.
	* src/de/schlund/pfixxml/SPDocument.java (SPDocument): implement the interface.

	* src/de/schlund/pfixxml/AbstractXMLServer.java (process): call SessionCleaner.storeSPDocument() to store the doc into the session.
	Use editmodeAllowed as the last parameter so the stored SPDocuments will not be removed when also editMode is allowed (this is for
	development purposes: in development mode we want to have the stored SPDocument always there for debugging)

	* src/de/schlund/pfixxml/SessionCleaner.java (SessionCleanerTask): new class. This class starts a Timer thread that removes
	stored SPDocuments from sessions after a certain timeout (currently 30 secs). This should greatly improve our memory usage, as these docs won't
	hang around 'till the session finally expires when the user stops clicking.

	* example/core/xsl/forminput.xsl.in: really make selective display of errors via paramref work.

2003-03-19  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/DefaultAuthIWrapperState.java (auxEchoData): also echo all "__anchor"
	parameters.

2003-03-18  Joerg Haecker <haecker@schlund.de>

	* example/core/xsl/include.xsl.in: changes in editconsole
	for recording

2003-03-18  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/utils.xsl.in: per advice from mleidig@schlund.de: return false
	in the javascript call in pfx:switch. This fixes a lot of annoying problems.

2003-03-07  Joerg Haecker <haecker@schlund.de>

	* Added graphical management for record mode:
	* example/core/xsl/include.xsl.in: changes
	* src/de/schlund/pfixxml/AbstractXMLServer.java: changes
	* example/core/img/player_[pause|play].png: added

2003-03-07  Jens Lautenbacher  <jtl@schlund.de>

	* example/INSTALL.ps: new file. Is made downloadable via a
	DirectOutputState.

	* example/servletconf/projects.xml: add the /xml/download servlet
	to the sample1 project (it's a  DirectOutputServlet).

	* example/sample1/conf/depend.xml.in:
	* example/sample1/txt/pages/main_home.xml: made relevant changes
	for the new "install" page.

	* src/de/schlund/pfixcore/workflow/AuthContext.java
	(checkAuthorization): new mthod, refactored to be accessible from
	the outside.

	* example/sample1/conf/direct.prop.in: new file, example
	DirectOutputServlet property file.

	* src/de/schlund/pfixxml/DirectOutputServlet.java: new
	servlet. This servlet requests the Context from a already running
	(in the same session) ContextXMLServer and supplies the
	ContextResourceManager to DirectOutputStates, which stream the
	output for the PageRequests handled by this servlet directly to
	the outputstream of the HttpServletResponse.

	* src/de/schlund/pfixcore/workflow/DirectOutputPageMap.java: new
	class, maps PageRequests to DirectOutputStates.

	* src/de/schlund/pfixcore/workflow/DirectOutputState.java: new
	interface. Implementors stream their own output directly to the outputstream.

	* src/de/schlund/pfixcore/workflow/DirectOutputStateFactory.java:
	new class. Manages DirectOutputStates

	* src/de/schlund/pfixcore/workflow/app/FileDownloadDOState.java:
	new class. Example DirectOutputState to download static files.

2003-03-06  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/SPDocument.java (SPDocument): removed get/setLiteralResponseContent(...)
	This was stupid idea to begin with.

2003-03-06  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/*: organized imports,
	removed unused variables and added some javadoc.

2003-03-05  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/forminput.xsl.in: (<pfx:errorbox/>)
	just show one matching label when using <pfx:paramref>

	* META-INF/pfixcore.version: released 0.2.8, started 0.2.9-pre

	* src/de/schlund/pfixcore/workflow/Context.java: just add some
	(commented-out) logging lines

	* src/de/schlund/pfixcore/workflow/PageRequestProperties.java (toString): new method.

	* src/de/schlund/pfixcore/workflow/app/IHandlerContainer.java:
	(initIHandlers): use the page's properties as a parameter, not the context
	(isPageAccessible):
	(areHandlerActive):
	(needsData): hand over the context as a method parameter.

	* src/de/schlund/pfixcore/workflow/app/IHandlerContainerManager.java (getIHandlerContainer):
	throw Exceptions if something goes wrong.
	call initIHandlers(Properties props) on the created IHandlerContainer.

	* src/de/schlund/pfixcore/workflow/app/IHandlerSimpleContainer.java (IHandlerSimpleContainer):
	Fixed a big big race where we stored the Context (!!!!) inside the
	IHandlerContainer despite the fact that these guys are supposed to
	be valid for every Context using the same set of properties
	(IHandlerContainerManager is nowadays handled by the
	PropertyObjectManager). This was really really bad. We now do all
	the initialization once with the help of the given properties, and
	don't store anything related to the session any more. The Context
	is handed to the relevant methods from the outside (see above for the interface change).
	(initIHandlers):
	(isPageAccessible):
	(areHandlerActive):
	(needsData): changed accordingly

2003-03-04  Joerg Haecker <haecker@schlund.de>

	* META-INF/pfixcore.version: released 0.2.7(0.2.6 skipped);
	started 0.2.8-pre

2003-03-04  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/SPDocument.java (SPDocument): removed
	set/getXmlObject(). We store the tinytree just inplace of the
	original Document.
	(get/setLiteralResponseContent): HACK! provide for storing the literal
	response content instead of some XML data tree. This needs more in AbstractXMLServer to work.

	* src/de/schlund/pfixxml/AbstractXMLServer.java (process): remove all traces of get/setXmlObject
	as noted above, just use get/setDocument() instead.

	* src/de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java
	(isAccessible): removed call to IHandlerContainer.initIHandlers(...).
	The IHandlerContainerManager already takes care of that one time when creating the IHandlerContainer.

2003-03-04  Joerg Haecker <haecker@schlund.de>

	* example/core/editor/conf/config.prop.in: changed editmode allow to
	false

2003-03-03  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/*: code cleanup - removed unused variables
	and organized imports.

	* src/de/schlund/pfixxml/FactoryInitServlet.java,
	src/de/schlund/pfixxml/PfixServletRequest.java: added some javadoc

2003-02-28  Joerg Haecker <haecker@schlund.de>

	* example/core/build/create_propfiles.xsl: bugfix

	* src/de/schlund/pfixxml/testenv/RecordManager.java: small changes
	and improvements.
	* src/de/schlund/pfixxml/testenv/TestClient.java: conformed to above
	changes.
	* src/de/schlund/pfixxml/AbstractXMLServer.java: conformed to above
	changes.

	* src/de/schlund/pfixxml/xpath/PFXPathEvaluator.java: code cleanup

	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java(x[s|m]lObjectFromDisc):
	more information on errors.

2003-02-26  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/example/TShirtHandler.java
	(handleSubmittedData): add an example for using StatusCodes with arguments.

	* src/de/schlund/pfixcore/generator/IWrapperParamInfo.java:
	(getArgsForStatusCode): new method. Return the String[] array holding the arguments
	for this StatusCode (or null).
	(addScode): add another parameter (String[] args) for adding scodes with arguments.
	Old calling scheme is still valid.

	* src/de/schlund/pfixcore/generator/IWrapperIndexedParam.java
	(addScode): add another parameter (String[] args) for adding scodes with arguments.
	Old calling scheme is still valid.

	* src/de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java
	(addErrorCodes): added handling of StatusCodes that have arguments attached.

	* src/de/schlund/pfixxml/ResultForm.java:
	(addStatusCode) add another parameter (String[] args) for adding scodes with arguments.
	Old calling scheme is still valid.

	* src/de/schlund/pfixxml/ResultDocument.java:
	(createIncludeFromStatusCode) add another parameter (String[] args)
	for adding scodes with arguments. Old calling scheme is valid too.

	* example/core/build/iwrapper.xsl: now we add addSCodeWithArgs<PARAMNAME> methods, too, for
	every parameter of the IWrapper.

	* example/core/xsl/default_copy.xsl: cop $__env through all nodes.
	This way you can simultate something like a "dynamic binding" by
	using apply-templates with a paramter "__env" which has a nodeset containing
	the data bound to it. All templates using apply-templates (or call-templates) should
	be restructured to accept and apply this __env parameter. (some may want to set __env
	not to a supplied value but to something own).

	* example/core/xsl/include.xsl (<pfx:argref>): new template.
	(<pfx:include>): now we use any <pfx:arg> subnodes as the __env
	parameter when using apply-templates on the new included
	xml-part. $__env is copied through all nodes handled by the
	default_copy.xsl default rule.

2003-02-26  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/AbstractXMLServer.java: added
	restricted mode for sending plain xml. Clients which
	want to retrieve plain xml must be listed in config file.
	Code cleanup: Made more functions and added ifXXXEnabled
	for debug output.

	* example/common/conf/pustefix.prop.in: changed xmlonly
	to restricted in prod. mode.

2003-02-25  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/RequestDataImpl.java
	(addData): removed methods. Removed handling of __DATA:Key:Value:
	sections in parameter names. see below.

	* src/de/schlund/pfixxml/PfixServletRequest.java (checkParameterNameForEmbeddedData):
	new method. Moved the scanning for __DATA:KEY:VAL: strings in
	parameter names from RequestDataImpl into this method. now we can
	handle those __DATA sections transparently everywhere.

2003-02-14 Joerg Haecker <haecker@schlund.de>

	* lib/jcert.jar; lib/jnet.jar; lib/jsse.jar: added
	for TestClient to handle SSL.

	* src/de/schlund/pfixxml/testenv/RecordManager.java:
	changed format of output files.

	* src/de/schlund/pfixxml/testenv/TestClient.java: added
	SSL support.

2003-02-19  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/SPCacheFactory.java(init):
	Info  about initialized caches printed.

	* src/de/schlund/pfixxml/targets/TargetImpl.java(getCurrValue):
	now the mod-time of the target is checked against the mod-time
	of the according file in disk cache. If the file in disk cache
	is newer, the target will reread its value from disk.

2003-02-18  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/build/create_propfiles.xsl: changed again the
	format of the propertyfiles (only the <servletinfo> tag). See the
	updated documentation for details)
	* docs/Servlet-Propertyfiles.txt: updated to new format.
	* example/sample1/conf/secure.prop.in:
	* example/sample1/conf/config.prop.in:
	* example/core/editor/conf/config.prop.in: updated

2003-02-17  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/util/MultiTransform.java:
	More detailed message on errors.

	* example/common/conf/pustefix.prop.in: added properties
	for skipping getModTimeMaybeUpdate.

	* src/de/schlund/pfixxml/AbstractXMLServer.java(initValues): analyze above
	properties and configure TargetGenerator accordingly.
	* src/de/schlund/pfixxml/AbstractXMLServer.java(handleDocument):
	ignored transformer exceptions are not printed with whole stack trace
	any more.

	* src/de/schlund/pfixxml/targets/TargetGenerator.java: added flag
	with getter and setter determining if getModTimeMaybeUpdate should be
	skipped.(Note: in the main method getModTimeMaybeUpdate must not be
	skipped!!)

	* src/de/schlund/pfixxml/targets/TargetImpl.java(getValue):
	does not call getModTimeMaybeUpdate if above property is set
	and target was generated once (indicated by flag
	onceGenerated). Increases performance in production mode.

2003-02-15  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: started 0.2.6-pre

2003-02-14  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: released 0.2.5

	* src/de/schlund/pfixcore/workflow/ContextResourceManager.java
	(init): Eeeek. fix a bug where the resources were not init'ed in
	the correct order.

2003-02-13  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/build/create_propfiles.xsl: implemented new xml
	format for the prop.in files (documentation follows tomorrow).
	* example/sample1/conf/secure.prop.in:
	* example/sample1/conf/config.prop.in:
	* example/core/editor/conf/config.prop.in: use it.

2003-02-13  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/util/email/EmailSender[Exception].java:
	added classes for sending mail via JavaMail-API

	* src/de/schlund/pfixxml/testenv/RecordManager[Exception].java:
	added classes for recording requests and its corresponding results in
	XML.
	* src/de/schlund/pfixxml/testenv/TestClient[Exception].java:
	added simple console application to play-back the recorded data.

	* example/testenv/default.xsl: added needed stylesheet by TestClient.

	* example/common/conf/pustefix.prop.in: added properties needed by
	the RecordManager.

	* src/de/schlund/pfixxml/AbstractXMLServer.java: added support for
	RecordManager.

	* lib/commons-httpclient-2.0-alpha2.jar and lib/commons-logging.jar:
	added cause needed by TestClient.

	* Makefile.local: changed accordingly.

	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java: minor

	* src/de/schlund/pfixxml/IncludeDocument.java: instanciating
	Xerces-DocumentBuilderFactoryImpl directly. Removed clumpsy
	system properties.

2003-01-30  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: released 0.2.4

	* example/core/xsl/utils.xsl.in: (pfx:layer_check) use pfx:on/node() instead of pfx:on, same for pfx:off.

2003-01-29  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: released 0.2.3
	start 0.2.4-pre

2003-01-28  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/ContextResourceManager.java (init): make a second, separate loop ovr
	the contextressources to call init() on them. So all CRs are instantiated first, THEN they a init'ed.

	* src/de/schlund/pfixcore/workflow/app/StaticState.java
	(PROP_INSERTCR): change from "resdocfinalizer.insert" =>
	"insertcr" *** CAUTION *** this means that all property files have
	to be changed accordingly...
	* example/sample1/conf/config.prop.in: changed accordingly.

	* src/de/schlund/pfixxml/ContextXMLServer.java (ContextXMLServer):
	cosmetics, don't check for contextclassname more often than
	needed.

	* src/de/schlund/pfixcore/workflow/ContextResourceManager.java (ContextResourceManager): cosmetics

	* src/de/schlund/pfixcore/workflow/Context.java (do_update): new method (was the reset method)
	(reset): don't do the work anymore, just register a needs_update status.
	(handleRequest): check if do_update needs to be called.

2003-01-28  Martin Leidig  <mleidig@schlund.de>

	* src/de/schlund/pfixxml/ContextXMLServer.java: added attributes
	contextClassName and contextMap
	(init): set contextClassName
	(tryReloadProperties): set contextClassName, compare old to new and
	then iterate over Contexts and reset them resp. remove Contexts from
	contextMap
	(getContext): removed reset parameter, now creates new context and adds
	it to contextMap, if context value is null or if contextclass has
	changed (getContext)

	* src/de/schlund/pfixcore/workflow/Context.java: made reset method
	synchronized

2003-01-27  Joerg Haecker  <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java: removed almost
	all xalan supporting code. Documentation added. Small improvement.

2003-01-27  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/Context.java (getName): return the supplied name.
	(getPropertyLoadIndex): removed
	(init): new parameter name.
	(reset_internal):  removed
	(reset): now handles all reset, as the reload flag for the NavigationFactory is gone.

	* src/de/schlund/pfixxml/AbstractXMLServer.java (tryReloadProperties): also return the value of generator.tryReinit when
	properties didn't change.

	* src/de/schlund/pfixxml/targets/TargetGenerator.java (tryReinit): return true when depend.xml was reloaded.

	* src/de/schlund/pfixcore/workflow/NavigationFactory.java (getNavigation): remove force_load flag, now
	the factory checks the modtimes itself and reloads if necessary

	* src/de/schlund/pfixcore/workflow/PageMap.java:
	* src/de/schlund/pfixcore/workflow/PageRequestProperties.java: indentation (tab->spaces)

	* src/de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java
	(getIHandlerContainer): use IHandlerContainerManager instead of IHandlerContainerFactory

	* src/de/schlund/pfixcore/workflow/app/IHandlerSimpleContainer.java (updateIHandlers): remove automatic updating
	(isPageAccessible):
	(areHandlerActive):
	(needsData): remove up-to-date check

	* src/de/schlund/pfixxml/PropertyObjectManager.java:
	* src/de/schlund/pfixxml/PropertyObject.java: just tab->spaces

	* src/de/schlund/pfixcore/workflow/app/IHandlerContainerFactory.java: removed class

	* src/de/schlund/pfixcore/workflow/app/IHandlerContainerManager.java (IHandlerContainerManager): Added class

	* src/de/schlund/pfixxml/ContextXMLServer.java (makeContextName): added.
	(getContext): use it.

	* src/de/schlund/pfixxml/AppContext.java (init): now supply a name argument from the caller


2003-01-24  Joerg Haecker  <haecker@schlund.de>

	* src/de/schlund/pfixxml/xpath/PFXPathEvaluatorFactory.java,
	* src/de/schlund/pfixxml/xpath/PFXPathEvaluatorImplSaxon.java,
	* src/de/schlund/pfixxml/xpath/PFXPathEvaluatorImplXalan.java:
	removed
	* example/common/conf/factory.prop.in: removed PFXPathEvaluatorFactory
	* src/de/schlund/pfixxml/xpath/PFXPathEvaluator.java: added.
	Wrapperclass for calling saxons xpath-api.
	* src/de/schlund/pfixxml/IncludeDocumentExtension.java:
	now uses PFXPathEvaluator for xpath evaluation.
	* src/de/schlund/pfixcore/util/Meminfo.java: cosmetics.

2003-01-24  Martin Leidig <mleidig@schlund.de>

	* src/de/schlund/pfixxml/PropertyObjectManager.java:
	new class, which adds support for sharing objects (built from
	properties) between contexts
	* src/de/schlund/pfixxml/PropertyObject.java:
	new interface, classes have to implement it to get managed by
	PropertyObjectManager
	* src/de/schlund/pfixxml/ContextXMLServer.java:
	inserted call of PropertyObjectManager's resetPropertyObjects
	method (tryReloadProperties)
	* src/de/schlund/pfixcore/workflow/Context.java:
	PageFlowManager, PageRequestProperties and PageMap aren't newly
	created any more, now the context gets them from
	PropertyObjectManager (reset_internal)
	* src/de/schlund/pfixcore/workflow/PageFlowManager.java:
	constructor replaced by init method to implement PropertyObject
	interface, removed dispensable synchronized statements
	* src/de/schlund/pfixcore/workflow/PageRequestProperties.java:
	constructor replaced by init method to implement PropertyObject
	interface, moved Properties construction into init method
	* src/de/schlund/pfixcore/workflow/PageMap:
	constructor replaced by init method to implement PropertyObject
	interface, references PageRequestProperties via PropertyObjectManager

2003-01-24  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/build/create_serverxml.xsl: added customizable maxProcessors
	* example/servletconf/projects.xml: Use it.

2003-01-23  Joerg Haecker <haecker@schlund.de>

	* CVSROOT/cvswrappers: added entry for gifs and jars as binary data.

2003-01-23  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/Context.java: Bugfix. only init helper classes one time.

2003-01-12  Volker Zaich <zaich@schlund.de>

	* src/de/schlund/pfixcore/editor/EditorDocumentation.java
	* src/de/schlund/pfixcore/editor/CoreDocumentation.java
	* src/de/schlund/pfixcore/editor/handlers/DocumentationFinalizer.java
	Bug fixed

	* docs/documentation_tree.xml
	The XML-Structure of the documentation
	* docs/Using_Documentation.txt
	How to use documentation in Pustefix

	* example/core/editor/xsl/custommaster.xsl
	* example/core/editor/xsl/metatags.xsl
	* example/core/editor/txt/pages/main_documentation.xml
	Layout changing

	* example/sample1/xsl/metatags.xsl.in


2003-01-10  Jens Lautenbacher  <jtl@schlund.de>

	CAUTION: this incompatible change removes ResdocFinalizers from
	StaticState.  Also it moves the functionality to insert
	ContextResources from ResdocSimpleFinalizer into the
	StaticState. The DefaultIWrapperState and descendants are the only
	States now to use ResdocFinalizers.

	* src/de/schlund/pfixcore/workflow/app/ResdocFinalizer.java:
	* src/de/schlund/pfixcore/workflow/app/ResdocSimpleFinalizer.java:
	moved renderContextResources to StaticState.java

	* src/de/schlund/pfixcore/workflow/app/StaticState.java:
	(renderContextResources): moved here (from ResdocSimpleFinalizer.java)
	moved getResdocFinalizer to DefaultIWrapperState.

	* src/de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java (DefaultIWrapperState):
	changed to call the inherited renderContextResources itself.
	(getResdocFinalizer): moved from StaticState.

2003-01-10  Joerg Haecker <haecker@schlund.de>

	* docs/FAQ: added.
	* src/de/schlund/pfixxml/IncludeDocument.java (createDocument):
	detailed error-message printed to logfile and console on
	SAXParseExceptions.
	* src/de/schlund/pfixxml/IncludeDocumentExtension.java: code cleanup

2003-01-07  Volker Zaich <zaich@schlund.de>

	* example/Makefile
	Makefile modified. Now all *.xsl.in will be transformed
	in *.xsl

2003-01-07  Joerg Haecker  <haecker@schlund.de>

	* started 0.2.3-pre
	* released 0.2.2
	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java (tinyTreeFromDocument):
	return null if a null-document is passed as param.

2003-01-02  Jens Lautenbacher  <jtl@schlund.de>

	* released 0.2.1
	* started 0.2.2-pre

2002-12-19  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/AbstractXMLServer.java (handleDocument):
	use a StringBuffer for the traillog entry, also log URI +
	QueryString
	* src/de/schlund/pfixxml/ServletManager.java (registerSession): use a StringBuffer.

2002-12-18  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: started version 0.2.1-pre

	* src/de/schlund/pfixcore/editor/handlers/ImagesUploadHandler.java (handleSubmittedData):
	guard for empty file uploads

2002-12-18 Joerg Haecker <haecker@schlund.de>

	* META-INF/pfixcore.version: released version 0.2.0
	* src/de/schlund/pfixxml/IncludeDocumentFactory.java: minor changes

2002-12-16  Joerg Heacker <haecker@schlund.de>

	* example/servletconf/projects.xml:(see entry from thomas below)
	* src/de/schlund/pfixxml/IncludeDocumentFactory.java:
	IncludeDocumentFactory now caches IncludeDocuments with a mutable
	or immutable DOM.
	* src/de/schlund/pfixxml/IncludeDocumentExtension.java: now uses
	immutable DOM from Factory.
	* src/de/schlund/pfixxml/IncludeDocument.java: IncludeDocument
	now can be created with a [im]mutable DOM representation.
	* src/de/schlund/pfixcore/editor/EditorHelper.java(getIncludeDocument): Can handle
	[im]mutable DOMs now.

2002-12-16  Volker Zaich <zaich@schlund.de>

	* example/core/xsl/forminput.xsl.in
	* example/core/xsl/include.xsl.in
	* example/core/xsl/navigation.xsl.in
	* example/core/xsl/utils.xsl.in

	removed all <value></value> tags in the documentation-tree
	value will be set by the Id

	* example/core/editor/xsl/metatags.xsl
	* example/servletconf/projects.xml
	* src/de/schlund/pfixcore/editor/CoreDocumentation.java
	* src/de/schlund/pfixcore/editor/EditorDocumentation.java
	* src/de/schlund/pfixcore/editor/EditorProductFactory.java
	* src/de/schlund/pfixcore/editor/handlers/DocumentationFinalizer.java

	all xsl:temlates tags will be displayed. If they don't have a
	documentation-tree, they won't have a link, but a ! (e.g. !pfx:button)

	the active Docuemtation-Element now is marked.


2002-12-16  Thomas Stieler  <stieler@schlund.de>

	* example/servletconf/projects.xml:
	* example/core/build/create_tomcatweb.xsl:

	added a node <active/> for each <servlet/> node, the servlet
	is enabled only it if the value of the node is "true".
	Adapted the example projects.xml.

2002-12-12  Jens Lautenbacher  <jtl@schlund.de>
	* JOINED with SAXON branch!

	* src/de/schlund/pfixxml/targets/PublicXSLTProcessor.java (xmlObjectFromDocument): return Document again.
	* src/de/schlund/pfixxml/targets/PustefixXSLTProcessor.java (xmlObjectFromDisc): ditto
	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java (xmlObjectFromDocument): ditto
	(xmlObjectFromDisc): ditto

	* src/de/schlund/pfixxml/SPDocument.java (toString): use the xmlobject (if != null) if the document is null

	* src/de/schlund/pfixxml/AbstractXMLServer.java (process): try to
	kill the old xerces Dom in the SPDocument after we converted it to
	TinyTree (or any other XmlObject). Hope it works...

	* src/de/schlund/pfixcore/util/MultiTransform.java (MultiTransform): just stopped some log4j grief

2002-12-11  Volker Zaich <zaich@schlund.de>

	* src/de/schlund/pfixcore/editor/CoreDocumentation.java
	The Documentation Objects helds all the information

	* src/de/schlund/pfixcore/editor/handlers/DocumentationHandler.java
	Documentation Handler

	* src/de/schlund/pfixcore/editor/handlers/DocumentationFinalizer.java
	Finalizer for Documentation

	* src/de/schlund/pfixcore/editor/interfaces/Documentation.iwrp
	iwrp for Documentation

	* example/core/editor/conf/config.prop.in
	documentation edit

	* example/core/editor/txt/navigation.xml
	* example/core/editor/txt/styles.xml
	* example/core/editor/txt/pages/main_documentation.xml
	* example/core/editor/txt/pages/main_pages.xml
	* example/core/editor/xml/three_frames_doku.xm
	* example/core/editor/xsl/metatags.xsl
	* example/core/xsl/forminput.xsl.in
	* example/core/xsl/navigation.xsl.in
	* example/core/xsl/utils.xsl.in
	* example/sample1/txt/pages/main_home.xml
	* example/servletconf/projects.xml

	* src/de/schlund/pfixcore/editor/EditorDocumentation.java
	* src/de/schlund/pfixcore/editor/EditorProduct.java
	* src/de/schlund/pfixcore/editor/EditorProductFactory.java
	* src/de/schlund/pfixcore/editor/resources/EditorSessionStatusImpl.java

	Documentation Handling added in Functions and Stylesheetz


2002-12-06  Volker Zaich <zaich@schlund.de>

	* /example/core/xsl/navigation.xsl.in
	pfx:elink - Another Error-Handling built in. Questionmark is not
	allowed in the href attribute

2002-12-05  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/ResultDocument.java (init): added
	xmlns:pfx="..." namespace attribute to root elem

	* example/core/xsl/include.xsl.in: added pfx:editconsole. Allows switching to/from editmode
	and showing the last DOM tree.

2002-12-04  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/AbstractXMLServer.java (handleDocument):
	if property xmlserver.noxmlonlyallowed=false (default is true) and the request param
	__xmlonly=1 is given, just return the DOM tree as text/xml

2002-12-03  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: released 0.1.19, started 0.1.20-pre

2002-12-02  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/targets/TargetGenerator.java (loadConfig): rewrote completely. 2-3 times faster now.

2002-11-25  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/ServletManager.java (forceRedirectBackToInsecureSSL):
	(forceNewSessionSameVisit):
	(doCookieTest):
	(getSecureSessionCookie): new methods.
	(redirectToSecureSSLSession): changed to be able to reuse an existing secure SSL session
	if a request comes in with an -invalid- session id that was the parent of this secure session.
	This may happen when ever one goes back to old pages via the back button.
	previously a new session and a new visit were created, now we simply continue with the right
	session. All this is guarded by sending a secure cookie to check if the request comes from the
	authorized browser. See the code for more, as it's heavily commented.

	* src/de/schlund/pfixxml/serverutil/SessionAdmin.java (idWasParentSession): added
	(getChildSessionForParentId): added.
	(valueUnbound): changed to record also the parent session id if a secure SSL session is created.

	* src/de/schlund/pfixxml/serverutil/ContainerUtil.java:
	* src-jserv/de/schlund/pfixxml/serverutil/jserv/ModernJServUtil.java:
	* src-tomcat4/de/schlund/pfixxml/serverutil/tomcat4/TomcatUtil.java:
	encodeURL(String scheme, String host, HttpServletRequest req, HttpServletResponse res, String sessid): added
	method to be able to use a explicitely specified session id.

	* example/servletconf/projects.xml: added context running under ssl

	* example/sample1/conf/depend.xml.in: added page ssltest

	* example/core/xsl/forminput.xsl.in: fixed dokumentation

	* example/common/conf/pfixlog.xml.in: adapted to logging changes

	* example/sample1/txt/pages/main_ssltest.xml: new file
	* example/sample1/conf/secure.prop.in: new file
	* example/sample1/conf/server.crt: new file
	* example/sample1/conf/server.key: new file

2002-11-25 Volker Zaich <zaich@schlund.de>

	* example/core/editor/xml/three_frames_doku.xml
	three_frames_doku.xml: Frames for Documentation (added)

	* example/core/editor/xsl/metatags.xsl
	Documentation included

2002-11-25  Volker Zaich <zaich@schlund.de>

	* example/common/conf/exceptionhandler.prop.in
	* example/common/conf/factory.prop.in
	* example/common/conf/pfixlog.xml.in
	* example/common/conf/pustefix.prop.in

	* example/core/build/create_depend.xsl
	* example/core/build/create_documentation.xsl
	* example/core/build/create_lib.xsl
	* example/core/build/create_stylesheet.xsl

	* example/core/editor/conf/config.prop.in
	* example/core/editor/conf/depend.xml.in

	* example/core/xsl/default_copy.xsl.in
	* example/core/xsl/forminput.xsl.in
	* example/core/xsl/include.xsl.in
	* example/core/xsl/master.xsl.in
	* example/core/xsl/navigation.xsl.in
	* example/core/xsl/utils.xsl.in

	* example/sample1/conf/config.prop.in
	* example/sample1/conf/depend.xml.in

	* example/servletconf/projects.xml

	Namespaced changed from: xmlns:cus="http://www.schlund.de/pustefix/customize/create
	to xmlns:cus="http://www.schlund.de/pustefix/customize

2002-11-22  Jens Lautenbacher  <jtl@schlund.de>

	* released 0.1.18

	* example/core/xsl/navigation.xsl.in: Massive Speed-Ups ~10x ....

2002-11-22  Volker Zaich <zaich@schlund.de>

	* example/core/xsl/include.xsl.in
	Bug fixed --> IncludeDocumentationExtension

2002-11-22  Jens Lautenbacher  <jtl@schlund.de>

	* released 0.1.17

	* src/de/schlund/pfixxml/ServletManager.java
	(tryReloadProperties): increment a loadindex (and put it into the
	properties) each time we reload the property files.

	* src/de/schlund/pfixxml/AbstractXMLServer.java (process): print
	some timing info, removed latency measurement

	* src/de/schlund/pfixcore/workflow/app/IHandlerSimpleContainer.java (updateIHandlers): new method.
	will b called automatically each time to check if the properties have changed and reeinit if true.

	* src/de/schlund/pfixcore/workflow/PageRequestProperties.java (getPropertiesForPageRequest):
	we cache the properties for each pagerequest now.

	* src/de/schlund/pfixcore/workflow/Context.java
	(getPropertyLoadIndex): new method. returns a number which is
	incremented each time the properties are reloaded.
	(invalidateNavigation): new method. allows for invalidating the
	navigation (this applies only if navgation.autoinvalidate is set to false in
	the properties. default is true)
	(checkForNavigationReuse): new method. checks is autoinvalidate is true or false.
	(addNavigation): we cache the navigation node and will reuse it if autoinvalidate is false and
	invalidateNavigation() has not been called. this is not the default!

	* src/de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (handleSubmittedData):
	removed latency measurement


2002-11-20  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/utils.xsl.in: added pfx:layer_check, optional child of pfx:switch.
	If given, it expects an attribute name (a layer id) and two subnodes, pfx:on and pfx:off.
	The content of pfx:on will be shown if the named layer is visible, pfx:off will be shown if it
	is hidden.
	* example/core/script/baselib.js: Add the needed infrastructure
	* example/sample1/txt/pages/main_home.xml: use it.

2002-11-18  Jens Lautenbacher  <jtl@schlund.de>
	* released 0.1.16, started 0.1.17-pre

	* example/core/build/create_products.xsl:
	small fix. xpath expressions in "select" should not end in a "/".

	* src/de/schlund/pfixxml/AbstractXMLServer.java:
	* src/de/schlund/pfixxml/targets/PublicXSLTProcessor.java:
	* src/de/schlund/pfixxml/targets/PustefixXSLTProcessor.java:
	* src/de/schlund/pfixxml/targets/XMLVirtualTarget.java:
	* src/de/schlund/pfixxml/targets/XSLVirtualTarget.java:
	* src/de/schlund/pfixxml/targets/LeafTarget.java:
	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java:
	* src/de/schlund/pfixxml/targets/XMLLeafTarget.java:
	* src/de/schlund/pfixxml/targets/VirtualTarget.java
	* src/de/schlund/pfixxml/targets/XSLLeafTarget.java:
	Code cleanup. Most significant part is that we now have only one
	method for the xslt transform, regardless if it is a target
	generating or a html generating one (applyTrafoForOutput)

	There is still work to do: see TraxXSLTProcessor for comments.

2002-11-15  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/VirtualTarget.java
	(getModTimeMaybeUpdate): Added double-checked locking.

	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java
	(doApplyTrafo): removed synchronisation on result.
	(X[M|S]LTargetfromDisc: removed synchronisation on target.

2002-11-14  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixcore/editor/EditorHelper.java
	(getIncludeDocument): We really must do a cloneNode
	before removing incpath.

	* src/de/schlund/pfixxml/targets/SPCacheFactory.java: minor.

	* src/de/schlund/pfixxml/IncludeDocumentFactory.java: minor.

	* src/de/schlund/pfixxml/IncludeDocument.java (resetModTime):
	now this does modTime -= 1.

	* src/de/schlund/pfixxml/targets/PustefixXSLTProcessor.java:
	changed X[S|M]LTargetfromDisk(String) to X[S|M]LtargetFromDisk(Target,
	String).

	* src/de/schlund/pfixxml/targets/SharedLeaf.java,
	src/de/schlund/pfixxml/targets/LeafTarget.java,
	src/de/schlund/pfixxml/targets/Target.java,
	src/de/schlund/pfixxml/targets/TargetImpl.java (resetModTime):
	removed.

	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java:
	(doApplyTrafo): synchronized on result.
	(X[S|M]LTargetfromDisk) synchronized on target.

	* src/de/schlund/pfixxml/targets/VirtualTarget.java:
	(resetModTime) removed.
	Removed GENERATE_LOCK used for synchronisation.

	* src/de/schlund/pfixxml/targets/X[M|S]LLeafTarget.java:
	adjusted call to xsltproc.X[S|M]LTargetfromDisc.

	* src/de/schlund/pfixxml/targets/X[M|S]LVirtualTarget.java
	(getValueFromDiscCache): removed GENERATE_LOCK, adjusted
	call to xsltproc.X[S|M]LTargetfromDisc.


2002-11-13  Volker Zaich <zaich@schlund.de>
	* example/servletconf/projects.xml
	Documentation-Files-Path added

	* example/core/build/make_products.xsl
	xsl for Generating Documentation-Files-Path added

	* example/core/xsl/utils.xsl.in
	Documentation for utils.xsl.in added

	* src/de/schlund/pfixcore/editor/EditorProduct.java
	Documentation-Handling added

	* src/de/schlund/pfixcore/editor/EditorProductFactory.java
	Documentation-Handling added
	(reads the documentation-files and calls EditorDocumentation.java)



2002-11-13  Jens Lautenbacher  <jtl@schlund.de>
	    Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java (TraxXSLTProcessor):
	made a singleton.
	(TraxXSLTProcessor): private.
	(getInstance): new method.

	(doApplyTrafo): completely removed storing the generated object into the memory cache.
	we only stream the result to disk (or to the client in the last step).

	* src/de/schlund/pfixxml/AbstractXMLServer.java (handleDocument): changed to use
	TraxXSLTProcessor.getInstance()

	* src/de/schlund/pfixxml/targets/TargetImpl.java (generateValue): removed!

	* src/de/schlund/pfixxml/targets/LeafTarget.java (getModTimeMaybeUpdate):
	just invalidate the Memory Cache here as generateValue is gone.
	(generateValue): removed

	* src/de/schlund/pfixxml/targets/X[S|M]L[Virtual|Leaf]Target.java (getValueFromDiscCache):
	don't store the value, don't check the modtime.
	changed to use TraxXSLTProcessor.getInstance()
	(generateValue): removed

	* src/de/schlund/pfixxml/targets/VirtualTarget.java (generateValue):
	put method from XML/XSL VirtualTarget here.

2002-11-13  Volker Zaich  <zaich@schlund.der>
	* src/de/schlund/pfixcore/editor/EditorDocumentation.java
	class reads the documentation-nodelist and put it into
	a hashmap

2002-11-07  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/SPCache.java: added
	methods getCapacity and getSize to interface.

	* src/de/schlund/pfixxml/targets/SimpleCache.java:
	* src/de/schlund/pfixxml/targets/LRUCache.java:
	* src/de/schlund/pfixxml/targets/NullCache.java:
	implemented the two methods above.


2002-11-05  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/LRUCache.java: bugfix:
	create a new CacheLRU in default constructor with default capacity
	now. Cause: NullPointerException when doing 'make generate'.

2002-11-05  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/PustefixXSLTProcessor.java:
	added method Object XMLTargetfromDisc(String path) to this interface.

	* src/de/schlund/pfixxml/targets/TraxXSLTProcessor.java:
	implemented XMLTargetfromDisc.

	* src/de/schlund/pfixxml/targets/XMLLeafTarget.java:
	getValueFromDiscCache gets its document now from TraxXSLTProcessor.

	* src/de/schlund/pfixxml/targets/XMLVirtualTarget.java:
	getValueFromDiscCache gets its document now from TraxXSLTProcessor.

	* src/de/schlund/pfixxml/IncludeDocumentExtension.java: minor

2002-11-04  Joerg Haecker <haecker@schlund.de>

	* example/core/build/create_serverxml.xsl:
	set attributes minProcessors="200", maxProcessors="750" and
	acceptCount="100" for Connector needed cluster operation

2002-11-04  Volker Zaich <zaich@schlund.de>

	* example/core/xsl/navigation.xsl.in
	error-handling added in pfx:elink

	* example/core/txt/styles.xml
	added new css-element: core_xml_errorbox

2002-11-04  Joerg Haecker  <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/SPCache.java: added method
	createCache(int capacity)

	* src/de/schlund/pfixxml/targets/NullCache.java: removed
	constructor NullCache(Properties). Implemented createCache(int
	capacity)

	* src/de/schlund/pfixxml/targets/SimpleCache.java: removed
	constructor SimpleCache(Properties). Implemented createCache(int
	capacity)

	* src/de/schlund/pfixxml/targets/LRUCache.java: removed
	constructor LRUCache(Properties). Implemented createCache(int
	capacity)

	* src/de/schlund/pfixxml/targets/SPCacheFactory.java: now this factory
	creates one cache for targets and one for include-documents.

	* src/de/schlund/pfixxml/IncludeDocument.java: IncludeDocument
	represents a single IncludeDocument now. Functionality of old class
	IncludeDocument moved to IncludeDocumentExtension (see below)

	* src/de/schlund/pfixxml/IncludeDocumentExtension.java: added. All
	calls from XSL to get data from IncludeDocuments is handled via
	this class. IncludeDocuments come from IncludeDocumentFactory now, not
	from TargetGenerator

	* src/de/schlund/pfixxml/IncludeDocumentFactory.java: added. IncludeDocuments
	are created and stored in a SPCache by this factory.

	* example/common/conf/factory.prop.in: added properties
	'targetcache.cacheclass' and 'targetcache.cachecapacity' for
	target-cache. Added properties 'includecache.cacheclass' and
	'includecache.cachecapacity' for include-document-cache.

	* example/core/build/create_stylesheet.xsl: xmlns:include now points
	to de.schlund.pfixxml.IncludeDocumentExtension.

	* src/de/schlund/pfixcore/editor/EditorHelper.java: IncludeDocumets
	now come from IncludeDocumentFactory instead of TargetGenerator.

2002-10-30  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/ResdocSimpleFinalizer.java (ResdocSimpleFinalizer):
	Eeeek. really need to render the ContextResources if staying on the page.

2002-10-30  Thomas Stieler  <stieler@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/ResdocSimpleFinalizer:
	check, if an ContextResource to be inserted is found, otherwise throw XMLException

2002-10-29  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: released 0.1.16, started 0.1.16-pre

	* src/de/schlund/pfixcore/workflow/Context.java (isCurrentPageRequestInCurrentFlow):
	new method. used to check if the current page request is member of the current pageflow.

	* src/de/schlund/pfixcore/workflow/app/ResdocSimpleFinalizer.java (onSuccess):
	CAUTION ICOMPATIBLE CHANGE: rewrote logic for deciding what to do in the onSuccess case:
	Default: If the current pagerequest is member of the
		 current pageflow (aka: if it is a member of any pageflow),
		 set the SPDocument to null (signalling that the pageflow should continue).
		 If it is not a memeber of a flow, return a SPDocument (and continue on the current page).
	You can overwrite this behaviour with the property "pagerequest.<PAGENAME>.resdocfinalizer.onsuccess".
	The values "continue", "stop" and "auto"(default) are allowed.


2002-10-24  Jens Lautenbacher  <jtl@schlund.de>

	* Makefile (LANG): use LANG=C as a workaround for RedHat 8.0s standard
	use of utf-8 and javas inability to cope with it
	* example/Makefile: ditto.

2002-10-24  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/XMLVirtualTarget.java:
	synchronized the call of generateValue and getValueFromDiscCache
	with a private instance-variable.

	* src/de/schlund/pfixxml/targets/XSLVirtualTarget.java:
	same as above

	Refactoring stuff in following files. Renamed some
	fields, strings and methods from leave to leaf.
	* example/core/conf/generator_tree.xml
	* src/de/schlund/pfixcore/editor/EditorHelper.java
	* src/de/schlund/pfixxml/IncludeDocument.java
	* src/de/schlund/pfixxml/XMLServer.java
	* src/de/schlund/pfixxml/targets/LeafTarget.java
	* src/de/schlund/pfixxml/targets/SharedLeafFactory.java
	* src/de/schlund/pfixxml/targets/TargetGenerator.java
	* src/de/schlund/pfixxml/targets/TargetType.java
	* src/de/schlund/pfixxml/targets/XMLLeafTarget.java
	* src/de/schlund/pfixxml/targets/XMLVirtualTarget.java
	* src/de/schlund/pfixxml/targets/XSLLeafTarget.java
	* src/de/schlund/pfixxml/targets/XSLVirtualTarget.java

2002-10-24  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/targets/LeaveTarget.java:
	renamed to LeafTarget.java

	* src/de/schlund/pfixxml/targets/SharedLeave.java:
	renamed to SharedLeaf.java

	* src/de/schlund/pfixxml/targets/SharedLeaveFactory.java:
	renamed to SharedLeafFactory

	* src/de/schlund/pfixxml/targets/XMLLeaveTarget.java:
	renamed to XMLLeafTarget

	* src/de/schlund/pfixxml/targets/XSLLeaveTarget.java:
	renamed to XSLLeafTarget

	* src/de/schlund/pfixxml/targets/TargetType.java:
	now we use the renamed classes above

	* startTomcat.sh: modified to start tomcat in debug mode

2002-10-24  Rouven Schoeller <rouven@schlund.de>
	* example/core/editor/xsl/metatags.xsl
	Insert a reference to the release notes ( s. next)

	* example/core/editor/txt/pages/main_home.xml
	Add release notes for the editor applet, including a reference to the Java Download page.

2002-10-21  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/xsl/metatags.xsl: don't do form submit from JScript, just return true...


2002-10-18  Thomas Stieler  <stieler@schlund.de>

	* example/core/build/create_serverxml.xsl:
	set attributes maxProcessors="750" and acceptCount="800" for Connector needed cluster operation

2002-10-18  Rouven Schoeller <rouven@schlund.de>
	* example/core/script/xmlEditorApplet.jar
	The editor applet must be compiled with Java 1.4 as opposed to pustefix.
	Hence we check in the applet ready to run.

	* editorapplet/src/de/schlund/pfixeditor/XmlEditorApplet.java
	Moved the DummyScreen workaround to
	editorapplet/src/de/schlund/pfixeditor/view/Gui.java

	* editorapplet/src/org/gjt/sp/jedit/textarea
	Moved the DummyScreen workaround to
	editorapplet/src/de/schlund/pfixeditor/view/Gui.java

	* editorapplet/src/de/schlund/pfixeditor/view/Gui.java
	The DummyScreen workaround, which ensures that the textarea
	gets the focus for key events, is now implemented here.
	As result, there should appear only one dummy frame, when running in a browser.

	* example/core/editor/xsl/metatags.xsl
	add style attribute display:none to the textarea,
	which was displayed as empty space by the browser.

2002-10-17  Volker Zaich <zaich@schlund.de>
	* example/core/xsl/navigation.xsl.in

	modified the <pfx:elink> tag
	Now it's possible to use dynamic-external links
	Add <pfx:host> instead of the href-Attribut.

2002-10-16  Rouven Schoeller <rschoeller@schlund.de>

	* example/core/editor/xsl/metatags.xsl
	add an applet tag for the pustefix editor applet combined
	with a javascript function getAppletText().
	In the case of an upload, getAppletText will put the user's
	modified text into the html textarea.
	The html textarea becomes hidden.

	* example/core/editor/xml/three_frames_applet.xml
	new frame declaration, which hosts the editor applet.
	It includes a javascript function which forwards
	resize events to the editor applet.

	* example/core/editor/conf/depend.xml.in
	the standart pages 'includes' and 'commons' use now
	'three_frames_applet.xml', mentioned above.

	* editorapplet
	hosts the editor applet project and consists of the directories 'src' and 'res'.
	In 'res', you can find a script for signing the applet and a manifest file,
	which is needed for generating the applets jar file.
	Type 'make install' to integrate a signed applet in pustefix.

	* src/de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java
	insert encode/decode functionality. The uploaded text needs to be decoded,
	and accordingly the requested text must be encoded.
	The text for the applet is supplied in the applet tag as a param.
	Therefore, we want to avoid stuff like <LF> and '"' in the supplied text.

2002-10-15  Jens Lautenbacher  <jtl@schlund.de>

	* example/common/conf/factory.prop.in:
	add property editorproductfactory.delayinit=false if mode=prod.

	* src/de/schlund/pfixcore/editor/EditorProductFactory.java (init):
	delay reading of all products if property
	editorproductfactory.delayinit is not set to false.
	(getAllEditorProducts):
	(getEditorProduct): do it here if neccessary.

2002-10-14  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/master.xsl.in: wrong namespace for
	cus:documentation.  This is complete rubbish. We have
	http://www.schlund.de/pustefix/customize/ and
	http://www.schlund.de/pustefix/customize/create and both use
	prefix cus: normally, but unfortunately both are needed. Will need
	to check this some time.

2002-10-14  Joerg Haecker  <haecker@schlund.de>

	* example/common/conf/exceptionhandler.prop.in:
	modified values for NullPointerExceptions

2002-10-10  Joerg Haecker  <haecker@schlund.de>

	* changed max threads for tomcat to 150

2002-09-26  Thomas Stieler  <stieler@schlund.de>

	* src/de/schlund/pfixxml/ContextXMLServer.java:
	* src/de/schlund/pfixxml/XMLServer.java:
	implement needsSession() and allowSessionCreate()

	* src/de/schlund/pfixxml/ServletManager.java:
	methods needsSession() and allowSessionCreate() are
	now abstract and must be implemented in inheriting, not
	abstract classes.

	* example/core/xsl/utils.xsl.in:
	changed template pfx:switch, use href="javascript://" instead of
	href="#"

2002-09-23  Joerg Haecker <haecker@schlund.de>

	* example/core/build/create_serverxml.xsl: modified values
	for Connector : AcceptCount=200, maxProcessors=250, minProcessors=50,
	enableLookups=false.

2002-09-23  Thomas Stieler  <stieler@schlund.de>

	* Makefile:
	* example/Makefile:
	Renamed target documentation_stylesheet -> stylesheets
	"make stylesheets" if building distribution (make dist)

	* example/core/build/create_apacheconf.xsl:
	check if apache-logdir is present in projects.xml, use
	"CustomLog <logfile> combined" instead of "TransferLog <logfile>"

2002-09-18 Volker Zaich <zaich@schlund.de>

	* src/de/schlund/pfixcore/util/MultiTransform.java:

	   (doDocumentation): added new function for a faster
	   generating of the documentation-stylesheets (see 2002-08-23)

	* example/Makefile:
	     calls the new Java-Function for generating
	     the documentation-stylesheets

2002-09-12  Rouven Sch?ller <rouven@schlund.de>
	* src/de/schlund/pfixxml/AbstractXMLServer.java
	(process): adjust code for logging the latency. Reason: page names
	of the pustefix editor are not longer overgiven as request parameter,
	but can be find in the request path.

2002-09-11  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/master.xsl.in: copy attributes for pfx:script

2002-09-10  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: started 0.1.13-pre

	* META-INF/pfixcore.version: released 0.1.12

	* src/de/schlund/pfixcore/workflow/Context.java
	(flowBeforeNeedsData): new method. Can be used to check if the
	pages which are located before the current page in the current
	workflow would return a SPDocument while the workflow runs (aka:
	if any page before the current one needs some more stuff to do)

	* example/core/xsl/master.xsl.in: bug fix: pfx:script really output script

	* src/de/schlund/pfixcore/workflow/app/IHandlerSimpleContainer.java
	(initIHandlers): init a new sub set of all active handlers.
	This list contains all handlers which are not listed (as a space separated list) in the property
	ihandlercontainer.ignoreforactive.
	(areHandlerActive): use only the sub set defined above here.

2002-09-04  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/app/IHandlerContainerFactory.java (getIHandlerContainer):
	removed debug of cache misses

	* src/de/schlund/pfixcore/workflow/ContextResourceManager.java (init): removed debug of properties

	* example/core/editor/xsl/metatags.xsl: <displaypartdetails>: displayed wrong product

2002-08-23  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/build/create_documentation.xsl:
	* example/core/build/create_stylesheet.xsl: new files. Work in progress: we want to have
	inline documentation for the core stylesheets. The source files for those stylesheets are now
	the files example/core/xsl/*.xsl.in. For each of them a corresponding *.xsl and a *.doc.xml file
	is produced which hold the XSLT content and the documentation.

	* example/Makefile (%.xsl):
	(%.doc.xml): Changed accordingly to make the transformations work

	* example/core/build/create_products.xsl: restored the ability to specifiy additional namespaces.

2002-08-21  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: released 0.1.11
	started 0.1.12-pre

2002-08-20  Jens Lautenbacher  <jtl@schlund.de>

	* docs/structural_xml_format.txt: new document.

	CAUTION! INCOMPATIBLE CHANGE:
	* example/core/xsl/master.xsl:
	Changed the main format for the structural xml files. See documentation in
	docs/structural_xml_format.txt
	* example/core/editor/xml/*.xml:
	* example/sample1/xml/*.xml:
	changed accordingly.

2002-08-18  Jens Lautenbacher  <jtl@schlund.de>

	CAUTION! INCOMPATIBLE CHANGE:
	* src/de/schlund/pfixcore/workflow/State.java (getDocument): changed return value from
	SPDocument to ResultDocument.
	* src/de/schlund/pfixcore/workflow/Context.java (documentFromCurrentStep):
	* src/de/schlund/pfixcore/workflow/StateImpl.java (getDocument): changed accordingly
	All States need this adjustement:
	* src/de/schlund/pfixcore/editor/handlers/SessionManagerState.java (getDocument):
	* src/de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java (getDocument):
	* src/de/schlund/pfixcore/workflow/app/DefaultAuthIWrapperState.java (getDocument):
	* src/de/schlund/pfixcore/workflow/app/StaticState.java (getDocument):
	For StaticState, additionally remove the printing of the
	RequestParameters. I hope nobody uses this, but if someone does,
	we now have better ways (using ContextResources) to insert
	information even in the case of StaticState.

2002-08-16  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/script/baselib.js (__js_getFormElement):
	(__js_getFormElementWithValue): new methods. You can get a form
	element by name, or (for the second method), by giving name +
	value

2002-08-14  Jens Lautenbacher  <jtl@schlund.de>

	CAUTION! These are substantial changes to the xsl core
	stylesheets! Test and treat it with care!

	* example/core/xsl/master.xsl: REMOVED the possibility to specify a @src attribute in a
	<pfx:frame>. This did never work with Pfix II anyway, and the code becomes easier to understand.

	* example/core/xsl/include.xsl:
	  <xsl:template match="pfx:include" name="pfx:include">
	  CHANGED to encode the page in the pathinfo.

	* example/core/xsl/navigation.xsl:
	 <xsl:template name="pfx:button_impl">: REMOVED the possibility
	 to define (in the navigation) handlers that contain a query
	 string. A handler now MUST be simple like /xml/static.

	 REMOVED the possibility to give an onclick attribute to the <page> in the
	 navigation and have it handled here. This is simply never the right thing to do.

	 CHANGED to encode the page in the pathinfo.

	 <xsl:template match="pfx:wizardprevious">: CHANGED to encode the page in the pathinfo.

	* example/core/xsl/forminput.xsl:
	  <xsl:teplate match="pfx:forminput">: CHANGED to encode the page in the pathinfo.

	    REMOVED handling of the @action attribute. Do we really need this anywhere?

	* META-INF/pfixcore.version: started 0.1.11-pre.

2002-08-13  Jens Lautenbacher  <jtl@schlund.de>

	* META-INF/pfixcore.version: released 0.1.10. Version number
	scheme is changed to become sane again -- no more leading zeros.
	E.g. versions should have been 0.1.8 => 0.1.9 => 0.1.10 ...

	* src/de/schlund/pfixcore/workflow/PageRequest.java (PageRequest):
	changed so __page will take precedence before setting via the
	pathinfo. Maybe we will change this back sometime when more or
	less everything migrated to using the pathinfo method.

2002-08-12  Joerg Haecker   <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/PFUtil.java: method sendMail
	removes now all new lines characters from mail subject before sending
	mail (pragmatic, did not find real reason).
	* src/de/schlund/pfixxml/exceptionhandler/PropertyManager.java: checks
	now if dimensions like min or hour are declared correctly in the
	property file.

2002-08-08  Joerg Haecker   <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/ReportGeneratorTask.java:
	bugfix: subject of report mail was not in 24h format.
	* src/de/schlund/*: removed LGPL license as javadoc-comment. Added
	license as normal comment at beginning of each file. The two files
	src/de/schlund/pfixcore/util/UnixCrypt.java and
	/src/de/schlund/pfixxml/ImageInfo.java we cannot put under the LGPL.

2002-08-08  Thomas Stieler  <stieler@schlund.de>

	* example/core/build/create_apacheconf.xsl:
	enabling/disabling ports with <cus:choose> is now possible

2002-08-08  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/util/UnixCrypt.java:
	* src/de/schlund/pfixcore/util/PropertiesUtils.java:
	* src/de/schlund/pfixcore/util/Meminfo.java:
	copied from de.schlund.util, changed package. Removed cruft. Small changes.

	* *.java: changed accordingly...

2002-08-07  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/example/OverviewState.java: (getDocument) removed method. We now extend StaticState.

	* src/de/schlund/pfixcore/workflow/app/ResdocFinalizer.java (renderContextResources): added to interface.

	* src/de/schlund/pfixcore/workflow/app/StaticState.java (getResdocFinalizer): added.
	(getDocument): now we use a ResdocFinalizer here, too. We just call renderContextResources() on it.

	* src/de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java (DefaultIWrapperState): remove getResdocFinalizer()

	* src/de/schlund/pfixcore/workflow/app/ResdocSimpleFinalizer.java (renderContextResources): make public.

	* example/core/xsl/include.xsl: again print missing includes to stdout.

	* src/de/schlund/pfixcore/workflow/app/ResdocSimpleFinalizer.java (renderContextResources):
	new method. Put the functionality in it's own method which is being called by renderDefault(...)

	* example/core/xsl/include.xsl: jump to the right anchor in the
	left frame of the editor when first selecting an include to edit
	from the web page.

2002-08-07  Joerg Haecker  <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/ExceptionConfig.java:
	added class to encapsulate configuration of an exception.
	* src/de/schlund/pfixxml/exceptionhandler/GeneralConfig.java:
	added class to encapsulate configuration of exceptionhandler.
	* src/de/schlund/pfixxml/exceptionhandler/MailConfig.java:
	added class to encapsulate configuration of mail.
	* src/de/schlund/pfixxml/exceptionhandler/PFConfigurationException.java:
	added exception that is thrown if configuartion includes errors.
	* src/de/schlund/pfixxml/exceptionhandler/PropertyManager.java:
	added class to handle all property stuff for exceptionhandler.
	* src/de/schlund/pfixxml/exceptionhandler/Cubbyhole.java: minor
	* src/de/schlund/pfixxml/exceptionhandler/ExceptionContext.java: minor
	* src/de/schlund/pfixxml/exceptionhandler/ExceptionHandler.java:
	integration of new classes (see above).
	* src/de/schlund/pfixxml/exceptionhandler/InstanceCheckerContainer.java: minor
	* src/de/schlund/pfixxml/exceptionhandler/PFUtil.java: minor
	* src/de/schlund/pfixxml/exceptionhandler/PFXHandler.java: moved
	all property handling code to propertymanager(see above).
	* src/de/schlund/pfixxml/exceptionhandler/PFXThreadedHandler.java: minor
	* src/de/schlund/pfixxml/exceptionhandler/ReportGeneratorTask.java: minor
	* src/de/schlund/pfixxml/exceptionhandler/STraceCheckerContainer.java: minor
	* src/de/schlund/pfixxml/exceptionhandler/STraceCleanupTask.java: minor

2002-08-05  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/xsl/metatags.xsl: add the handler to the page list.

	* META-INF/pfixcore.version: released 0.1.009,
	starting 0.1.010-pre

2002-08-05 Rouven Schoeller <rouven@schlund.de>

	* example/common/conf/pfixlog.xml.in
	two new log files: pustefix-latency-editor.log,
	pustefix-latency.log

	* example/core/editor/conf/config.prop.in
	set new property "latency" in order to activate the logging
	of latency in AbstractXMLServer ( see next).
	Just uncomment to deactivate logging.

	* src/de/schlund/pfixxml/AbstractXMLServer.java
	method process:
	logs the duration of processing a request as well as
	the rendering time for the response to file "pustefix-latency.log"

	* src/de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java
	method handleSubmittedData:
	logs the duration and result of the parsing to
	file "pustefix-latency-editor.log".


2002-08-05  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/serverutil/SessionInfoStruct.java (SessionInfoStruct):
	remove constructor without traillog arg.  Use old traillog if !=
	null. Do not copy elementwise, but just set this.traillog = traillog.

	* src/de/schlund/pfixxml/serverutil/SessionAdmin.java (registerSession(session, conutil)):
	Just call registerSession(session, null, conutil)

2002-08-02  Joerg Haecker  <haecker@schlund.de>

	* src/de/schlund/pfixxml/serverutil/SessionInfoStruct.java: added
	constructor SessionInfoStruct(HttpSession, LinkedList trail,
	ContainerUtil). The data of trail is copied to internal traillog.
	* src/de/schlund/pfixxml/serverutil/SessionAdmin.java: added
	method registerSession(HttpSession, LinkedList trail, ContainerUtil).
	* src/de/schlund/pfixxml/ServletManager.java: calling
	registerSession(session, traillog, conutil) instead of
	registerSession(session, conutil) because we do not want to loose
	the traillog if we jump to ssl and invalidate the old session.
	* src/de/schlund/pfixxml/exceptionhandler/ExceptionContext.java:
	corrected date presentation by setting timezone and locale.
	* src/de/schlund/pfixxml/exceptionhandler/PFXHandler.java:
	moved messages like "no rule matched" from mail subject to body.


2002-08-02  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/serverutil/SessionAdmin.java
	(getInstance): remove double lock idiom for getInstance(): now we
	create the instance when we declare the instance variable.

	* META-INF/pfixcore.version: starting 0.1.009-pre

	* example/core/xsl/navigation.xsl: changed the default behaviour
	for jsbuttons to the same as for buttons: We now need to give the
	attibute mode="desc" to both of them for having the behaviour that
	a button/jsbutton is active (that means: no link) when one of it's
	children is the current page. The former mode="self" is the
	default now.

	THIS IS AN INCOMPATIBLE CHANGE! but still shouldn't bite in too many
	places.

2002-08-02 Joerg Haecker    <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/*: minor stuff:
	added some comments for javadoc, changed some access rights
	from public to package.

2002-08-01  Thomas Stieler  <stieler@schlund.de>

	* example/core/build/create_tomcatweb.xsl: create <error-page>
	elements in web.xml for tomcats servlet configuration

2002-08-01  Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler/ExceptionHandler.java:
	a comment only
	* src/de/schlund/pfixxml/exceptionhandler/InstanceCheckerContainer.java:
	beautified report mail. Additional debug message. Bugfix( strace_obsolete
	was not interpreted properly)
	* src/de/schlund/pfixxml/exceptionhandler/PFXHandler.java:
	beautified report mail.
	* src/de/schlund/pfixxml/exceptionhandler/ReportGeneratorTask.java:
	beautified report mail.
	* src/de/schlund/pfixxml/exceptionhandler/STraceCheckerContainer.java:
	minor change
	* src/de/schlund/pfixxml/exceptionhandler/STraceCleanupTask.java:
	cleanup-task does not send mails any more.

2002-08-01  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/build/create_tomcatweb.xsl (mode): changed url-pattern from /NAME to /NAME/*

	* META-INF/pfixcore.version: bumped to 0.1.008

	* src/de/schlund/pfixxml/ResultDocument.java: removed obsolete setTargetXSLKey(...)

	* example/core/xsl/master.xsl: accept new parameter __servletpath

	* src/de/schlund/pfixxml/ServletManager.java (callProcess): set
	content type via public field DEF_CONTENT_TYPE instead of hardcoded value.

	* src-tomcat4/de/schlund/pfixxml/serverutil/tomcat4/TomcatUtil.java
	(getContextPath): new method. just use req.getContextPath();

	* src-jserv/de/schlund/pfixxml/serverutil/jserv/ModernJServUtil.java
	(getContextPath): just return ""

	* src/de/schlund/pfixxml/PfixServletRequest.java (getContextPath):
	new method. uses conUtil (see below)

	* src/de/schlund/pfixxml/serverutil/ContainerUtil.java
	(getContextPath): new method in interface. Needed because jserv
	has no req.getContextPath(), while tomcat has.
	Jserv's getServletPath == Tomcat's getContextPath + Tomcat's getServletPath.

	* src/de/schlund/pfixxml/AbstractXMLServer.java (process): add
	another parameter for the xsl trafo: __servletpath which is
	preq.getContextPath() + preq.getServletPath(). We will need this
	when we start using the pathinfo for sending the requested
	pagename.
	(handleDocument): handle errorcode, headers and content type
	supplied via the spdoc.

	* src/de/schlund/pfixcore/workflow/PageRequest.java (PageRequest):
	added another way to give the pagename in the request: If the pagename is encoded in the
	pathinfo, use this string instead of the __page parameter. E.g.
	/xml/static/foo;jsessionid=23423423423 would give a pagename of "foo".

	For this to work flawlessly we need more work in the xsl/xml part
	to finally stop using __page at all. For now it makes no problems
	as we never use pathinfo anyway.

	* src/de/schlund/pfixcore/workflow/Context.java (documentFromCurrentStep):
	Changed the reaction on error conditions: If a PageRequest doesn't
	have a corresponding state, return a 404 in a new SPDocument (no other processing happens).
	If a PageRequest gives a State that is inaccessible, try again with first page of the defaultflow.
	if this is inaccessible, too, throw an Exception.

	* src/de/schlund/pfixxml/SPDocument.java (setResponseContentType):
	(getResponseContentType):
	(setResponseErrorText):
	(getResponseErrorText):
	(setResponseError):
	(getResponseError):
	(addResponseHeader):
	(getResponseHeader): New methods. The will be used to call
	similar methods in the HttpServletResponse. E.g. error handling:
	res.sendError(spdoc.getResponseError, spdoc.getResponseErrorText);
		- or -
	res.sendError(spdoc.getResponseError);
	The others work similar.

2002-07-31 Joerg Haecker  <haecker@schlund.de>

	* src/de/schlund/pfixxml/exceptionhandler: added directory for package
	exceptionhandler.
	* src/de/schlund/pfixxml/exceptionhandler/*: refactoring stuff and bugfix
	for missing info in mail.
	* example/common/conf/exceptionhandler.prop.in: minor configuration changes.
	* example/common/conf/factory.prop.in: adjusted property to find
	ExceptionHandler.
	* src/de/schlund/pfixxml/FactoryInitServlet.java: removed clumsy log4j-call
	in a loop for debugging issues.
	* src/de/schlund/pfixxml/PfixServletRequest.java: removed obsolete method
	* src/de/schlund/pfixxml/ServletManager.java: modified import for
	exceptionhandler.
	* upgraded to version 0.1.007

2002-07-28  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/build/iwrapper.xsl: changed to allow for (multiple)
	<default value="foo"> Nodes in a parameter specification. These
	are used as default values for this parameter in case the
	parameter is not given in the request.

	* src/de/schlund/pfixcore/generator/IWrapperParamInfo.java
	(IWrapperParamInfo): Changed to need another Parameter in the
	Constructor (which may be null): RequestParam[] defaultval. These
	can be defautl values which are given in the iwrapper XML desription.
	(initValueFromRequest): changed to use the defaultval (if not null) in case
	the input parameter has not been set in the request.

	* src/de/schlund/pfixcore/generator/IWrapperIndexedParam.java (getParamInfoForIndex):
	(initValueFromRequest): changed to the new signatur of IWrapperParamInfo

	* docs/IWrapper_XML_Description_Language.txt: Changed docs accordingly

2002-07-26 Joerg Haecker <haecker@schlund.de>

	* src/de/schlund/pfixxml/ExceptionHandler.java: prettified report-mail.
	* src/de/schlund/pfixxml/ExceptionHandler.java: bugfix. Some information in
	mail was 'null' caused by relocation.
	* src/de/schlund/pfixxml/PfixServletRequest.java: added
		-getOriginalServerName
		-getOriginalRequestURI
		-getCurrentServerName
		-getCurrentRequestURI
	to fix bug above.

2002-07-25  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/workflow/Context.java (checkForAdminMode):
	moved the adminmode stuff to it's own method. This is being called
	on init() and on reset() so it can react on reloaded properties. No need to check
	it in the hot code path.

	* example/core/xsl/utils.xsl: <pfx:maincontent> Use empty parent_path and parent_part
	when calling pfx:include. This way we ensure the dependency will be added to the toplevel
	xml file, so we can use pfx:maintcontent even from inside another include part

2002-07-25 Joerg Haecker <haecker@schlund.de>
	* src/de/schlund/pfixxml/ExceptionHandler.java: cleanup-task only sends
	mail if a STraceCheckerContainer is removed.
	* src/de/schlund/pfixxml/ExceptionHandler.java: assigned thread-names
	for cleanup-, reporttask and exceptionhandling-thread.
	* src/de/schlund/pfxxml/FactoryInitServlet.java: added stack-trace to
	log file if factory.init throws an exception.
	* minor fixes and additional debug messages.

2002-07-25  Thomas Stieler  <stieler@schlund.de>

	* example/core/build/create_serverxml.xsl:
	Added node "debug" used for tomcat configuration

2002-07-25 Joerg Haecker <haecker@schlund.de>
	* src/de/schlund/pfixxml/ExceptionHandler.java: added property reloading during runtime.
	* src/de/schlund/pfixxml/ExceptionHandler.java: bugfix

2002-07-24  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/navigation.xsl: <pfx:elink>: Escape "=", too

2002-07-24 Joerg Haecker <haecker@schlund.de>
	* bugfix in src/de/schlund/pfixxml/ExceptionHandler.java

2002-07-24  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/example/OrderFinalizer.java: Removed, now use the customization
	via the properties.

	* src/de/schlund/pfixcore/workflow/app/ResdocSimpleFinalizer.java (renderDefault):
	Added ability to customze via properties which ContextResources
	should be called for insertStatus(). Use something like
	pagerequest.<PAGENAME>.resdocfinalizer.insert.<NODENAME_A>=<ContextResourceClassName_A> ...
	to have ContextResource A be called as
		A.insertStatus(ResultDocument, ResultDocument.createNode(NODENAME_A));
	and so on.

	Basically this means you don't have to write a ResdocFinalizer for most cases anymore!

2002-07-24 Joerg Haecker <haecker@schlund.de>
	* src/de/schlund/pfixxml/ExceptionHandler.java: new way to handle exceptions. Now we
	can say how many exceptions per time rate will be send by mail.
	* src/de/schlund/pfixxml/ServletManager.java: minor changes for integration of ExceptionHandler.
	* example/common/conf/exceptionhandler.prop.in: added configuration file for ExceptionHandler.
	* lib/activation-1.0.2.jar, lib/mail-1.3.jar: added jars from sun for mail handling. SMTPAppender
	from log4j is not used any more.
	* example/common/conf/pfixlog.xml.in: Removed SMTPAppender configuration.
	* example/common/conf/factory.prop.in: Added configuration  for ExceptionHandler.

2002-07-23  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/build/create_apacheconf.xsl: addded <literalapache> node for projects.xml so
	you can add any additinal apache config statements.

	* example/core/xsl/navigation.xsl: all buttons: for target="_popup": changed
	@width => @popupwidth, @height => @popupheight and @title=>@popupid

2002-07-22  Thomas Stieler  <stieler@schlund.de>

	* example/core/build/create_jservprop.xsl:
	added optional node /projects/common/jserv/jvmopts
	in projects.xml, if exists, generate "wrapper.bin.parameters"
	property in jserv.prop.

2002-07-19  Marcus Knappe <knappe@schlund.de>

	* src/de/schlund/pfxxml/FactoryInitServlet.java (init)
	extended exception diagnose, added comments for debugging.

2002-07-18  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/forminput.xsl <pfx:errorbox>: Added ability to
	specify the params this errorbox should handle. If pfx:errorbox
	has one or more subnodes of <pfx:paramref name="..."/> only the
	errors belonging to those params will be displayed.
	This is only preliminary.

2002-07-17  Thomas Stieler  <stieler@schlund.de>

	* example/core/xsl/master.xsl:
	copy all attributes of body tag

2002-07-17  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/serverutil/SessionAdmin.java (registerSession):
	* src/de/schlund/pfixcore/editor/handlers/SessionManagerState.java (getDocument):
	* src/de/schlund/pfixxml/serverutil/SessionInfoStruct.java (getSessionIdURI):
	(getContainerUtil):
	* src/de/schlund/pfixxml/ServletManager.java (registerSession):
	(redirectToSecureSSLSession):
	Also use the ContainerUtil in the SesionInfoStruct, SessionAdmin and SessionManagerState.

2002-07-16  Thomas Stieler <stieler@schlund.de>

	* example/servletconf/projects.xml
	added nodes <defaulthost/> and <jvmroute/> for tomcat configuration

2002-07-16  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/example/SampleRes.java (SampleRes):
	Don't just store the strings of the context resources class name,
	but provide for getter methods to all the used
	ContextResources. changed other files in this directory as needed
	for this change.

	* src/de/schlund/pfixcore/example/iwrapper/ New directory, move
	all the example *.iwrp files there. Modified other files as needed
	for this change.

2002-07-10  Jens Lautenbacher  <jtl@schlund.de>, Thomas Stieler <stieler@schlund.de>

	* Makefile (BUILDPATH): Remade build system. Tomcat is now included...
	Many changes to make this work.

2002-06-29 Volker Zaich <zaich@schlund.de>, Jens Lautenbacher  <jtl@schlund.de>

	Implemented first version of DHTML layer objects. All this is in need of more functionality
	* example/core/script/baselib.js (__js_Layer): Added JavaScript tree structure to hold "layer" objects.
	* example/core/xsl/utils.xsl: added pfx:layer, pfx:switch and
	pfx:layer_ref to help in creating a tree of "layer" objects
	(realized via divs).
	* example/sample1/txt/styles.xml: added sample "layer" class.


2002-06-28  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/targets/AuxDependencyManager.java (checkLoopFree):
	We will not accept a dependency when adding the child to the parent would result in a
	include loop.
	* src/de/schlund/pfixxml/IncludeDocument.java (get): React to the return value of the
	dependency adder, and just return null when the dependency handling didn't work.
	This class, together with DependencyTracker is ugly as hell. Need to find a different way to
	return status in the future.

2002-06-06  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/generator/IWrapperParamInfo.java (initValueFromRequest):
	Eeeek. use a String[] here instead of a Object[].

2002-06-06  Rouven Schoeller  <rouven@schlund.de>

	* Makefile.local (JAVADOC_GENERALOPTS): fixed source path (only
	one time allowed, append path elements with ":")

2002-05-22 Bernd Koecke <bk@schlund.de>

	Changes for getting an URI with encoded sessionid from ContainerUtil

2002-05-21  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/ServletManager.java (tryReloadProperties):
	* src/de/schlund/pfixxml/AbstractXMLServer.java (tryReloadProperties):
	* src/de/schlund/pfixxml/ContextXMLServer.java (tryReloadProperties):
	* src/de/schlund/pfixxml/targets/TargetGeneratorFactory.java (createGenerator):
	* src/de/schlund/pfixxml/targets/TargetGenerator.java (tryReinit):
	* src/de/schlund/pfixxml/AppContext.java (reset):
	* src/de/schlund/pfixcore/workflow/Context.java (reset):
	* src/de/schlund/pfixcore/workflow/NavigationFactory.java (getNavigation):
	Implemented automatic reloading of the servlet specific property
	file _and_ the depend file for the TargetGenerator. This needs some testing.

2002-05-17  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/SPDocument.java (storeFrameAnchors):
	* src/de/schlund/pfixxml/AbstractXMLServer.java (createAnchorMap):
	New methods for enabling handling of anchors on frames. Use
	__anchor=<frame>:<anchor> in links to use this.

2002-05-15  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/ServletManager.java and almost every
	other class: To much for this changelog. Almost completely rewrote
	the way a request is handled. Removed HttpServletRequest from
	almost everywhere, now using PfixServletRequest. See also last
	changelog entry, and dig through the code starting with
	ServletManager, AbstractXMLServer and so on. On that way I removed
	some classes taht are not needed anymore or that stopped working
	a long time ago (e.g. RequestRecorder comes to mind)

2002-05-13  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixxml/PfixServletRequest.java:
	* src/de/schlund/pfixxml/TestServlet.java: ***work in progress***
	This will become the new ServletManager. But I need to make sure
	it really works, as the whole handling of Requests will change
	...again :-). We will return to relocate-first-process-afterwards.
	and we will use PfixServletRequest, which will finally allow to
	handle fileuploads the same way as all other parameters.

2002-05-03  Jens Lautenbacher  <jtl@schlund.de>

	* Makefile: Added Pfixxml back to the tree. Hacked Makefile a lot to
	keep it building with tomcat vs. jserv (default)

2002-04-29  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/generator/IWrapperImpl.java (gimmeIHandler):
	renamed the methods mentioned below to further avoid conflicts (get* => gimme*; setOrder=>defineOrder)

2002-04-28  Jens Lautenbacher  <jtl@schlund.de>

	* src/de/schlund/pfixcore/generator/IWrapperImpl.java (getAllParamInfos):
	made a lot of methods final to protect e.g. getPrefix to become overwritten by a parameter
	called "Prefix"

2002-04-26  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/xsl/metatags.xsl: now a dyninclude will no longer be repeated as many times
	as there are product branches. Also some cosmetix fixes.

2002-04-24 Bernd Koecke <bk@schlund.de>
	* Changed various files for handling different src and build dirs.

2002-04-19  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/generator/IWrapperIndexedParam.java (getKeys):
	bug fix. this used to return <name>.<index> instead of just <index>

2002-04-18  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java:
	* de/schlund/pfixcore/workflow/app/IWrapperContainer.java:
	removed prerequisitesMet(), areHandlerActive(). They are now in IHandlerContainer

	* de/schlund/pfixcore/workflow/app/IHandlerSimpleContainer.java: new class
	* de/schlund/pfixcore/workflow/app/IHandlerContainer.java: new class
	This class will use the new IHandlerFactory method to get to a list of handlers.
	* de/schlund/pfixcore/workflow/app/IHandlerContainerFactory.java: new class

	* de/schlund/pfixcore/generator/IHandlerFactory.java (getIHandlerForWrapperClass):
	new method which allows to get the handler from the wrapper
	classname without always having to instantiate a wrapper
	object. This will help to get rid of having to create a wrapper
	instance just for asking the associated handlers if they are
	active or need data.

	* example/Makefile: remove all traces of compute_geometry

	* example/core/xsl/navigation.xsl: if attribute page is not given in buttons, use current page.

2002-04-17 Bernd Koecke <bk@schlund.de>
	* example/core/build/create_apacheconf_tomcat.xsl: changed rewrite rules to tomcat only mode.

2002-04-17  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/*.xsl: Big Change: Changed generation of all links to be of
	the form /<handler>;<sessid>.

2002-04-17 Bernd Koecke <bk@schlund.de>
	* Removed the 'link'-line (item 14-15) from example/INSTALL.tc-4.0.3
	This line was unnecessary and wrong.

2002-04-17 Bernd Koecke <bk@schlund.de>
	* Bugfix in *.web.xml.in files in example/tomcat dir

2002-04-17 Bernd Koecke <bk@schlund.de>
	* Add the 'link'-line (item 14-15) to example/INSTALL.tc-4.0.3

2002-04-17  Jens Lautenbacher  <jtl@schlund.de>

	* example/Makefile: remove all the stuff that has to do with image geometry handling

	* de/schlund/pfixcore/editor/handlers/ImagesUploadHandler.java (handleSubmittedData):
	remove deleting of *.d files.

	* example/core/xsl/include.xsl: make use of new ImageInfo class from pfixxml (see there).
	No .* files are necessary anymore.

2002-04-16  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/workflow/app/DefaultAuthIWrapperState.java (getDocument):
	added calls to retrieveCurrentStatus(...) for the userhandler in case of errors.

2002-04-12  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (retrieveCurrentStatus):
	Added another Category (SERIALIZER) to debug spurious errors with the content of the serialized part

2002-04-11  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/utils.xsl: removed <pfx:elink>
	* example/core/xsl/navigation.xsl: put it there instead. Rewrote it so it can now handle
	<pfx:argument> and target="_popup" the same way as <pfx:button> does.

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (areHandlerActive):
	Add another policy NONE which just returns true w/o asking any handlers

2002-04-08  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (continueSubmit):
	set selectedwrappers = currentgroup when advancing the group index, so retrieveCurrentStatus will
	use the right (aka: following) iwrappers.

2002-04-05  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/include.xsl: added the parameter prohibitEdit,
	which, if not set to the default value "no", prohibits the
	generation of the editmode links enclosing all includes. This is to keep filesizes low
	for production systems.
	* example/Makefile (PROHIBIT_EDIT):  Set the variable to "yes" when MAKE_MODE=prod
	* example/core/build/create_depend.xsl: in the standardpage, set
	the xsl-param "prohibitEdit" to "yes" when the above is true. this forces include.xsl to remove editor funktionality.

	* example/core/xsl/forminput.xsl: search for pfx:options also deeper into the child tree
	(via .//pfx:option)

2002-03-28  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/resources/EditorSearchImpl.java
	(startSearch): also get the relevant dynincludes and search over
	them

	* de/schlund/pfixcore/editor/handlers/SearchFinalizer.java
	(renderDefault): also render the results for dynincludes

	* de/schlund/pfixcore/editor/EditorHelper.java
	(renderAllPatternMatchingIncludes): new argument to discriminate
	between the result for includes and dynincludes.

	* de/schlund/pfixcore/editor/resources/EditorSearch.java:
	(getDynResultSet):
	(getDynSearchContexts): new methods to get results of search over dynamic includes (commons)

	* de/schlund/pfixcore/editor/handlers/CommonsFinalizer.java:
	(renderDefault): also render the current search result (for dynincludes) here...

	* de/schlund/pfixcore/editor/interfaces/Search.iwrp:
	* de/schlund/pfixcore/editor/handlers/SearchIncludeHandler.java (handleSubmittedData):
	added a "reset" param and handle it here.

	* example/core/editor/txt/pages/main_commons.xml:
	* example/core/editor/txt/pages/main_includes.xml:
	* example/core/editor/txt/pages/main_search.xml:  changed to reflect new search over dynincludes and
	the display of the result (or dynresult) in the list of includes on the includes and on the commons page

2002-03-27  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/xsl/metatags.xsl: make <diaplyallincludes/> customizable with a path argument

	* de/schlund/pfixcore/editor/handlers/IncludesFinalizer.java
	(renderDefault): also render the current search result here...

	* de/schlund/pfixcore/editor/EditorHelper.java
	(doUpdateForAuxDependency): fixed a bug where we use the wrong
	target generator when getting targets for pageinfos.

	* de/schlund/pfixcore/editor/resources/EditorSearchImpl.java (doTextNodeSearch):
	(doSourceCodeSearch): new methods to implement two different searches
	* de/schlund/pfixcore/editor/resources/EditorSearchImple.java (startSearch):
	(setFullSource):
	(getFullSource); new methods
	* de/schlund/pfixcore/editor/resources/EditorSearch.java (startSearch):
	(setFullSource):
	(getFullSource); new methods
	* de/schlund/pfixcore/editor/interfaces/Search.iwrp:
	* de/schlund/pfixcore/editor/handlers/SearchIncludeHandler.java (handleSubmittedData):
	(retrieveCurrentStatus): handle boolean value if doing search over full source code or only text content

	* de/schlund/pfixcore/editor/handlers/IncludesFinalizer.java (renderDefault): add another output for
	which other products use this includePART (not only the current branch)

	* de/schlund/pfixcore/editor/EditorPageUpdater.java (addTarget):
	guard against null targets. I don't know yet why this happens at
	all, but at least we don't want to let the thread die here

	* de/schlund/pfixcore/editor/EditorHelper.java (renderBranchOptions): new method

2002-03-25 Thomas Stieler <stieler@schlund.de>
	- removed ContextResourceImpl
	* fixed classes extending ContextResourceImpl

2002-03-21 Bernd Koecke <bk@schlund.de>
	* example/core/build/create_apacheconf_jserv.xsl: Added rewriterules for modern-jserv.

2002-03-21 Bernd Koecke <bk@schlund.de>
	* example/Makefile: removed building of tomcat/apache.conf for the default target

2002-03-21  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/EditorHelper.java (resetIncludeDocumentTarget): used to reset the modtime of the
	IncludeDocument's associated XMLTarget.
	* de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (handleSubmittedData): use it there

2002-03-20  Jens Lautenbacher  <jtl@schlund.de>

	* example/* removed __sendingdata everywhere (see below)

2002-03-20  Thomas Stieler  <stieler@schlund.de>

	* example/core/xsl/navigation.xsl:
	adding "__sendingdata=1" to arguments when <pfx:argument> is given

2002-03-20  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/navigation.xsl: button_impl: removed the <span>
	around the <a> and put class=normalclass directly into the <a>

2002-03-19 Bernd Koecke <bk@schlund.de>
    * example/INSTALL.tc-4.0.3: added as documentation

2002-03-18  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/navigation.xsl: removed pfx:navibutton. Put missing functionality into pfx:button.

2002-03-15  Thomas Stieler  <stieler@schlund.de>

	* example/core/xsl/forminput.xsl:
	- removed template for vselect
	- dynselect can display fixed <pfx:options>, if @position = "end" at the end
	  of the list, otherwise at the beginning

2002-03-15 Bernd Koecke <bk@schlund.de>
	* de/schlund/pfixcore/editor/EditorPageUpdater.java (init): made the Thread to a daemon
	* example/Makefile: added new targets for building the neccessary tomcat files.
	For building all the files, type 'make pre-install'. This builds the following files:
	    apache.conf
	    all web.xml files
	    read the original tomcat server.xml and add our hosts
	    worker.conf
	With 'make install' all of the above will be done. Additionally this target creates the
	missing dirs in tomcat, installs the webapps, copies jars and installs our server.xml
	* example/handlejars.pl: utility script for handling the jar files
	the rest of the files are stylesheets and config files for the build process
	and will be explained in a separate readme. This will be coming soon.

2002-03-14  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (handleSubmittedData):
	Eeeeeeeek. With a fast machine we do all the stuff in < 1 sec:
	create a new file, read it, import the uploaded content und save
	it back... So for the next read, the modtime of the new file with
	content is the same as the new file without a part... So the
	target will not update itself.  Using a Thread.sleep(1000) fixes
	this for now, but this is a bloody hack. Why isn't the modtime of
	a file not exact down to the millisecond????

2002-03-13  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/resources/EditorSearchContext.java: new class. used to store a match "context" (see below).

	* de/schlund/pfixcore/editor/resources/EditorSearchImpl.java (startSearch): now get all matches for an
	include, get their "context": a short string before the match and a short string after the match, and remember them.

	* de/schlund/pfixcore/editor/EditorHelper.java (renderAllPatternMatchingIncludes): new method.
	Used to print out all includes matching a search together with their search contexts.

	* de/schlund/pfixcore/editor/resources/EditorSearchImpl.java (startSearch):
	guard against "null" parts. (not yet defined includes)
	(addSearchContext): new method
	(getSearchContexts): new method
	* de/schlund/pfixcore/editor/resources/EditorSearch.java: change accordingly

	* de/schlund/pfixcore/editor/handlers/SearchFinalizer.java (SearchFinalizer): Use the new search information

	* de/schlund/pfixcore/editor/handlers/LogoutHandler.java (handleSubmittedData): changed to
	also reset EditorSearch when called

2002-03-12  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/handlers/SearchFinalizer: new file
	* de/schlund/pfixcore/editor/resources/EditorSearch.java: new file
	* de/schlund/pfixcore/editor/resources/EditorSearchImpl.java: new file
	* de/schlund/pfixcore/editor/handlers/SearchIncludeHandler.java: new file
	* de/schlund/pfixcore/editor/interfaces/Search.iwrp: new file
	* example/core/editor/txt/pages/main_search.xml: new file
	* example/core/editor/conf/depend.xml.in: changed acc.
	* example/core/editor/conf/config.prop.in: changed acc.
	* example/core/editor/txt/navigation.xml: changed acc.
	* example/core/editor/xsl/metatags.xsl: changed <displayallincludes/> to handle a target page.
	Sample implementation of a search facility. There's still a lot to do, but it surprisingly already works.

	* de/schlund/pfixcore/editor/resources/EditorRes.java:
	Added get<ResourceName> to get to the COntextResources without casting.
	* de/schlund/pfixcore/editor/handler/*.java: changed accordingly

2002-03-08  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/EditorUserAuthState.java: removed. Was dead code
	ever since DefaultAuthIWrapperState.

2002-03-07  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/generator/IWrapperImpl.java (IWrapperImpl):
	remove the static Statuscode that it gets from teh system
	classloader. we now depend on the StatusCodeFactory being
	initialized properly

	* example/core/xsl/include.xsl: Uh, finally came around making
	editing of DynIncludes (aka "commons") via point-and-click in "admin-mode" possible.
	* example/core/editor/conf/config.prop.in: Add another
	auxinterface to the authpage for the selection of a DynInclude

2002-03-04  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/forminput.xsl: dramatically simplified the <pfx:argument> and <pfx:command> handling. Now
	it should also accept <ixsl:...> stuff inside a command/argument node.

2002-03-01  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/forminput.xsl:
	* example/core/xsl/navigation.xsl: Changed a bug with the new
	<pfx:command> where it uses the current page even when the
	button/form destination is on a diferent page. Now you can use a
	"page" attribute in pfx:pcommand to specifiy the page, but it
	still defaults to the current page
	* example/core/editor/xsl/metatags.xsl: Use it here.

	* example/core/editor/xsl/metatags.xsl: HORRAY! finally: the textarea fills the whole width of the screen!

2002-02-27  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (readIWrapperGroupsConfigFromProperties):
	check the prefixes if they contain a "." if yes, they are expected to be in the form <int>.<string>
	where <string> is the real prefix and <int> is used for calling wrapper.setOrder(int) (see below).

	* de/schlund/pfixcore/generator/IWrapperImpl.java (compareTo):
	changed to compare against a Integer value "order".
	This may be set from the outside to define a order of execution. If not set, it defaults to 99.
	(setOrder): new method
	(getOrder): ditto

	* de/schlund/pfixcore/generator/IWrapper.java (setOrder): new method in interface

	* example/*/conf/config.prop.in: changed to use the ordered definition of interfaces explained above.

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (loadIWrappers): removed
	(handleSubmittedData): do loading a single wrapper here before calling the handleSubmittedData method

	* de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java (getDocument): removed the seperate load cycle.
	Now loading happens automatically just before a handler's handleSubmittedData() method is called

	* de/schlund/pfixcore/workflow/app/ResdocFinalizer.java (onLoadError): removed
	* de/schlund/pfixcore/workflow/app/ResdocSimpleFinalizer.java (onLoadError): ditto

2002-02-26  Thomas Stieler  <stieler@schlund.de>

	* de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java (getResdocFinalizer):
	Throws RuntimeException if ResdocFinalizer could not be instanciated.

2002-02-25  Thomas Stieler  <stieler@schlund.de>

	* de/schlund/pfixcore/generator/IWrapperImpl.java (getIHandler):
	Added this.getClass().getName() to RuntimeException.

2002-02-21  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/generator/IWrapperParamInfo.java (setCustomSCode): new method
	* build_lib/iwrapper.xsl: new parameter @missingscode for mandatory params. Now you can set
	a custom StatusCode when the param is not submitted.
	* docs/IWrapper_XML_Description_Language.txt: document it.
	* de/schlund/pfixcore/example/AdultInfo.iwrp: Example use
	* de/schlund/pfixcore/example/StatusCodes.prop: Example use

2002-02-20  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/navigation.xsl:
	* example/core/xsl/forminput.xsl:
	Finally managed to handle the various <pfx:button> types and <pfx:xinp type="submit/image">
	similar with respect to arguments (aka __DATA...) and commands (aka __CMD[...]...).
	Now you can forget about the arcane syntax that was needed to encode arguments into the name of
	a submit button/image. Also the way commands are added is simplified.
	Now you can do everywhere where <pfx:argument> was  already allowed AND for submit/image buttons
	the following:

	<pfx:THE_TAG>
	  <pfx:argument name="some_name">some_value</pfx:argument>
	   ....
	   <pfx:command name="some_cmd">cmd_value</pfx:command>
	   ....
	</pfx:THE_TAG>

	where some_cmd is one of SELWRP or SELGRP (these are the only commands defined for now).
	This was a fun hack.

	* example/sample1/txt/pages/*:
	* example/core/editor/xsl/metatags:
	* example/core/editor/txt/pages/*: changed according to the above.

2002-02-19  Thomas Stieler  <stieler@schlund.de>

	* example/core/xsl/forminput.xsl:
	Added a template <pfx:checknotactive>. If the named interface is not active templates will
	be applied to the child nodes.


2002-02-18  Thomas Stieler <stieler@schlund.de>
	* de/schlbnd/pfixcorde/PageRequestProperties.java (PageRequestProperties)
	Throw XMLException if no classname property is definded for an pagerequest.

2002-02-14  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/forminput.xsl: added vselect template.

2002-02-12  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/util/MakeStatusMessageXML.java (MakeStatusMessageXML):
	Bug fix. now also append new StatusCodes that are lexically after all already existing parts

2002-02-08  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/handlers/CommonsBranchHandler.java:
	* de/schlund/pfixcore/editor/handlers/CommonsUploadHandler.java:
	* de/schlund/pfixcore/editor/interfaces/CommonsBranch.iwrp:
	* de/schlund/pfixcore/editor/interfaces/CommonsUpload.iwrp:
	New files. These just extend the relative files for the includes page. This worked out to be really cool.
	Finished rest of commons page.
	* example/core/editor/*: changed config & UI accordingly.

	* de/schlund/pfixcore/editor/EditorCommonsFactory.java (init): changed property to "editorcommonsfactory.includefile"
	to match other factories
	(readFile): make sure to update the modification time

	* example/common/conf/factory.prop.in
	* example/common/conf/pustefix.prop.in
	Changed to match new property. Put the stuff into factory.prop, not pustefix.prop.

	* de/schlund/pfixcore/editor/handlers/CommonsFinalizer.java (renderDefault): really use ess.getCurrentCommon
	* de/schlund/pfixcore/editor/handlers/CommonsHandler.java (handleSubmittedData): really use ess.setCurrentCommon

	* de/schlund/pfixcore/editor/EditorHelper.java (createBackup):
	changed method signature to pass the AuxDependency explicitely.
	* de/schlund/pfixcore/editor/handlers/IncludesBranchHandler.java (handleSubmittedData):
	* de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (handleSubmittedData):
	use it accordingly

	* de/schlund/pfixcore/editor/handlers/IncludesBranchHandler.java (setCurrentInclude):
	* de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (getCurrentInclude):
	new methods, used instead of a direct esess.getCurrentInclude()
	call. This is made so the retrival of the include can be
	overwritten in child classes (see below). Use this method all over the two files.

2002-02-07  Thomas Stieler  <stieler@schlund.de>

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (readIWrappersConfigFromProperties):
	Added pagename in warning

2002-02-06  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/handlers/IncludesFinalizer.java (renderAllIncludes): removed method
	* de/schlund/pfixcore/editor/EditorHelper.java (renderAllIncludesForNavigation):
	moved method from IncludesFinalizer/renderAllIncludes

	* de/schlund/pfixcore/editor/handlers/CommonsHandler.java:
	* de/schlund/pfixcore/editor/EditorCommonsFactory.java:
	* de/schlund/pfixcore/editor/interfaces/Commons.iwrp:
	* de/schlund/pfixcore/editor/handlers/CommonsFinalizer.java:
	Added. First part of tackling the remaining bit: editing of dynamic includes ("commons")

2002-01-23  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/navigation.xsl:
	* example/core/xsl/include.xsl: Changes to cope with xalan2.2 bugs/features. no functional changes

2002-01-17  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/generator/prechecks/RegexpCheck.java (RegexpCheck):
	* de/schlund/pfixcore/generator/casters/ToDate.java (ToDate):
	* de/schlund/pfixcore/generator/casters/ToInteger.java (ToInteger):
	* de/schlund/pfixcore/generator/casters/ToFloat.java (ToFloat):
	* de/schlund/pfixcore/generator/casters/ToBoolean.java (ToBoolean):
	* de/schlund/pfixcore/generator/postchecks/FloatRange.java (FloatRange):
	* de/schlund/pfixcore/generator/postchecks/IntegerRange.java (IntegerRange):
	make statuscodes seteable via a <cparam>: in the case of casters it's just one called scode_casterror,
	but generally it depends on the type of checker used (as it may use more than one scode).

	* de/schlund/pfixcore/generator/casters/SimpleCaster.java: removed
	* de/schlund/pfixcore/generator/casters/SimplePreChecker.java: removed
	* de/schlund/pfixcore/generator/casters/SimplePostChecker.java: removed

2002-01-16  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/workflow/app/DefaultAuthIWrapperState.java: Guard agains null value

	* example/core/xsl/master.xsl: Make frameless pages behave more like frame containing pages.
	Needs testing.

	* de/schlund/pfixcore/editor/EditorProductFactory.java (readFile): parse for <namespace> nodes

	* de/schlund/pfixcore/editor/PfixcoreNamespace.java: new class
	* de/schlund/pfixcore/editor/EditorProduct.java (getPfixcoreNamespace): new Method
	* de/schlund/pfixcore/editor/EditorProduct.java (EditorProduct): Store all used Namespaces
	in this product

	* de/schlund/pfixcore/editor/EditorHelper.java (checkForFile): use known Namespaces for Product when
	making a new file

	* de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (IncludesUploadHandler):
	made DocumentBuilderFactory namespace aware
	(handleSubmittedData): add all known namespaces to the "<product>....</product>" that clamps the submitted
	string data, but remove them again after importing. Handle exceptions on importing the newnode.

	* de/schlund/pfixcore/editor/handlers/IncludesBranchHandler.java
	(handleSubmittedData): changed according to new signature of
	EditorHelper.checkForFile(...)

2002-01-16  Thomas Stieler  <stieler@schlund.de>

	* navigation.xsl: Append <pfx:argument>-nodes as parameters also if using target="_popup" with <pfx:button/>

2002-01-10  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/interfaces/ImagesUpload.iwrp:
	* de/schlund/pfixcore/editor/interfaces/IncludesUpload.iwrp:
	Both: Backup is no longer an array, just a single String
	* de/schlund/pfixcore/editor/handlers/ImagesUploadHandler.java (handleSubmittedData):
	* de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (handleSubmittedData):
	Both: handle accordingly

	* de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (retrieveCurrentStatus): remove rendering
	of backup content.

	* de/schlund/pfixcore/editor/handlers/ImagesUploadHandler.java (retrieveCurrentStatus): removed

	* de/schlund/pfixcore/editor/EditorHelper.java (renderBackupOptions): new method

	* de/schlund/pfixcore/editor/handlers/IncludesFinalizer.java (renderDefault): add backup content here
	* de/schlund/pfixcore/editor/handlers/ImagesFinalizer.java (renderDefault): add backup content here

	* example/core/xsl/forminput.xsl: removed <pfx:xinp type="vselect">. Use dyselect instead.
	Bugfixes for dynselect.
	* example/core/editor/xsl/metatags.xsl: changed accordingly

	* example/sample1/xml/two_frames_vert.xml: Added
	* example/sample1/conf/config.prop.in:
	* example/sample1/conf/depend.xml.in: Add a bunch of pages for navi testing.
	* example/sample1/xsl/metatags.xsl: add sample_navigation, sample_body. All preliminary.

2002-01-07  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/txt/pages/*: remove pfx:interface as long as it isn't implemented anyways

	* example/core/xsl/utils.xsl: remove pfx:errorbox, pfx:label here
	* example/core/xsl/forminput.xsl: add them here, and remove pfx:formlabel, pfx:errorline and related stupid stuff.
	Now you can use <pfx:label> also in metatags.

	* example/core/editor/xsl/metatags.xsl: change accordingly.

2001-12-28  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/xsl/metatags.xsl: handle reuse of backed up images in the UI

	* de/schlund/pfixcore/editor/interfaces/IncludesUpload.iwrp: just moved some lines around

	* de/schlund/pfixcore/editor/handlers/IncludesBranchHandler.java (handleSubmittedData):
	use EditorHelper.doUpdateForAuxDependency.

	* de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (handleSubmittedData): bug fixes,
	use EditorHelper.doUpdateForAuxDependency.
	Use EDITOR logger for change data logging.

	* de/schlund/pfixcore/editor/handlers/ImagesUploadHandler.java (retrieveCurrentStatus):
	add backup names
	(handleSubmittedData): handle backuped images to be reused.

	* de/schlund/pfixcore/editor/handlers/ImagesHandler.java
	(retrieveCurrentStatus): new method, try to get the lock for the
	image here already ( needed for "includes upload handler" ( which will
	be asked afterwards) to be active)

	* de/schlund/pfixcore/editor/interfaces/ImagesUpload.iwrp: add Backup and HaveBackup param.

	* de/schlund/pfixcore/editor/EditorHelper.java
	(contructBackupFile): New private method
	(getBackupImageFile): new public method
	(createBackup): simplified. use contructBackupFile.
	(createBackupImage): new method, for backup of image data
	(doUpdateForAuxDependency): new method, used by includesbranch and
	includesupload to trigger a asynchronous rebuild of affected pages
	but make sure that _one_ page is redone synchronously.

	* de/schlund/pfixcore/editor/ReverseStringComp.java: removed
	* de/schlund/pfixcore/editor/ReverseCreationComp.java: Added
	* de/schlund/pfixcore/editor/EditorHelper.java (getBackupNames):
	Use it here instead of lexical compare of file name (stupid me).

2001-12-26  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/EditorHelper.java (getAuxdepsForInclude): Really recurse.

2001-12-24  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (handleSubmittedData):
	better error message: lines/cols

	* *** Happy Xmas ***

	* example/core/editor/*: UI and bug fixes.

	* de/schlund/pfixcore/editor/interfaces/Includes.iwrp: remove product param.
	Will be deduced by Includes Handler on it's own.
	* example/core/xsl/include.xsl: remove product param here, too when calling the editor

	* de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (handleSubmittedData):
	rewritten. Don't use own parser, use targetgenerator
	use backup node directly, don'serialize first (stupid me)

	* de/schlund/pfixcore/editor/handlers/IncludesHandler.java:
	rewritten. Deduce if using the default branch or the product specific one.

	* de/schlund/pfixcore/editor/handlers/IncludesBranchHandler.java (handleSubmittedData):
	rewritten. Don't use own parser, use targetgenerator

	* de/schlund/pfixcore/editor/EditorHelper.java (createEmptyPart): return the Node
	(getBackupContent): return Content as Node not as String
	(getIncludeDocument): new method
	(getIncludePart): use it
	(getIncludePart): use both

2001-12-22  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/ReverseStringComp.java: Added.
	* de/schlund/pfixcore/editor/EditorHelper.java (getBackupNames):
	use it there

	* example/core/editor/xsl/metatags.xsl: bug fixes.

	* de/schlund/pfixcore/editor/EditorHelper.java (createEmptyPart):
	(checkForFile): new methods (copied from IncludesUploadHandler)
	* de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (handleSubmittedData):
	Use it there.

	* de/schlund/pfixcore/editor/handlers/IncludesBranchHandler.java (doSerialize):
	(doUpdate): new methods.
	Implemented "copy" and "delete" for includes branch handling.


2001-12-21  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/include.xsl: bug fixes

	* example/core/xsl/forminput.xsl: <xinp type="vselect"> fixes. removed dead code.

	* example/core/editor/xsl/metatags.xsl: UI for backup handling and
	for handling product specific branches (not ready yet)

	* de/schlund/pfixcore/editor/EditorHelper.java (contructBackupDir):
	(createBackup):
	(getBackupNames):
	(getBackupContent): New methods. Used for backup handling

	* de/schlund/pfixcore/editor/resources/EditorSessionStatusImpl.java (getBackupDir):
	* de/schlund/pfixcore/editor/resources/EditorSessionStatus.java:
	New method.

	* de/schlund/pfixcore/editor/interfaces/IncludesUpload.iwrp: Added
	boolean HaveBackup and String Backup for using a backup of the current branch instead

	* de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java (retrieveCurrentStatus):
	display all available backups for the current include branch
	(handleSubmittedData): handle using a backup instead.

	* de/schlund/pfixcore/editor/handlers/IncludesBranchHandler.java:
	* de/schlund/pfixcore/editor/interfaces/IncludesBranch.iwrp:
	Added. can now create a product specific branch of a include.

	* example/core/editor/conf/config.prop.in: changed accordingly

2001-12-20  Jens Lautenbacher  <jtl@schlund.de>

	* example/...: random bug fixes in xml/xslt stuff.

	* example/sample1/conf/depend.xml.in: bug fix: product is sample1, not editor

	* example/jserv/apache.conf.in: Added core/editor/img passthrough to sample1 project.

	* example/core/editor/xsl/metatags.xsl: bug fixes

	* example/core/editor/conf/config.prop.in: added extinc auxinterface to editoruserauth page

	* de/schlund/pfixcore/editor/StatusCodes.prop: Added INCLUDE_UNDEF

	* example/core/xsl/include.xsl: Implemented calling of editor from inside a project. (aka __editmode=admin)

2001-12-20-(night)  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/StatusCodes.prop:
	Added two statucodes for image uploading. THIS IS A BAD HACK as we don't ever use them at all, because
	we need to mirror the exceptions that may arise during parsing, so a static code won't help.
	THIS HACK HAS TO DIE. soon. We need to be able to add also Strings to the errors.

	* de/schlund/pfixcore/editor/handlers/IncludesHandler.java (retrieveCurrentStatus):
	added specialized method. We always try to (re-) get the lock on the current include here,
	so the uplinc interface can be active and so be able to insert the current stringvalue for the textarea.

	* example/core/editor/txt/pages/main_includes.xml:
	* example/core/editor/xsl/metatags.xsl:
	More work on Textarea for editing affected branch of current part.
	Will correctly be disabled when lock isn't held on part.

	Also change all occurences where we select an include to not only
	restrict the wrappers to incsel but also to uplinc (so the
	retrieveCurrentStatus method of this is called to fill the
	textarea).  We use the now defined order (alphabetically with the
	prefix names) so uplinc will always be called after incsel. This is a fun hack.

	* example/core/editor/txt/*: small unimportant stuff

	* de/schlund/pfixcore/editor/handlers/IncludesFinalizer.java (renderDefault):
	Removed rendering of the content of the textarea. This is what the IncludesUploadHandler
	has to do in it's retrieveCurrentStatus.

	* de/schlund/pfixcore/generator/IWrapperImpl.java (compareTo):
	new function, class now implements Comparable.

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (IWrapperGroup):
	Make the IWrapperGroup inner class use a TreeMap to hold
	IWrappers. This has the nice effect of having a defined order in
	which iwrappers (or their associated handlers) will be called for
	retrieving their status or for submit handling.

	* de/schlund/pfixcore/editor/handlers/IncludesUploadHandler.java: Added
	* de/schlund/pfixcore/editor/interfaces/IncludesUpload.iwrp: Added.
	Make everything optional, boolean HaveUpload is used to see if there is really data.
	Make uploading Images work. This needs some more work (and another interface) so
	one can switch to a product specific branch (and delete it again).

2001-12-19  Jens Lautenbacher  <jtl@schlund.de>
	* de/schlund/pfixcore/editor/EditorHelper.java (renderIncludeContent):
	return an Element (the part), used in for rendering the stringcontent for the textarea

	* de/schlund/pfixcore/editor/handlers/IncludesFinalizer.java (renderDefault):
	use the above here to render the affected content of the part for use in the textarea.
	BAD HACK.

	* example/core/editor/txt/pages/main_includes.xml:
	* example/core/editor/xsl/metatags.xsl:
	Textarea for editing affected branch of current part. Needs more work.

	* example/core/editor/txt/pages/main_editoruserauth.xml:
	design fix

2001-12-18  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/EditorProductFactory.java (readFile):
	Removed navigation special file handling.

	* example/common/conf/products.prj.in:
	Removed navigation element

	* example/core/editor/conf/config.prop.in:
	* example/sample1/conf/config.prop.in:
	Removed navigation.filename property

	* de/schlund/pfixcore/workflow/Context.java (NAVPROP):
	* de/schlund/pfixcore/workflow/Navigation.java (Navigation):
	Really make the navigation work with the depend.xml file.

2001-12-18-(night) Jens Lautenbacher  <jtl@schlund.de>

	* example/sample1/conf/navigation.xml:
	* example/core/editor/conf/navigation.xml:
	REMOVED!

	* example/sample1/conf/depend.xml.in:
	* example/core/editor/conf/depend.xml.in:
	Added content of corresponding navigation file here. no need to have more config files than needed.
	* example/sample1/xsl/custommaster.xsl:
	* example/sample1/xsl/custommetatags.xsl:
	* example/core/editor/xsl/custommetatags.xsl:
	* example/core/editor/xsl/custommaster.xsl:
	* example/sample1/xsl/metatags.xsl:
	* example/core/editor/xsl/metatags.xsl:
	* example/core/xsl/master.xsl:
	Changed accordingly.

2001-12-17  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/interfaces/IncludesUpload.iwrp:
	Added

	* de/schlund/pfixcore/util/MakeStatusMessageXML.java:
	* example/core/xsl/include.xsl:
	* example/* [include files]:
	IMPORTANT:

	changed <defaultproduct> -> <product name="default">
		<defaultlang>    -> <lang name="default">

2001-12-14  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/FileLockFactory.java: Added. used to get Objects corresponding to filenames
	to be able to synchronize on.
	* de/schlund/pfixcore/editor/EditorHelper.java (renderIncludeContent): Use it there.

2001-12-13  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/... Related xml/xslt/styles work for "includes".
	* example/core/editor/xml/...
	Fixed a bug with imporper use of <pfx:maincontent> : this must be used only on xml leave targets, never
	in includes !!!!
	* example/core/editor/xml/three_frames_wide.xml: Added
	* example/core/editor/xml/three_frames_targets.xml: Removed.

	* de/schlund/pfixcore/editor/EditorHelper.java (renderImagesFlatRecursive): added with different signature.
	(renderIncludes): added with different signature.
	(renderIncludeContent): Added.

	* de/schlund/pfixcore/editor/interfaces/Includes.iwrp:
	* de/schlund/pfixcore/editor/handlers/IncludesHandler.java:
	* de/schlund/pfixcore/editor/handlers/IncludesFinalizer.java:
	Added. Made "includes" page work readonly.

2001-12-12  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/txt/pages/main_home.xml: added "update all Pages of current Product"
	button.

	* de/schlund/pfixcore/editor/handlers/UpdateProductPagesHandler.java:
	* de/schlund/pfixcore/editor/interfaces/UpdateProductPages.iwrp:
	Added.
	* de/schlund/pfixcore/editor/handlers/HomeHandler.java:
	* de/schlund/pfixcore/editor/interfaces/Home.iwrp:
	Removed
	* example/core/editor/conf/config.prop.in:
	changed accordingly

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (errorHappened):
	(continueSubmit):
	(isPageAccessible):
	(areHandlerActive):
	(needsData):
	(readIWrappersConfigFromProperties): Handle the border case where
	no interfaces are defined. Just react like a "static" state would:
	errorHappened, continueSubmit return false, isPageAccessible,
	areHandlerActive, needsData return true and
	readIWrappersConfigFromProperties doesn't bail out when no
	interfaces are defined (it prints a warning, though)

2001-12-12-(night)  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/... Related xml/xslt/styles work for "editorusermanager".
	Other small stuff on prodselect, lockmanager, editoruserdata and sessionmanager.

	* example/core/editor/conf/config.prop.in:
	* example/core/editor/conf/navigation.xml:
	* example/core/editor/conf/depend.xml.in:
	Removed userforedit dummy page.

	* de/schlund/pfixcore/editor/StatusCodes.prop: USER_EXISTS added

	* de/schlund/pfixcore/editor/handlers/UserForEditHandler.java (needsData):
	return true when no UserForEdit is set

	* de/schlund/pfixcore/editor/handlers/EditUserDataHandler.java (handleSubmittedData):
	actually add the User (it may be a floating user).
	After commit, set the UserForEdit to null

	* de/schlund/pfixcore/editor/handlers/EditorUserDataFinalizer.java (renderDefault):
	render the id of the edited user

	* de/schlund/pfixcore/editor/EditorUserFactory.java (delEditorUser):
	now expects a EditorUser[] instead of EditorUser

	* de/schlund/pfixcore/editor/interfaces/DeleteUser.iwrp:
	* de/schlund/pfixcore/editor/interfaces/AddUser.iwrp:
	* de/schlund/pfixcore/editor/handlers/EditorUserManagerFinalizer.java:
	* de/schlund/pfixcore/editor/handlers/DeleteUserHandler.java:
	* de/schlund/pfixcore/editor/handlers/AddUserHandler.java:
	Added. make "editorusermanager" page work.

	* de/schlund/pfixcore/editor/handlers/LockManagerFinalizer.java (EditorLockManagerFinalizer):
	renamed from EditorLockManagerFinalizer

2001-12-11  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/img/info.gif: Added

	* de/schlund/pfixcore/workflow/Context.java (getName): new method to get context name.
	needed in editor :-(

	* example/core/editor/... Related xml/xslt/styles work for "sessionmanager"

	* de/schlund/pfixcore/editor/handlers/SessionManagerState.java (SessionManagerState):
	Added. made "sessionamanger" page.

	* example/core/editor/... Related xml/xslt/styles work; finished "lockmanager" page.

	* de/schlund/pfixcore/editor/interfaces/DeleteLock.iwrp:
	* de/schlund/pfixcore/editor/handlers/EditorLockManagerFinalizer.java:
	* de/schlund/pfixcore/editor/handlers/DeleteLockHandler.java:
	Added.

2001-12-10  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java
	(readIWrappersConfigFromProperties): Bail out when no interface is given.

	* example/core/editor/... Related xml/xslt/styles work; finished "editoruserdata" page.
	Made button "prohibit login" work. Other stuff.

	* de/schlund/pfixcore/editor/interfaces/UserForEdit.iwrp: Added.
	* de/schlund/pfixcore/editor/handlers/UserForEditHandler.java Added.
	only let admin users change other user data then their own.

	* de/schlund/pfixcore/editor/handlers/UserAuthHandler.java (handleSubmittedData):
	respect the value of EditorSessionStatus.getLoginAllowed()

	* de/schlund/pfixcore/editor/interfaces/LoginStatus.iwrp:
	* de/schlund/pfixcore/editor/handlers/EditUserDataHandler.java:
	* de/schlund/pfixcore/editor/interfaces/EditUserData.iwrp:
	* de/schlund/pfixcore/editor/interfaces/CancelEditUser.iwrp:
	* de/schlund/pfixcore/editor/handlers/LoginStatusHandler.java:
	* de/schlund/pfixcore/editor/handlers/EditorUserDataFinalizer.java:
	* de/schlund/pfixcore/editor/handlers/CancelEditUserHandler.java: Added
		- Now we can prohibit further logins (when admin).
		- We can change the userdata of the EditorUser stored/retrieved
		  via EditorSessionStatus.get/setUserForEdit(...)

	* de/schlund/pfixcore/editor/StatusCodes.prop: added div. scodes

	* de/schlund/pfixcore/editor/EditorUserFactory.java (writeFile): made public so we can call it
	whenever we change EditorUser data

	* de/schlund/pfixcore/workflow/PageFlowManager.java (pageFlowToPageRequest): Now takes
	another param HttpServletRequest which is searched for "__pageflow" to possibly set the current
	pageflow from this by name. uncapitalized method.
	* de/schlund/pfixcore/workflow/AuthContext.java (trySettingPageRequestAndFlow): Use it
	* de/schlund/pfixcore/workflow/Context.java (trySettingPageRequestAndFlow): Ditto

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (continueSubmit):
	More magic.  If we successfully completed a restricted submit, AND
	all of the restricted IWrappers are referenced in the property
	"restrictedcontinue" (space sep. list of prefixes), return false
	(that means, if the finalizer doesn't do even more magic on it's
	own, we will continue with the workflow).

	* de/schlund/pfixcore/editor/resources/EditorSessionStatus.java:
	* de/schlund/pfixcore/editor/resources/EditorSessionStatusImpl.java (login_allowed):
	Added static field to remember if new logins should be allowed. Added cooresponding getter/setter
	Added get/setUserForEdit EditorUser whose data is to be changed.

	* de/schlund/pfixcore/editor/handlers/LoginStatusHandler.java:
	* de/schlund/pfixcore/editor/interfaces/LoginStatus.iwrp: Added.
	Allow for prohibiting new login attempts

	* de/schlund/pfixcore/workflow/app/DefaultAuthIWrapperState.java (userInsertErrors): new method.
	show errors when login fails.

2001-12-10  Thomas Stieler  <stieler@schlund.de>

	* de/schlund/pfixcore/workflow/ContextResource.java (init):
							    (insertStatus):
							    (reset):
							    (needsData):
	throws Exception added.

	* de/schlund/pfixcore/editor/handlers/HomeFinalizer.java
	* de/schlund/pfixcore/editor/handlers/ImagesFinalizer.java
	* de/schlund/pfixcore/editor/handlers/PagesFinalizer.java
	* de/schlund/pfixcore/editor/handlers/ProductSelectFinalizer.java
	* de/schlund/pfixcore/editor/handlers/TargetsFinalizer.java
	* de/schlund/pfixcore/example/AdultInfoHandler.java
	* de/schlund/pfixcore/example/ContextAdultInfoImpl.java
	* de/schlund/pfixcore/example/OrderFinalizer.java
	* de/schlund/pfixcore/example/TShirtHandler.java
	* de/schlund/pfixcore/example/TrouserHandler.java
	* de/schlund/pfixcore/generator/IHandler.java
	* de/schlund/pfixcore/workflow/ContextResourceImpl.java
	* de/schlund/pfixcore/workflow/ContextResourceManager.java
	* de/schlund/pfixcore/workflow/ContextResourceObserver.java
	* de/schlund/pfixcore/workflow/ObservableContextResource.java
	* de/schlund/pfixcore/workflow/ObservableContextResourceImpl.java
	* de/schlund/pfixcore/workflow/app/IWrapperContainer.java
	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java
	* de/schlund/pfixcore/workflow/app/ResdocFinalizer.java
	* de/schlund/pfixcore/workflow/app/ResdocSimpleFinalizer.java
	Changed accordingly


2001-12-07  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/workflow/app/DefaultAuthIWrapperState.java: Added. This is a general version of
	de/schlund/pfixcore/editor/EditorUserAuthState.java which was removed again.
	* de/schlund/pfixcore/editor/EditorUserAuthState.java: removed.
	* example/core/editor/conf/config.prop.in: Reflect changes. use DefaultAuthIWrapperState now.

	* de/schlund/pfixcore/workflow/PageFlowManager.java (PageFlowToPageRequest): Bugfix. made logging msg. clearer.

	* de/schlund/pfixcore/workflow/Context.java (trySettingPageRequestAndFlow): made protected

	* de/schlund/pfixcore/workflow/AuthContext.java (trySettingPageRequestAndFlow): New overwritten here.
	Changed here from super class so that the autpage isn't called twice on submit any more.
	(documentFromCurrentStep): more debug

2001-12-07-(night)  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/xsl/metatags.xsl (displayaffectedpages):
	finally allow to jump to pages in other products...
	This works now that the authstate has been rewritten (see below)

	* de/schlund/pfixcore/workflow/PageRequest.java (PAGEPARAM): made public

	* example/core/xsl/forminput.xsl (pfx:forminput): change to use a supplied hidden param for __page
	This is basically only needed for authpages. They can use it to set a final destination _after_
	a successful authentication.

	* de/schlund/pfixcore/editor/handlers/ProductSelectMandatoryHandler.java: Removed
	* de/schlund/pfixcore/editor/interfaces/ProductSelectMandatory.iwrp: Removed
	* de/schlund/pfixcore/workflow/app/AuthIWrapperState.java: Removed
	* de/schlund/pfixcore/editor/EditorUserAuthState.java: Added
	completely changed the way authpages work. This is finally working now "The Right Way(TM)"

	* de/schlund/pfixcore/editor/interfaces/ProductSelect.iwrp:
	* de/schlund/pfixcore/editor/handlers/ProductSelectHandler.java (needsData):
	"Name" param is now mandatory here, copied needsData method from removed ProductSelectMandatoryHandler.

	* de/schlund/pfixcore/workflow/StateImpl.java (isSubmitTriggerAny): private helper method added
	(isSubmitTrigger): only return true when getting the parameter
	"__sendingdata" (behaviour stayed the same, but uses helper method now)
	(isSubmitTriggerAny): New method, only true when param "__sendingauthdata" is supplied
	I'm sure this change will break all existing authpages :-( Sorry.

	* example/core/editor/conf/config.prop.in: Reflect changes. use EditorUserAuthState now.
	* example/core/editor/txt/pages/main_editoruserauth.xml: Reflect changes. sets @type="auth"
	in <forminput> now.

2001-12-06-(night)  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/txt/pages/main_prodselect.xml: just some reorg, UI for missing pages.

	* example/core/editor/xsl/custommaster.xsl: pfx:* get's extra fontification

2001-12-05  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/EditorHelper.java (getAuxdepsForTarget): bug fix. recurse auxdeps
	in any case when recurse == true

2001-12-05-(night)  Jens Lautenbacher  <jtl@schlund.de>

	* example/common/conf/pfixlog.xml.in: made priority for profiling ERROR (== disable profiling)
	I am very sure that I will kick out the whole profiling stuff today or tomorrow...

	* example/jserv/apache.conf.in: Add <passthrough> for the "/sample1/img" directory.

	* example/core/editor/... Related xml/xslt/styles work; finished "Images" page.

	* de/schlund/pfixcore/editor/handlers/TargetsFinalizer.java:
	* de/schlund/pfixcore/editor/handlers/ProductSelectFinalizer.java:
	* de/schlund/pfixcore/editor/handlers/PagesFinalizer.java
	all: (renderDefault): release a lock that's maybe held.

	* de/schlund/pfixcore/editor/handlers/ImagesUploadHandler.java (isActive):
	own impl. of this method: be only active if current image is not
	null and a lock has been obtained
	(handleSubmittedData): finally handle the submitted data, bug fixes.

	* de/schlund/pfixcore/editor/handlers/ImagesState.java (getDocument): added debug

	* de/schlund/pfixcore/editor/handlers/ImagesFinalizer.java (renderDefault):
	try to obtain a lock, render locking status into currentimage, render locking user if
	lock could not be obtained.

	* example/sample1/img/test.gif:
	* de/schlund/pfixcore/editor/handlers/HomeFinalizer.java:
	Added.

	* de/schlund/pfixcore/editor/EditorLockFactory.java:
	Added. EditorSessionStatus-bound locking. Locks all AuxDependencies, no longer makes a
	difference between images or includes.

	* de/schlund/pfixcore/editor/resources/EditorSessionStatus.java
	* de/schlund/pfixcore/editor/resources/EditorSessionStatusImpl.java
	(getLock):
	(isOwnLock):
	(releaseLock):  proxy that stuff to the EditorLockFactory
	(getEditorSessionId): used to identify a EditorSessionStatus instance.
	(== "ES_" + context.getVisitId())

2001-12-04  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/StatusCodes.prop: Added more statuscodes for image upload

	* example/core/editor/... Related xml/xslt/styles work for "Images" page: trying to handle upload.

	* de/schlund/pfixcore/editor/interfaces/ImagesUpload.iwrp:

	* de/schlund/pfixcore/editor/handlers/ImagesUploadHandler.java: Added

	* de/schlund/pfixcore/editor/handlers/ImagesState.java: Added. new
	state that extends DefaultIWrapperImpl. Needed to make fileupload work.

	* de/schlund/pfixcore/editor/resources/MultipartStorerImpl.java:
	* de/schlund/pfixcore/editor/resources/MultipartStorer.java:
	Added to store the filupload stuff in ImagesState so a handler can get it.
	* de/schlund/pfixcore/editor/resources/EditorRes.java (EMULTI): define it there.

2001-12-04-(night)  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/... Related xml/xslt/styles work for "Images" page

	* de/schlund/pfixcore/editor/StatusCodes.prop:
	Added SCode for IMAGE_UNDEF

	* de/schlund/pfixcore/editor/EditorHelper.java (renderAffectedPages):
	small changes for helping with "Images" page

	* example/core/editor/txt/pages/main_images.xml: renamed from main_bilder.xml
	* example/core/editor/txt/pages/main_commons.xml: renamed from "main_common.xml"

	* de/schlund/pfixcore/editor/interfaces/Images.iwrp:
	* de/schlund/pfixcore/editor/handlers/ImagesHandler.java:
	* de/schlund/pfixcore/editor/handlers/ImagesFinalizer.java:
	Added. Made "Images" work in VIEW mode only!

	* de/schlund/pfixcore/editor/resources/EditorSessionStatusImpl.java:
	* de/schlund/pfixcore/editor/resources/EditorSessionStatus.java (EditorSessionStatus):
	get/setCurrentBild -> get/setCurrentImage

2001-12-03  Thomas Stieler  <stieler@schlund.de>

	* de/schlund/pfixcore/workflow/ContextResourceManager.java:
	The work is now done in init(Context context) method.
	Use a number in the name of each property to define the order
	of ContextResources-initialization

	* de/schlund/pfixcore/workflow/Context.java:
	Use StringBuffer instead of String in toString()


2001-12-03  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/... More styles/xml/xslt work, finished "Targets"

	* example/common/conf/factory.prop.in: new factory.initialize: EditorPagesUpdater

	* de/schlund/pfixcore/editor/handlers/TargetsFinalizer.java (renderDefault):
	added rendering of xml content and affected pages

	* de/schlund/pfixcore/editor/handlers/TargetsHandler.java (handleSubmittedData):
	check if target is uptodate, rebuild it if otherwise

	* de/schlund/pfixcore/editor/handlers/PagesHandler.java (handleSubmittedData):
	check if target for page is uptodate, rebuild it if otherwise

	* de/schlund/pfixcore/editor/EditorHelper.java (renderAffectedPages):
	added method, use EditorPageUpdater
	(renderTargetContent): new method, render the xml repr. of a target

	* de/schlund/pfixcore/editor/EditorPageUpdater.java (EditorPageUpdater):
	Added. Thread to update pages in background

2001-12-02  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/... More styles work, finished "Pages" and most of "Targets"

	* de/schlund/pfixcore/editor/StatusCodes.prop: added code for unknown target

	* de/schlund/pfixcore/editor/resources/EditorSessionStatusImpl.java (reset):
	don't set the user to "null" on reset

	* de/schlund/pfixcore/editor/handlers/PagesFinalizer.java (renderDefault):
	renamed some calls to EditorHelper methods

	* de/schlund/pfixcore/editor/handlers/LogoutHandler.java (handleSubmittedData):
	do a completet reset of the EditorSessionStatus

	* de/schlund/pfixcore/editor/EditorHelper.java:
	More helper funcs (e.g. for "targets" page)

	* example/core/editor/xml/three_frames_targets.xml:
	* example/core/editor/img/alpha.gif:
	* de/schlund/pfixcore/editor/interfaces/Targets.iwrp:
	* de/schlund/pfixcore/editor/handlers/TargetsHandler.java:
	* de/schlund/pfixcore/editor/handlers/TargetsFinalizer.java:
	Added.

2001-11-30  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/handlers/HomeHandler.java (HomeHandler):
	now extends EditorStdHandler

	* de/schlund/pfixcore/editor/interfaces/Pages.iwrp:
	* de/schlund/pfixcore/editor/handlers/PagesHandler.java:
	* de/schlund/pfixcore/editor/handlers/PagesFinalizer.java:
	* de/schlund/pfixcore/editor/handlers/EditorStdHandler.java:
	* de/schlund/pfixcore/editor/EditorHelper.java:
	Added.

	* example/core/editor/... first part of "Pages" page.

2001-11-30  Thomas Stieler  <stieler@schlund.de>

	* de/schlund/pfixcore/workflow/ContextResource.java:
	* de/schlund/pfixcore/workflow/ContextResourceImpl.java:

	changed init(Properties props, ContextResourceManager crm)
	into init(Context contex)
	Deleted getter for Properties and ContextResourceManager.


2001-11-30  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/xml/empty.xml:
	Added. Used for dummy pages like "Logout" which are only used to
	trigger handlers but which are never visible.

	* de/schlund/pfixcore/editor/interfaces/Logout.iwrp:
	* de/schlund/pfixcore/editor/interfaces/Home.iwrp:
	* de/schlund/pfixcore/editor/handlers/LogoutHandler.java:
	* de/schlund/pfixcore/editor/handlers/HomeHandler.java:
	Added.  Canged the way the logout mechanism works by adding dummy page "logout"

	* example/core/editor/...: style stuff, xml/xsl bug fixes, home page works, top navi works


2001-11-30  Thomas Stieler  <stieler@schlund.de>

	* de/schlund/pfixcore/workflow/ContextResourceManager.java:
	* all classes implementing ContextRescoure

	Splitting all ContextResources in an interface and an implementation.
	The ContextResourceManager now gets a classname for each
	object and a list of interfaces, which should be used from
	this object.

2001-11-29-(evening) Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/example/SampleRes.java:
	* de/schlund/pfixcore/editor/resources/EditorRes.java :
	Added abstract classes to hold interface names for ContextResources.

	* de/schlund/pfixcore/editor/handlers/ProductSelectFinalizer.java (renderDefault):
	* de/schlund/pfixcore/editor/handlers/ProductSelectHandler.java (handleSubmittedData):
	* de/schlund/pfixcore/editor/handlers/ProductSelectMandatoryHandler.java (needsData):
	* de/schlund/pfixcore/editor/handlers/UserAuthHandler.java (handleSubmittedData):
	(needsData):
	* de/schlund/pfixcore/example/AdultInfoHandler.java (handleSubmittedData):
	(retrieveCurrentStatus): (needsData):
	* de/schlund/pfixcore/example/TShirtHandler.java (handleSubmittedData):
	(retrieveCurrentStatus): (needsData):
	* de/schlund/pfixcore/example/TrouserHandler.java (handleSubmittedData):
	(retrieveCurrentStatus): (needsData): (prerequisitesMet): (isActive):
	* de/schlund/pfixcore/example/CounterHandler.java (handleSubmittedData):
	* de/schlund/pfixcore/example/OrderFinalizer.java (renderDefault):
	Use the stuff above.

	* overall: SCN strikes again. :-)

	* de/schlund/pfixcore/workflow/ContextResource.java (ContextResource):
	CAUTION: made interface smaller. No more setProperties(...), setContextResourceManager(...).
	Just init(props, crm) will do.

	* de/schlund/pfixcore/workflow/ContextResourceImpl.java
	removed no longer needed methods.
	(getProperties): made protected.
	(getContextResourceManager): ditto.

	* de/schlund/pfixcore/workflow/ObservableContextResource.java (ObservableContextResourceImpl):
	Split out into own interface

	* de/schlund/pfixcore/workflow/ObservableContextResourceImpl.java
	(ObservableContextResourceImpl): now extends ContextResourceImpl and implementes ObservableContextResource

	* de/schlund/pfixcore/workflow/ContextResourceObserver.java:
	CAUTION: renamed from ObserverContextResource because an
	implementing class doesn't need to be a ContextResource!

2001-11-29-(day)  Jens Lautenbacher  <jtl@schlund.de>

	* examples/core/editor...: Div. xml/xslt and config work for editor.

	* de/schlund/pfixcore/editor/StatusCodes.prop: Remove EMPTY_PRODUCT Scode, as it?s handled in the
	IWrapper again

	* de/schlund/pfixcore/editor/handlers/ProductSelectMandatoryHandler.java:
	Dont't handle logout anymore

	* de/schlund/pfixcore/editor/interfaces/ProductSelectMandatory.iwrp: Removed the
	Logout param

	* example/core/xsl/navigation.xsl (pfx:navibutton_impl): Added
	<pfx:argument> subnode to all buttons to add arguments on the fly.
	(pfx:button): added @activeclass, @normalclass, @invisibleclass to
	set a "class" attribute on the <span> surrounding the content.

2001-11-28-(night)  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/xsl/forminput.xsl: Changed <xinp type="submit"> to only use it's
	contents as the @value when no @value is given before.

	* examples/...: Div. xml/xslt and config work for editor.

	* de/schlund/pfixcore/editor/interfaces/ProductSelectMandatory.iwrp:
	extend from ProductSelect.iwrp, add optional param Logout.

	* de/schlund/pfixcore/editor/handlers/ProductSelectHandler.java (needsData): always
	return false. This is used on the authpage, so we don't _need_ the data _here_. The
	class ProductSelectMandatoryHandler.java which inherits from this, takes care of getting the product
	for sure on the prodselect page.

	* de/schlund/pfixcore/editor/handlers/ProductSelectFinalizer.java: Added.
	* de/schlund/pfixcore/editor/handlers/ProductSelectMandatoryHandler.java: Added.
	handle "Logout" if given, else check if "Name" is really there, if yes call super.handleSubmit.
	* de/schlund/pfixcore/editor/EditorUser.java (insertStatus): added method
	* de/schlund/pfixcore/editor/EditorProduct.java (insertStatus): added method

	* example/common/conf/pfixlog.xml.in: make StatusCodeFactory less noisy

	* de/schlund/pfixcore/workflow/PageRequestStatus.java (PageRequestStatus):
	Add Status AUTH_WORKFLOW

	* de/schlund/pfixcore/workflow/AuthContext.java (flowIsRunning):
	Added method, we check for status AUTH_WORKFLOW here too
	(documentFromCurrentStep): Changed to set the status of the authpage according
	to the the status of the "real" page: if this has status WORKFLOW, set the authpage
	to status AUTH_WORKFLOW.
	(init): don't set the status here.

	* de/schlund/pfixcore/workflow/app/AuthIWrapperState.java (AuthIWrapperState):
	Added, with twisted logic good for what once was an "authstate".

2001-11-28  Tobias Kraft <tobi@schlund.de>

	* de/schlund/pfixcore/workflow/ContextResourceManager.java (getResource):
	Added a method call to the ContextResource's init() - method to give
	the current ContextResource the posibility to register at the parent
	ContextResource's observer. Read the interface javadoc  for more
	details.

2001-11-27  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/resources/EditorSessionStatus.java (EditorSessionStatus):
	renamed from EditorSessionState to avoid the "State" thing

	* docs/workflow_app.dia: update to current situation
	* docs/generator.dia: update to current situation

	* de/schlund/pfixcore/workflow/app/ResdocSimpleFinalizer.java (renderDefault):
	Added method. Does nothing in this implementation
	(onLoadError):
	(onWorkError):
	(onRetrieveStatus): make them all call renderDefault.

	* de/schlund/pfixcore/generator/IHandler.java
	CAUTION: **** Interface changes! ****
	(handleSubmittedData): removed the ResultDocument from the signature
	(wrapper): ditto.

	* de/schlund/pfixcore/example/TrouserHandler.java:
	* de/schlund/pfixcore/example/CounterHandler.java:
	* de/schlund/pfixcore/example/TShirtHandler.java:
	* de/schlund/pfixcore/example/AdultInfoHandler.java:
	* de/schlund/pfixcore/editor/handlers/ProductSelectHandler.java:
	* de/schlund/pfixcore/editor/handlers/UserAuthHandler.java: Changed accordingly

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java
	(handleSubmittedData):
	(retrieveCurrentStatus): changed to use new IHandler interface

2001-11-27  Thomas Stieler  <stieler@schlund.de>

	* de/schlund/pfixcore/workflow/ContextResourceManager.java:
	* de/schlund/pfixcore/workflow/ContextResourceImpl.java:
	* de/schlund/pfixcore/workflow/ContextResource.java:

	Added method "void setContextResourceManager(ContextResourceManager crm)"
	Calling this method in constructor of class ContextResourceManager.

	* de/schlund/pfixcore/workflow/ObserverContextResource.java:
	* de/schlund/pfixcore/workflow/ObservableContextResource.java:

	Added the class ObservableContextResource.java and the interface
	ObserverContextResource.java.

2001-11-27-(night)  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/build/create_apacheconf_jserv.xsl: Added <passthrough> element to
	construct "Alias <path> <realpath>" constructs in apache.conf
	* example/jserv/apache.conf.in: Use it.

	* example/core/editor/xml/two_frames_deaktiv.xml:
	* example/core/editor/xml/two_frames.xml:
	* example/core/editor/xml/three_frames.xml:
	bug fixes.

	* de/schlund/pfixcore/editor/StatusCodes.prop: added SCode fpr product selection

	* de/schlund/pfixcore/editor/handlers/ProductSelectHandler.java (handleSubmittedData): Added.

	* de/schlund/pfixcore/editor/EditorUserFactory.java (readFile): add logging

	* example/common/conf/userdata.xml: changed pwd to "pass"

	* de/schlund/pfixcore/editor/handlers/UserAuthHandler.java
	(handleSubmittedData): bug fixes, make login really work

	* de/schlund/pfixcore/editor/interfaces/ProductSelectMandatory.iwrp:
	Added as mandatory version of product selection for page prodselect

	* example/core/editor/conf/config.prop.in: bug fixes.

	* example/core/xsl/forminput.xsl: Added <pfx:xinp type="submit">,
	uses content as value for <input type="submit">

	* example/core/editor/txt/styles.xml: defined CSS

	* example/core/editor/txt/pages/main_editoruserauth.xml: added CSS

	* example/Makefile (common/dyntxt/statusmessages.xml): Bug fixes

2001-11-26  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/example/TShirtHandler.java (retrieveCurrentStatus):
	* de/schlund/pfixcore/example/TrouserHandler.java (retrieveCurrentStatus):
	* de/schlund/pfixcore/example/AdultInfoHandler.java (retrieveCurrentStatus):
	* de/schlund/pfixcore/editor/handlers/UserAuthHandler.java (retrieveCurrentStatus):
	* de/schlund/pfixcore/example/CounterHandler.java (retrieveCurrentStatus):
	* de/schlund/pfixcore/generator/IHandler.java (retrieveCurrentStatus): renamed from
	insertCurrentStatus(...)

	* de/schlund/pfixcore/workflow/app/ResdocSimpleFinalizer.java (onRetrieveStatus):
	* de/schlund/pfixcore/workflow/app/ResdocFinalizer.java (onRetrieveStatus):
	* de/schlund/pfixcore/example/OrderFinalizer.java (onInsertStatus): renamed
	from OnInsertStatus(...)

	* de/schlund/pfixcore/workflow/app/IWrapperContainer.java (retrieveCurrentStatus):
	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (retrieveCurrentStatus):
	renamed from insertCurrentStatus()

	* de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java (getDocument):
	change container.insertCurrentStatus -> container.retrieveCurrentStatus
	rfinal.OnInsertStatus -> rfinal.OnRetrieveStatus

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (insertCurrentStatus):
	BUGFIX: changed to only work on selectedwrappers, not currentgroup.

2001-11-25  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/StatusCodes.prop: added
	* example/common/conf/factory.prop.in: added above file

	* example/core/editor/conf/config.prop.in: use AuthContext
	* de/schlund/pfixcore/editor/interfaces/UserAuth.iwrp: added
	* de/schlund/pfixcore/editor/handlers/UserAuthHandler.java: added
	* example/common/conf/pustefix.prop.in: added EditorSessionState
	(== "editorsession") context resource.
	* example/core/editor/conf/config.prop.in: ditto

2001-11-25-(night)  Jens Lautenbacher  <jtl@schlund.de>

	* example/core/editor/txt/pages/main_bilder.xml:
	* example/core/editor/txt/pages/main_common.xml:
	* example/core/editor/txt/pages/main_editoruserauth.xml:
	* example/core/editor/txt/pages/main_editoruserdata.xml:
	* example/core/editor/txt/pages/main_editorusermanager.xml:
	* example/core/editor/txt/pages/main_home.xml:
	* example/core/editor/txt/pages/main_includes.xml:
	* example/core/editor/txt/pages/main_lockmanager.xml:
	* example/core/editor/txt/pages/main_prodselect.xml:
	* example/core/editor/txt/pages/main_sessionmanager.xml:
	* example/core/editor/txt/pages/main_targets.xml:
	* example/core/editor/xsl/metatags.xsl:
	* example/core/editor/xsl/custommetatags.xsl:
	* example/core/editor/xsl/custommaster.xsl:
	* example/core/editor/txt/styles.xml:
	* example/core/editor/txt/navigation.xml:
	* example/core/editor/xml/two_frames_deaktiv.xml:
	* example/core/editor/xml/two_frames.xml:
	* example/core/editor/xml/three_frames.xml:
	Added.

	* example/core/build/create_projects.xsl: Bug fixes for building *.prj

	* example/common/conf/factory.prop.in:
	Added EditorUserFactory
	Added EditorProductFactory

	* example/common/conf/products.prj.in:
	Added with product sample1

	* example/common/conf/userdata.xml:
	Added with sample user admin, pwd admin

	* example/core/editor/conf/navigation.xml:
	* example/core/editor/conf/depend.xml.in:
	* example/core/editor/conf/config.prop.in:
	Added.

	* lib/pfixxml-2.0.2-jserv.jar: updated from 2.0.1-jserv

	* de/schlund/pfixcore/editor/*.java: removed old editor files again. Doesn't work that way.

	* de/schlund/pfixcore/editor/EditorUser.java:
	* de/schlund/pfixcore/editor/EditorUserFactory.java:
	* de/schlund/pfixcore/editor/EditorProductFactory.java:
	* de/schlund/pfixcore/editor/EditorProduct.java:
	* de/schlund/pfixcore/editor/PfixcoreServlet.java:
	Added first classes of new editor.

2001-11-22  Jens Lautenbacher  <jtl@schlund.de>
	* docs/workflow_app.dia: update to current situation
	* docs/generator.dia: update to current situation
	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (IWrapperSimpleContainer):
	changed to initialize a RequestData instance. Use it.

	* de/schlund/pfixcore/generator/IWrapperImpl.java (load):
	* de/schlund/pfixcore/generator/IWrapper.java (load):
	* de/schlund/pfixcore/generator/IWrapperIndexedParam.java (initValueFromRequest):
	* de/schlund/pfixcore/generator/IWrapperParamInfo.java (initValueFromRequest):
	use RequestData instead of HttpServletRequest everywhere.

	* de/schlund/pfixcore/generator/RequestData.java (RequestData): Added
	* de/schlund/pfixcore/workflow/app/RequestDataImpl.java (RequestDataImpl): Added.
	Moved the parsing of __DATA/__CMD stuff encoded in parameter names
	into an own class.  This class get's parameters from
	the normal key value request parameters _and_ from magic param names.

	* example/common/conf/pustefix.prop.in: statusmessages -> statusmessages.xml

	* example/Makefile (common/dyntxt/statusmessages.xml): update the rule to comply with new name.

2001-11-21  Jens Lautenbacher  <jtl@schlund.de>

	* example/common/conf/pustefix.prop.in: register "counter" => ContextCounter ContextResource

	* example/sample1/conf/config.prop.in: added "counter" ContextResource, added OrderFinalizer to order page

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (continueSubmit):
	return true whenever the selectedwrappers != currentgroup ( that is
	just whenever you restrict the submit to a subset of
	handlers. You never want to advance the current display in that
	case.)

	* example/sample1/txt/pages/main_order.xml: added Counter as an example for a restricted handler submit.

	* de/schlund/pfixcore/example/CounterHandler.java (insertCurrentStatus): new file

	* de/schlund/pfixcore/example/ContextCounter.java (toString): new file

	* de/schlund/pfixcore/example/Counter.iwrp: new file

	* de/schlund/pfixcore/example/OrderFinalizer.java (OrderFinalizer): new file

2001-11-21  Thomas Stieler  <stieler@earth2.schlund.de>

	* example/core/xsl/utils.xsl (pfx:maincontent): added postfix, default value .xml

2001-11-21  Jens Lautenbacher  <jtl@schlund.de>

	* docs/IWRapper_XML_Description_Language.txt: added more documentation

2001-11-19  Jens Lautenbacher  <jtl@schlund.de>

	* docs/Magic_Parameter_Names.txt: added documentation

	* docs/workflow_app.dia: update to current situation

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (initIWrappers):
	Hopefully changed the form of the __CMD stuff for the last time:
	now it looks like this:

	<ignored stuff>__CMD[<pagename>]:<name>:<param>:<ignored stuff>
	this is to bind cmds to a page so they won't apply after a switch to another page during workflow.

	Now we have 4 commands:
	GROUP_SWITCH_NEXT = "__CMD[" + name + "]:SELGRP:NEXT:";
	GROUP_SWITCH_PREV = "__CMD[" + name + "]:SELGRP:PREV:";
	GROUP_SWITCH_IDX  = "__CMD[" + name + "]:SELGRP:";
	SELECT_WRAPPER    = "__CMD[" + name + "]:SELWRP:";

	and a hidden parameter that's set to the current group that was displayed:
	GROUP_CURR        = "__currentindex[" + name + "]";

	Here "name" stands for the page name. "SELWRP" is renamed from "SEL" mentioned below.
	The first two cmds are complete, the third needs an additional integer to select the group index,
	e.g. "__CMD[" + name + "]:SELGRP:1:" (Note the trailing ":" again);

	* de/schlund/pfixcore/workflow/app/IWrapperContainer.java: remove loadIWrappers();

	* de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java (getDocument):
	remove the call to container.loadIWrappers()

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java
	(getIWrappers): removed
	(getCurrentIWrappers): removed
	(IWrapperSimpleContainer): added lazy calling of loadIWrappers()
	and splitIWrappers() from inside the relevant methods.

	* de/schlund/pfixcore/workflow/app/IWrapperContainer.java (getIWrappers): removed
	(splitIWrappers): ditto
	(getCurrentIWrappers): ditto

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java (checkForRestrictedCalling):
	new private method called from splitIWrappers(). This handles restricting the submit to specified
	wrappers. This is done via special named parameters like this:
	<anything ignored>__CMD:SEL:<prefix for wrapper>:<anything ignored>
	NOTE: the trailing ":" after the data is mandatory, even if there's nothing following behind.
	NOTE2: this is transparent: you can add more than one CMD:SEL section to us more than one interface.
	(splitIWrappers): made private. it will always be called from initIWrappers() now. May be changed back
	if it turns ouzt to be too much of a performance hit.

	* de/schlund/pfixcore/workflow/app/DefaultIWrapperState.java
	(isAccessible): changed to use IWrapperContainer instead of IHandlerAction
	(getDocument): ditto.

	* de/schlund/pfixcore/workflow/app/IWrapperSimpleContainer.java
	(isPageAccessible):
	(areHandlerActive):
	(needsData):
	(handleSubmittedData):
	(insertCurrentStatus): all added from IHandlerAction

	* de/schlund/pfixcore/workflow/app/IHandlerAction.java
	* de/schlund/pfixcore/workflow/app/IHandlerSimpleAction.java
	* de/schlund/pfixcore/workflow/app/IHandlerActionFactory.java:
	removed. Functionality is now in IWrapperContainer


2001-11-18  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/generator/IWrapperParamInfo.java (initValueFromRequest):
	Added the ability to scan for param values encoded in parameter names (this is of use
	for submit buttons also submitting a typed parameter. The magic format for a parameter name
	is like this: <anything ignored>__DATA:<paramname>:<paramvalue>:<anything ignored>
	NOTE: the trailing ":" after the data is mandatory, even if there's nothing following behind.
	NOTE2: this is transparent: you can add more than one DATA section, even with the same name.

2001-11-16  Jens Lautenbacher  <jtl@schlund.de>

	* de/schlund/pfixcore/editor/*.java
	imported Editor files. This does not compile at all currently.
