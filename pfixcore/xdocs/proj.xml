<?xml version="1.0" encoding="utf-8"?>
<document>

  <properties>
    <title>Project definition</title>
  </properties>

  <body>

  <section name="Project definition">

  <p>For each project in your Pustefix environment you need to create a definition file that contains all the
    information about your project that is needed to automatically generate other configuration files for various sbsystems.</p>
  <ul>
    <li>The <b>apache</b> config file, containing the definition for each of the projects of your environment:<br/>
      <code>servletconf/tomcat/apache.conf</code></li>
    <li>The config files for <b>mod_jk</b>:<br/>
      <code>servletconf/tomcat/jk.conf</code> and <code>servletconf/tomcat/workers.prop</code>.
    </li>
    <li>The config file for the <b>tomcat</b> servlet container:<br/>
      <code>servletconf/tomcat/conf/server.xml</code></li>
    <li>The config files for every <b>webapp</b> (each project is mapped to a webapp):<br/>
      <code>servletconf/tomcat/webapps/[project name]/WEB-INF/web.xml</code>
    </li>
    <li>The config file that tells the <a href="editor.html">Pustefix editor</a> about all the projects that
      can be edited in your environment:<br/>
      <code>common/conf/products.prj</code></li>
  </ul>

  <p>This information is contained in a site wide file
    <code>servletconf/projects.xml.in</code> which contains information
    every environment needs. Each project also needs to supply a file to tell the
    system it's own configuration. These files are at <code>[project
      name]/conf/project.xml.in</code>. All those files, together with the
    site wide file are used as the source for creating the above
    mentioned config files.
  </p>

  <subsection name="The site wide configuration servletconf/projects.xml.in">

  <p>The site wide projects.xml.in file contains two "projects" that are
    needed for Pustefix itself to work properly.  The first of these
    is the <a href="editor.html">editor</a> project. The other project
    is used to start a servlet automatically when the system
    starts. This servlet itself is not able to act on any userinput,
    it's only purpose is to start a bunch of factories that implement
    functionality shared by other, "real" projects.</p>
  
  <p>If you need other servlets for administrative purposes (e.g. to
    gather some sort of statisitics about the system as a whole) you can
    add these servlets to this project.</p>

  </subsection>
  <subsection name="The project specific configuration [project name]/conf/project.xml.in">

  <p>

    <xmlcode>
      <project name="test" xmlns:cus="http://www.schlund.de/pustefix/customize">
        <active>true</active>
        <comment>Test Application</comment>
        <xmlnote>
            The content of this tag is used in the <a href="editor.html">editor</a> to list all defined projects.
        </xmlnote>
        <depend><cus:docroot/>MyProject/conf/depend.xml</depend>
        <xmlnote>
	    The location of the depend file must be specified for the <a href="editor.html">editor</a>.<br/>
	  <div class="important">
	    <b>This section is for generating apache.conf in the
	      servletconf/tomcat directory.</b>
	    </div>
		</xmlnote>

		  <virtualhost>SomeVirtualHostName</virtualhost>
		  <servername>SomeServerName</servername>
		  <serveralias>SomeServerAlias</serveralias>
		  <defpath>/xml/SomeDefinedServlet</defpath>
		  <xmlnote>
		      The defpath tag names a default servlet if the user didn't specify one 
		      explicitly in the url (the "xml" part is the mount point of the ServletContext
                      in which all servlets are running)
		  </xmlnote>
		  <documentroot>/Path/To/DocumentRoot</documentroot>
		  <xmlnote>
		      The apache DocumentRoot for static content, e.g. html pages or pdf
		      files. Required because otherwise apache uses its default DocumentRoot which
		      may not be desirable from a security point of view. If you don't have any
		      static content to server. you can use an empty directoy
		  </xmlnote>
		  <passthrough>MyProject/img</passthrough>
		  <xmlnote>
		      Specify directories which shall not be relative to the DocumentRoot
		      here. This is used for directories containing images, as they are served by
		      apache directly.
		  </xmlnote>
		  <literalapache>
		    <xmlnote>Enter arbitrary additional stuff for the apache.conf file here. </xmlnote>
		  </literalapache>
		  <ports>
		    <port number="80"/>
		    <port number="443" ssl="true">
		      <sslkey>/etc/httpd/conf/ssl.key/server.key</sslkey>
		      <sslcrt>/etc/httpd/conf/ssl.crt/server.crt</sslcrt>
		    </port>
		    <xmlnote>If you don't want to use SSL, you can remove the SSL section. </xmlnote>
		  </ports>
        <xmlnote>
        Specify at least one servlet here. Create a config file for every servlet you define, as described 
	    <a href="prop.html#single">here</a>. 
        </xmlnote>

        <servlet name="myservlet" useineditor="true">
	  <xmlnote>
	    <table>
	      <tr>
	        <th>Attribute</th>
	        <th>Notes</th>
	      </tr>
	      <tr>
	        <td>useineditor</td>
	        <td>set to true for every servlet that handles pages belonging directly to the project
	          (That means for example not the servlet that starts up the <a href="editor.html">editor</a>, as the pages delivered
	          by this servlet belong to the <a href="editor.html">editor</a> project)
	        </td>
	      </tr>
	    </table>
	  </xmlnote>

	  <active>true</active>
	  <class>de.schlund.pfixxml.ContextXMLServer</class>
	  <xmlnote>
	      All project-specific servlets that produce pages from a XSLT transformation are usually
	      instances of the <code>ContextXMLServer</code> class.
	  </xmlnote>
	  
	  <propfile><cus:docroot/>MyProject/conf/myservlet.prop</propfile>
	  <xmlnote>
	      By convention, the properties file for a servlet resides
	      in <code>MyProject/conf/</code> and is named
	      <code>myservlet.prop</code>, where "myservlet" stands for the actual name of the
	      servlet. Note that the actual file you have to create is <code>myservlet.prop.in</code>,
	      the build system takes care to produce the final property file from your configuration.
	  </xmlnote>
        </servlet>
        
        <xmlnote>
	    The edit and deref servlets must always be present. The <code>edit</code> servlet is the
	    Pustefix CMS, and the <code>deref</code> servlet is used to create links to external
	    websites without transmitting Referer-headers which may contain the private session id.
            You don't need to create config files for these.
        </xmlnote>
        
        <servlet name="edit">
	  <active>true</active>
	  <class>de.schlund.pfixxml.ContextXMLServer</class>
	  <propfile><cus:docroot/>core/editor/conf/config.prop</propfile>
        </servlet>
        <servlet name="deref">
	  <active>true</active>
	  <class>de.schlund.pfixxml.DerefServer</class>
        </servlet>
      </project>
    </xmlcode>
  </p>
  </subsection>
  </section>
</body>
</document>
