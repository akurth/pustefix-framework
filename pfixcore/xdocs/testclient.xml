<?xml version="1.0" encoding="utf-8"?>
<document>

  <properties>
    <title>The Test client</title>
  </properties>

  <body>

  <section name="The Test client">

  <subsection name="About">

  <p>With the typical fast changing web application, most often only
  the initial release of the software is tested thoroughly (if at
  all), but after a while, nobody can really tell if the current
  version has the same functionality and quality as the tested
  release.</p>

  <p>Because of this a testing framework has been developed for
    Pustefix.</p>
  
  <p>When your application runs well it is time to record example
    <i>click trails</i>. The user input and the
    resulting output of the business logic are written to a
    file as long as the recording takes place.

    Recorded click trails can be used to test if the application is
    still working as expected by playing back the recorded data.  The
    recorded user input is sent (as a HTTP request) to your application
    and the actual result (the output of the business logic) will be
    compared to the recorded result. If these outputs differ you know
    that something changed in the business logic of your application.
    The tools for playback shipped with Pustefix will show you
    these differences in a proper way.</p>
  
  </subsection>
  <subsection name="Configuration">
  <p>The basic configuration is done in the <code>depend.xml.in</code> file.</p>
  <xmlcode>
    <make cachedir="..." record_dir="...">
    
      <xmlnote>
        <table>
          <tr>
            <th>Attribute</th>
            <th>Notes</th>
          </tr>
          <tr>
            <td>cachedir</td>
            <td>
              <p>See the documentation the <a href="depend.html">depend.xml.in</a> file.</p>
            </td>
          </tr>
          <tr>
            <td>record_dir</td>
            <td>This attribute designates if recording can be used for your project. If
              the attribute does not exist, you will not be able to record click trails for this
              project. If it exists, its value will be interpreted as a directory relative 
              to <b>docroot</b>. When recording is turned on, all recorded data will
              be written to this directory.
            </td>
          </tr>
        </table>
      </xmlnote>
    </make>
  </xmlcode>
  </subsection>
  <subsection name="Recording data">
  <p>Starting to record click trails is quite simple. Just append <code>__recordmode=TESTCASE_NAME</code>
    as a parameter to the URL. <code>TESTCASE_NAME</code> is an
    arbitrary name for your recording session. If
    <code>TESTCASE_NAME</code> already exist,
    <code>TESTCASE_NAME_N</code> will be used instead where
    <code>N</code> is the next available positive Integer that doesn't
    result in a name used already earlier.</p>
  
  <p>All recorded data will be written to the directory
    <code>YOUR_RECORD_DIR_FROM_DEPEND.XML/TESTCASENAME</code>.
  </p>
  
  <p>Stopping a recording session is done by appending <code>__recordmode=0</code> as a parameter to
    the URL.
  </p>
  <p>
    Normally you won't have to fiddle with the URL in the
    browser. You can use the <b>PfixEditConsole</b> to turn on/off
    recording. This is explained in the <a href="editor/overview.html">editor
      documentation</a>.
  </p>
  </subsection>
  <subsection name="Playback recorded data">
  <p>
    The first way to playback click trails is with the <b>ConsoleTestClient</b>.
    This is a java program running in text mode in a terminal without providing any GUI. You can start it by
    typing <code>java de.schlund.pfixxml.testenv.ConsoleTestClient</code>. 
    The program has the following options:
  </p>
  <table>
    <tr>
      <th nowrap="nowrap">Option</th>
      <th>Mandatory?</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>-d</td>
      <td>yes</td>
      <td>Specifies the path to a directory containing recorded data. It might be something
        like <code>YOUR_RECORD_DIR_FROM_DEPEND.XML/TESTCASENAME</code>.</td>
    </tr>
    <tr>
      <td>-l</td>
      <td>no</td>
      <td>Specifies the path to a log4j configuration file. An example can be found
        at <code>example/testenv/log4jconfig.xml</code> in the CVS
        checkout. If this parameter is not given a default log4j
        configuration will be used.</td>
    </tr>
    <tr>
      <td>-t</td>
      <td>no</td>
      <td>Specifies a directory where temporary data will be written during playback.
        If this parameter is not used, the Java system property <code>java.io.tmpdir</code>
        is used as the temporary directory.</td>
    </tr>
    <tr>
      <td>-d</td>
      <td>no</td>
      <td>Specifies a directory containing stylesheets. For normal use you will not
        need this parameter.</td>
    </tr>
    <tr>
      <td>-q</td>
      <td>no</td>
      <td>Enable quiet mode.</td>
    </tr>
    <tr>
      <td>-v</td>
      <td>no</td>
      <td>Enable verbose mode.</td>
    </tr>
  </table>
  <p>Alternatively you can use the editor for playback recorded data. The usage is
    explained in the <a href="editor/overview.html">editor documentation</a>.
  </p>
  </subsection>
  </section>
</body>
</document>
