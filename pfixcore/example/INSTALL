This file describes how to get the example package up and running.

Prerequisites:

        * A Java installation. You need version 1.4.x. 
          The environment variable JDK_HOME must be set to the 
          location of your java installation.

        * jikes if you want to compile out-of-the-box.  Compilation
          with javac is of course possible, but needs some tinkering
          with the Makefile. And belive me, you really want to use
          jikes, it's just lightning fast compared to javac.

        * A working apache installation with a working mod_jk
          (the apache connection module for tomcat). You need
          to have these modules loaded, but you need no further
          configuration, the build process will take care of providing
          you with sample config files that sould at least get you
          started.

          Note that there have been problems with the order of
          inclusion of mod_rewrite and mod_jk in the httpd.conf.
          It seems that mod_jk needs to be loaded BEFORE
          mod_rewrite. If you experience problems, try changing
          the order of these two modules.  Other problems that have
          been experienced are related to changing regexp syntax
          between different versions of mod_rewrite. You may have to
          customize the relevant regexps in the file
          core/build/create_apacheconf.xsl
        
        * Your apache needs to have enabled name-based virtual servers
          for the default hostname of your machine. Furthermore you
          should have a "* entry" for your machine in DNS.  Note that
          you can work around this last point by tweaking the
          created apache.conf or by tweaking the producing stylesheet
          core/build/create_apacheconf.xsl.

        * NOTE: you don't need a installation of Tomcat,
          everything you need is contained in this package.  I suggest
          that even if you have your own Tomcat set up already,
          start with using the supplied versions, and, if all goes
          well, you can try to move the configuration into your own
          installation.

        * NOTE2: you don't need any additional jar files or classes besides
          what is supplied with your java installation and this package.
 
1) It is assumed that you have compiled the java classes
    (type "make" in the parent directory if you didn't do so)

2)  For compiling all the relevant config files, it should be enough
    to type "make" in this directory unless you just did step 1)
    (typing "make" in the parent directory) as the Makefile here is
    being called by the Makefile in the parent directory.

2a) You may want to type "make generate" for pre-processing
    all the templates up-front. This speeds up the first hit of a page
    in the sample applications as the page must not be build from
    scratch up then.

3)  Put something  like the following

        # config for mod_jk
        include <your path to this directory>/servletconf/tomcat/jk.conf

        # virtual hosts for tomcat:
        include <your path to this directory>/servletconf/tomcat/apache.conf

    into your httpd.conf. Don't forget to restart your apache.

5)  start Tomcat with the following command from the
    parent directory:

        ./startTomcat.sh 

    Note: For stopping Tomcat, just press Control-C to interrupt the script.

    Note: There have been problems with restarting or
    stopping/starting tomcat. Somtimes a restart of Apache is needed,
    too, so mod_jk can catch up and reopen the connections to Tomcat.

6)  To see the sample1 application, point your browser to
        
        http://sample1.<your.fully.qualified.hostname.here>

7)  Have Fun.
