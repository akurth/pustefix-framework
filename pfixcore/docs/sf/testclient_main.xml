<div>
  <h1>The Test client</h1>
  <h2>About</h2>
  <p>Nowadays development of web application went quite fast moving. Mostly
  one software release if tested intensively, but after a while of development,
  almost nobody can tell reliably if the current development has the same
  functionality and quality as the well tested initial release.</p>
  <p>Because of these facts a testing framework has been developed for Pustefix.</p>
  <p>When your application runs well it is time to record these data. If you
  record data, the user input and the associated output of the business logic
  are written to a file. After a while of development you can test if the
  functionality is still present by playback the recorded data. The recorded
  user input is send against you application and the belonging output
  of the business logic will be compared to the recorded one. If these outputs 
  differ you know that you have changed something important during development.
  The tools for playback shipped with Pustefix will show you these differences in
  a proper way.</p>
  
  <h2>Configuration</h2>
    <p>The basic configuration is done in the <code>depend.xml.in</code> file.</p>
    <xmlcode>
      <make cachedir="..." record_dir="...">
        <xmlcodeOFF>
          <table class="stdtable">
            <tr>
              <th>Attribute</th>
              <th>Notes</th>
            </tr>
            <tr>
              <td>cachedir</td>
              <td>
              <p>See the documentation the <a href="depend.html">depend.xml.in</a> file.</p>
              </td>
            </tr>
            <tr>
              <td>record_dir</td>
              <td>This attribute designates if recording can be used for your project. If
              the attribute does not exist, you will not be able to record data in your
              project. If it exists, its value will be interpreted as a directory relative 
              to <b>docroot</b>. When recording will be turned on, all recorded data will
              be written to this directory.
              </td>
            </tr>
          </table>
        </xmlcodeOFF>
      </make>
    </xmlcode>
  <h2>Recording data</h2>
    <p>Turing on recording is quit simple. Just append <code>__recordmode=TESTCASE_NAME</code>
      as a parameter to the URL. <code>TESTCASE_NAME</code> is an arbitrary name for your
      recording. If <code>TESTCASE_NAME</code> already exist, it will be renamed to
      <code>TESTCASE_NAME_N</code> where N is the next available positive Integer.
      Now all recorded data will be written to the directory 
      <code>YOUR_RECORD_DIR_FROM_DEPEND.XML/TESTCASENAME</code>.
    </p>
    <p>Turning off recording is done by appending <code>__recordmode=0</code> as a parameter to
      the URL.
    </p>
    <p>
    Alternatively you can use the <code>PfixEditConsole</code> to turn on/off recording. The
    use of the <code>PfixEditConsole</code> is explained in the 
    <a href="editor.html">Editor documentation</a>.
    </p>
  <h2>Playback recorded data</h2>
    <p>
      The first way the playback recorded data is the use of the <code>ConsoleTestClient</code>.
      It runs in textual mode in a terminal without providing any GUI. You can start it by
      typing <code>java de.schlund.pfixxml.testenv.ConsoleTestClient</code>. 
      The program has the following parameters:
    </p>
    <table class="stdtable">
      <tr>
        <th>specified by</th>
        <th>mandatory</th>
        <th>description</th>
      </tr>
      <tr>
        <td>-d</td>
        <td>yes</td>
        <td>Specifies the path to a directory containing recorded data. It might be something
        like <code>YOUR_RECORD_DIR_FROM_DEPEND.XML/TESTCASENAME</code>.</td>
      </tr>
      <tr>
        <td>-l</td>
        <td>no</td>
        <td>Specifies the path to a log4j configuration file. An example can be found
        at <code>example/testenv/log4jconfig.xml</code>. If this parameter is not given
        a default log4j configuration will be used.</td>
      </tr>
      <tr>
        <td>-t</td>
        <td>no</td>
        <td>Specifies a directory where temporary data will be written during playback.
        If this parameter is not used, the Java system property <code>java.io.tmpdir</code>
        will evaluated and used as the temporary directory. </td>
      </tr>
      <tr>
        <td>-d</td>
        <td>no</td>
        <td>Specifies a directory containing stylesheets. For normal use you will not
        need this parameter.</td>
      </tr>
      <tr>
        <td>-q</td>
        <td>no</td>
        <td>Enable quiet mode.</td>
      </tr>
      <tr>
        <td>-v</td>
        <td>no</td>
        <td>Enable verbose mode.</td>
      </tr>
    </table>
    <p>Alternatively you can use the editor for playback recorded data. The usage is
    explained <a href="editor.html">here</a>
    </p>
</div>
