<?xml version="1.0" encoding="ISO-8859-1" ?>

<projects xmlns:cus="http://www.schlund.de/pustefix/customize">

  <!-- The tutorial application. Use this as a template for how to define your own projects -->
  <!-- if you want to call your app something else substitute pfixtutorial with your name-->
  <project name="pfixtutorial">
    <active>true</active>
    <comment>Empty Pustefix Tutorial Application</comment>
    <depend><cus:docroot/>pfixtutorial/conf/depend.xml</depend>
    <!-- <namespace prefix="foo" uri="http://bar.foobaz"/> -->
    <virtualhost><cus:fqdn/></virtualhost>
    <servername><cus:choose><cus:test container="jserv">js-</cus:test></cus:choose>pfixtutorial.<cus:fqdn/></servername>
    <serveralias><cus:choose><cus:test container="jserv">js-</cus:test></cus:choose>pfixtutorial.<cus:machine/></serveralias>
    <!-- The default path you will be sent to when using the url -->
    <!-- "http://pfixtutorial.<servername>/" -->
    <defpath>/xml/tutorial</defpath>
    <!-- The Apache DocumentRoot for static content -->
    <documentroot><cus:docroot/>htdocs</documentroot>
    <!-- Here you can enter any additional apache config stuff -->
    <literalapache>
      # Add something here...
    </literalapache>
    <ports>
      <port number="80"/>
      <!-- if you want to use SSL, use something like this -->
      <!--port number="443" ssl="true">
        <sslkey><cus:docroot/>pfixtutorial/conf/server.key</sslkey>
        <sslcrt><cus:docroot/>pfixtutorial/conf/server.crt</sslcrt>
      </port-->
    </ports>

    <!-- Use useineditor="true" for every servlet that handles pages belonging directly to the project -->
    <!-- (That means for example not the servlet that starts up the editor, as the pages coming -->
    <!-- from this servlet belong to the editor project) -->
    <servlet name="tutorial" useineditor="true">
      <active>true</active>
      <class>de.schlund.pfixxml.ContextXMLServer</class>
      <propfile><cus:docroot/>pfixtutorial/conf/tutorial.prop</propfile>
    </servlet>
    <!-- best leave the following 2 servlets always in -->
	<servlet name="edit">
      <active>true</active>
      <class>de.schlund.pfixxml.ContextXMLServer</class>
      <propfile><cus:docroot/>core/editor/conf/config.prop</propfile>
    </servlet>
    <servlet name="deref">
      <active>true</active>
      <class>de.schlund.pfixxml.DerefServer</class>
    </servlet>
    <documentation>
      <doc_file><cus:docroot/>core/xsl/navigation.xsl.in</doc_file>
      <doc_file><cus:docroot/>core/xsl/utils.xsl.in</doc_file>
      <doc_file><cus:docroot/>core/xsl/forminput.xsl.in</doc_file>
      <doc_file><cus:docroot/>core/xsl/master.xsl.in</doc_file>
      <doc_file><cus:docroot/>core/xsl/include.xsl.in</doc_file>
      <doc_file><cus:docroot/>pfixtutorial/xsl/metatags.xsl.in</doc_file>
      <doc_file><cus:docroot/>shalala</doc_file>
    </documentation>  
  </project>

  <!-- Don't change the two projects below, they are needed to make the whole system work -->

  <!-- This is the Content Management System. You will be able to edit all projects -->
  <!-- which have at least one servlet with the "useineditor" attribute set to "true" -->
  
  <project name="cmscore">
    <active>true</active>
    <comment>CMS for Pfixcore</comment>
    <depend><cus:docroot/>core/editor/conf/depend.xml</depend>

    <virtualhost><cus:fqdn/></virtualhost>
    <servername><cus:choose><cus:test container="jserv">js-</cus:test></cus:choose>cmscore.<cus:fqdn/></servername>
    <serveralias><cus:choose><cus:test container="jserv">js-</cus:test></cus:choose>cmscore.<cus:machine/></serveralias>
    <defpath>/xml/edit</defpath>
    <ports>
      <port number="80"/>
    </ports>

    <servlet name="edit" useineditor="true">
      <active>true</active>
      <class>de.schlund.pfixxml.ContextXMLServer</class>
      <propfile><cus:docroot/>core/editor/conf/config.prop</propfile>
    </servlet>
    <servlet name="deref">
      <active>true</active>
      <class>de.schlund.pfixxml.DerefServer</class>
    </servlet>
  </project>

  <!-- You should not change this pseudo project below unless you know what you are doing.
       It is needed for administrative stuff like initializing all the needed factories. -->

  <project name="admcore">
    <active>true</active>
    <comment>Adminzone For Pfixcore</comment>
    
    <virtualhost><cus:fqdn/></virtualhost>
    <servername><cus:choose><cus:test container="jserv">js-</cus:test></cus:choose>admcore.<cus:fqdn/></servername>
    <serveralias><cus:choose><cus:test container="jserv">js-</cus:test></cus:choose>admcore.<cus:machine/></serveralias>
    <ports>
      <port number="80"/>
    </ports>
    <!-- The autostart attribute will start the servlet as soon as the container starts -->
    <servlet name="init" autostartup="true">
      <active>true</active>
      <class>de.schlund.pfixxml.FactoryInitServlet</class>
      <propfile><cus:docroot/>common/conf/factory.prop</propfile>
    </servlet>
  </project>


  <!-- some common definitions that are shared between all projects -->
  
  <common>
    <commonpropfile><cus:docroot/>common/conf/pustefix.prop</commonpropfile>
    <jserv>
      <jservmanual>on</jservmanual>
      <jservhost><cus:fqdn/></jservhost>
      <!-- use something like this (according to your sites definition) for clustering with mod_jserv -->
      <!-- NOTE: the generated sample jserv.conf file will need more tweaking to enable clustering! -->
      <!--       this is not handled here! -->
      <!-- <jservmountprefix>balance://cluster</jservmountprefix> -->
      <jvmopts>-mx200M</jvmopts>
    </jserv>
    <tomcat>
      <debug>0</debug>
      <loglevel>info</loglevel>
      <jkhost><cus:fqdn/></jkhost>
      <!-- This is only for mod_jk A matching sample workers.prop file will be generated, but may need -->
      <!-- additional customization. Clustering will not work out of the box. -->
      <jkmount>router</jkmount>
      <defaulthost>admcore.<cus:fqdn/></defaulthost>
      <jvmroute>foo</jvmroute>
    </tomcat>
    <apache>
      <apachelogdir>/var/log/httpd</apachelogdir>
      <!-- For all of these there will be an alias for direct handling by apache in ALL projects. -->
      <!-- This is needed because every project can potentially use images from every other projects "img" directory  -->
      <passthrough>common/img</passthrough>
      <passthrough>core/img</passthrough>
      <passthrough>core/script</passthrough>
      <passthrough>core/editor/img</passthrough>
      <passthrough>pfixtutorial/img</passthrough>
    </apache>
  </common>
</projects>
