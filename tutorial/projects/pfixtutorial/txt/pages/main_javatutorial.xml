<?xml version="1.0" encoding="ISO-8859-1"?>
<include_parts xmlns:ixsl="http://www.w3.org/1999/XSL/Transform" xmlns:pfx="http://www.schlund.de/pustefix/core"><!--Append include parts here...-->
  <part name="content">
    <product name="default">
      <lang name="default">
        <center><h2>Java in Pustefix Applications</h2></center>
        <p>
          Here I will try to explain what classes are needed and how to use them to
          forms and dynamic content to your application. Especially this part of the tutorial
          is far from complete because my own understandning of the java structure of the
          framework is not complete either.
        </p>
        <p>There should be paragraphs to explain states and contexts.</p>
        <hr/>
        <pfx:include part="dialogue"/>
  		<hr/>
        <pfx:include part="images"/>
        <br/>
        <p>The "I" in all those classes stands for "interface". Ask someone else why!</p>
      </lang>
    </product>
  </part>
  
   <part name="dialogue">
    <product name="default">
      <lang name="default">
    	<h3>IWrappers</h3>
     	<ul>
          <li>IWrapper -> .iwrp file, this is transformed into a java-class</li>
          <p><tt>   	
          &lt;interface><br/>
          &#160; &lt;ihandler class="de.schlund.pfixcore.example.AdultInfoHandler"/><br/>
          &#160; &lt;param name="Adult" type="java.lang.Boolean" missingscode="pfixcore.example.home.AGE_MISSING"><br/>
          &#160; &#160; &lt;caster class="de.schlund.pfixcore.generator.casters.ToBoolean"/><br/>
          &#160; &lt;/param><br/>
          &lt;/interface> 
        </tt></p>
        <p>Further Information: In the docs directory is a document about IWrappers and how to specify them.</p>
        
        <li>
          IHandler which 'handles' Iwrappers. Methods of the IHandler Interface:
          <p><tt>
          void    handleSubmittedData(Context context, IWrapper wrapper) throws Exception;<br/>
          void    retrieveCurrentStatus(Context context, IWrapper wrapper) throws Exception;<br/>
          boolean prerequisitesMet(Context context) throws Exception;<br/>
          boolean isActive(Context context) throws Exception;<br/>
          boolean needsData(Context context) throws Exception;<br/>
        </tt></p>
        <ul>
          <li>handleSubmittedData</li>
          <li>retrieveCurrentStatus</li>
          <li>prerequisitesMet</li>
          <li>isActive</li>
          <li>needsData</li>
        </ul>
        </li>
      </ul>
    </lang>
  </product>
</part>

<part name="context">
  <product name="default">
    <lang name="default">
      <h3>Context</h3>
      <p></p>
    </lang>
  </product>
</part>

<part name="state">
 <product name="default">
    <lang name="default">
      <h3>State</h3>
      <p> <tt>
      ResultDocument getDocument(Context context, PfixServletRequest preq)<br/>
      boolean isAccessible(Context context, PfixServletRequest preq)</tt>
    </p>
    </lang>
  </product>
</part>
  
<part name="images">
   <product name="default">
    <lang name="default">
      <H3>Some links to images detailing the java structure</H3>
      <p>
        These images were auto-generated by TogetherCC (except for the two Page Generation diagrams).
        The layout may not be overly intuitive but better than having no picture at all.
      </p>
      <ul>
        <li><A href="/pfixtutorial/img/app.gif">The app Package</A></li>
        <li><A href="/pfixtutorial/img/workflow.gif">The workflow Package</A></li>
        <li><A href="/pfixtutorial/img/pagegen-stat.gif">Page Generation for Static State</A></li>
        <li><A href="/pfixtutorial/img/pagegen-dyn.gif">Page Generation with IHandlers</A></li>
        <li><A href="/pfixtutorial/img/pfixxml.gif">The pfixxml Package</A></li>
        <li><A href="/pfixtutorial/img/generator.gif">The generator Package</A></li>
        <li><A href="/pfixtutorial/img/targets.gif">The targets Package</A></li>
      </ul>
    </lang>
  </product>
</part>
</include_parts>
