<div>
  <h1>Where to get it?</h1>
  <p>
    <pustefix/> is hosted on <a href="http://sourceforge.net/project/showfiles.php?group_id=72089">Sourceforge</a>. All the files
    and also the CVS tree can be downloaded (or checked out) from there.
  </p>

  <p>
    The downloadable filenames all start with <b><i>pfixcore</i></b>,
    because a whole <pustefix/> system always contains your own
    application classes and logic using the core classes and
    utilities supplied by <i>pfixcore</i>. The files to download are
    shown in the table below.
  </p>

  <table class="stdtable">
    <tr>
      <th>
        Filename
      </th>
      <th>
        Content
      </th>
    </tr>
    <tr>
      <td>
        pfixcore-skel-&lt;VERSION>.tar.gz
      </td>
      <td>
        <p>
          This tar file contains a skeleton directory structure with
          all the things you need to start a new pustefix environment.
          The pfixcore.jar and pfixcore-data.tar.gz files mentioned
          below are already contained in the tar file in the version
          indicated by the VERSION string.</p>
        <p>
          <b>If you don't already have a running pustefix environment, start by
            downloading this file.</b> For further updates, it's
          sufficient to download new pfixcore.jar and
          pfixcore-data.tar.gz files to replace the ones you have currently in your environment.
        </p>
      </td>
    </tr>
    <tr>
      <td>
        pfixcore-&lt;VERSION>.jar
      </td>
      <td>
        This jar file contains all java classes that the core system
        needs. Download this file (and the corresponding
        pfixcore-data.tar.gz file) if you want to update an already running <pustefix/> environment.
      </td>
    </tr>
    <tr>
      <td>
        pfixcore-data-&lt;VERSION>.tar.gz
      </td>
      <td>
        This tar file contains all the XML/XSLT files that are needed by the core system. Download this file (and the corresponding
        pfixcore.jar file) if you want to update an already running <pustefix/> environment.
      </td>
    </tr>
  </table>

  <h2>Prerequisites</h2>

  <p>
    There are a few things you need to have installed prior to using <pustefix/>. See the table below for references.
  </p>
  
  <table class="stdtable">
    <tr>
      <th>
        Package/Library
      </th>
      <th>
        Notes
      </th>
    </tr>
    <tr>
      <td>
	        A unixoid OS. 
	    </td>
      <td>
                          Yes, java should be platform independent.
          Unfortunately portions of the build environment and code
          are unix specific. Although these platform independant
          portions mainly deal with file system path secifications -
          they exist. There may be even more places where the thing
          wouldn't work on win32.
	    </td>
    </tr>
    <tr>
      <td>
        <a href="http://java.sun.com/j2se/">J2SE &gt;= 1.4.1</a>
      </td>
      <td>
        The Java 2 Platform, Standard Edition (aka Java Development Kit)
        in version 1.4.1 or higher.
      </td>
    </tr>
    <tr>
      <td>
        <a href="http://ant.apache.org/">ant</a>
      </td>
      <td>
          Apache Ant, the Java-based build tool in version 1.5.4 or higher.
          If you have really large projects consider increasing the memory
          for the java vm ant runs in: To do this set the ANT_OPTS
          environment variable to something like "-mx200m". This variable
          is evaluated within the ant start script contained in the ant
          distribution.
      </td>
    </tr>
    <tr>
      <td>
        <a href="http://oss.software.ibm.com/developerworks/opensource/jikes/">jikes</a>
      </td>
      <td>
        Jikes is a blazingly fast java compiler from IBM. You need it in order for the build environment to work out of the box.
        If you want to use javac, this is no problem, adjust the ant property build.compiler to value modern and javac will be used.
      </td>
    </tr>
    <tr>
      <td>
        <a href="http://httpd.apache.org/">Apache</a> + <a href="http://jakarta.apache.org/tomcat/tomcat-4.1-doc/jk2/jk/aphowto.html">mod_jk</a>
      </td>
      <td>
        <b>Optional:</b> A working installation of the Apache webserver (complete with
        mod_rewrite) and a working mod_jk (the apache connection
        module for tomcat - get the jakarta-tomcat-connectors package to compile it).
        You need to have this module loaded, but
        you need no further configuration, the build process (skeleton
        application and CVS) will take care of providing you with a
        sample config file that should at least get you started.
      </td>
    </tr>
  </table>
  
  <h2>Non-Prerequisites</h2>
  <p>Things you <i>don't</i> need:</p>
  <ul>
    <li>You don't need a standalone installation of tomcat,
      everything you need is contained in the skeleton package and the
      CVS checkout.  I suggest that even if you have your own tomcat
      setup already, start by using the supplied version and, if all
      goes well, you can try to move the configuration into your own
      installation.
    </li>
    <li>
      You don't need any additional jar files or classes besides what is supplied with your java installation.
      Everything you need is in the skeleton package and the CVS checkout.
    </li>
  </ul>
  
  <h2>Using CVS</h2>
  <p>
    Please follow the instructions on the Sourceforge <a href="http://sourceforge.net/cvs/?group_id=72089">CVS page</a>
    if you want to download the source repository for <pustefix/>. The name of the repository module is <b><i>pfixcore</i></b>.
  </p>

  <p>
   
    
  </p>
</div>