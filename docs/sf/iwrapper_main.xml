<div>
  <h1>IWrappers</h1>

  <p>IWrappers are used to store data during a session. IWrappers are
  not explicitly written by the developer, but are generated from
  <code>.iwrp</code> files which are much shorter and simpler. The
  <code>.iwrp</code> file defines all parameters/fields which may be
  stored during the session.  Each <code>.iwrp</code> file is
  translated into a <code>.java</code> file with the same name during
  the build process, and a java class is created. In the corresponding
  IHandler, you use the IWrapper to access or store data by calling
  the IWrapper&apos; get and set methods.
  </p>
  
  <p>
    The syntax of the <code>.iwrp</code> file
    is given below.
  </p>
  
  <xmlcode>
    &lt;?xml version="1.0" encoding="iso-8859-1"?>
    <interface>
      <ihandler class="de.test.CustomerAgeHandler"/>
      <xmlcodeOFF>
	<div class="comment">
	  The name of the associated ihandler class
	</div>
      </xmlcodeOFF>
      

      <xmlcodeOFF>
	<div class="comment">
	  Define one <code>param</code> block for each parameter/data
	  element you would like to store in the IWrapper
 	</div>
      </xmlcodeOFF>
      <param name="myTestParam" type="java.lang.Integer">
        <xmlcodeOFF>
          <table class="stdtable">
            <tr>
              <th>Attribute</th>
              <th>Notes</th>
            </tr>
            <tr>
              <td>
                name
              </td>
              <td>
                <p>
                  The name of the parameter, i.e. of the getter/setter
                  method wich will be generated. 
                </p>
              </td>
            </tr>
            <tr>
              <td>
                type
              </td>
              <td>
                <p>
                  The type of the parameter, return type of the getter
                  method.
                </p>
              </td>
            </tr>
	  </table>
	</xmlcodeOFF> 

	<caster class="de.schlund.pfixcore.generator.casters.ToInteger"/>
	<xmlcodeOFF>
	  <div class="comment">
	    Each parameter must be casted from a String to the
	    specific type. This is done by means of a Caster
	    class. Specify this class here. Probably you&apos;ll use
	    one from the package
	    <code>de.schlund.pfixcore.generator.casters</code>.
	  </div>
	</xmlcodeOFF>
      </param>
    </interface>
  </xmlcode>
  
</div>

  
