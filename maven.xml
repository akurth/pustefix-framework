<project default="jar:jar"
  xmlns:define="jelly:define"
  xmlns:ant="jelly:ant"
  xmlns:j="jelly:core"
  xmlns:jsl="jelly:jsl"
  xmlns:log="jelly:log"
  xmlns:maven="jelly:maven"
  xmlns:u="jelly:util"
  xmlns:x="jelly:xml"
  xmlns:doc="doc">

  <goal name="ant">
    <ant:echo>ant target: ${target}</ant:echo>
    <!-- TODO: fails because javac does not know ant classes 
       ant:ant dir="${basedir}" antfile="build.xml" target="${target}" inheritAll="false">
      <ant:property name="makemode" value="${makemode}"/>
      <ant:property name="build.compiler" value="modern"/>
    </ant:ant -->
    <ant:exec executable="ant">
      <ant:arg value="realclean"/>
      <ant:arg value="all"/>
      <ant:arg value="-Dmakemode=${makemode}"/>
      <ant:arg value="-Dbuild.compiler=modern"/>
    </ant:exec>
  </goal>

  <goal name="xsite" prereqs="ant, site"/>
  
  <preGoal name="pdf:pdf">
  	<attainGoal name="pfix:docs"/>
  </preGoal>
  
  <preGoal name="xdoc:transform">
  	<attainGoal name="pfix:docs"/>
  </preGoal>
  
  <preGoal name="site:sshdeploy">
    <maven:user-check user="${maven.username}"/>
    <ant:echo>deleting old site: ${pom.siteDirectory}</ant:echo>
    <ant:exec dir="." executable="${maven.ssh.executable}">
      <arg line="${maven.ssh.args} -l ${maven.username} ${pom.siteAddress} 'rm -rf ${pom.siteDirectory}'"/>
    </ant:exec>
    <ant:echo>deleting old site: done</ant:echo>
  </preGoal>
  
  <postGoal name="site:sshdeploy">
    <ant:property name="site.current" location="${pom.siteDirectory}/../htdocs"/>
    <ant:property name="site.old" location="${pom.siteDirectory}/../htdocs-old"/>
    <ant:echo>backup current site</ant:echo>
    <ant:exec dir="." executable="${maven.ssh.executable}">
      <arg line="${maven.ssh.args} -l ${maven.username} ${pom.siteAddress} 'rm -rf ${site.old}'"/>
    </ant:exec>
    <ant:exec dir="." executable="${maven.ssh.executable}">
      <arg line="${maven.ssh.args} -l ${maven.username} ${pom.siteAddress} 'mv ${site.current} ${site.old}'"/>
    </ant:exec>
    <ant:echo>replacing current site</ant:echo>
    <ant:exec dir="." executable="${maven.ssh.executable}">
      <arg line="${maven.ssh.args} -l ${maven.username} ${pom.siteAddress} 'mv ${pom.siteDirectory} ${site.current}'"/>
    </ant:exec>
    <ant:echo>done</ant:echo>
  </postGoal>

  <goal name="pfix:docs">
    <ant:echo>Generating ${maven.docs.src}</ant:echo>
    <ant:delete dir="${maven.docs.src}"/>
    <ant:copy todir="${maven.docs.src}">
      <ant:fileset dir="${pfix.docs.src}">
        <ant:exclude name="**/*.xml"/>
        <ant:exclude name="src/**"/>
      </ant:fileset>
    </ant:copy>
    <!-- TODO: 'Major hack.' Stolen from the Latka plugin.jelly. All of this could be avoided by putting
         xalan into $MAVEN_HOME/lib/endorsed directory in the distribution, but never mind -->
    ${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')}
    <ant:xslt basedir="${pfix.docs.src}" destdir="${maven.docs.src}" includes="**/*.xml" 
              extension=".xml" style="${pfix.docs.src}/style/customtags.xsl"/>
  </goal>

  <postGoal name="site">
    <attainGoal name="pdf"/>
  </postGoal>
</project>

