<?xml version="1.0" encoding="utf-8"?>
<document>

  <properties>
    <title>Where to get it?</title>
  </properties>

  <body>

  <section name="Where to get it?">

  <p>
    Pustefix is hosted on <a href="http://sourceforge.net/project/showfiles.php?group_id=72089">Sourceforge</a>. All the files
    and also the CVS tree can be downloaded (or checked out) from there.
  </p>

  <p>
    The downloadable filenames all start with <b><i>pfixcore</i></b>,
    because a whole Pustefix system always contains your own
    application classes and logic using the core classes and
    utilities supplied by <i>pfixcore</i>. The files to download are
    shown in the table below.
  </p>

  <table>
    <tr>
      <th>
        Filename
      </th>
      <th>
        Content
      </th>
    </tr>
    <tr>
      <td>
        pfixcore-skel-&lt;VERSION>.tar.gz
      </td>
      <td>
        <p>
          This tar file contains a skeleton directory structure with
          all the things you need to start a new pustefix environment.
          The pfixcore.jar and pfixcore-data.tar.gz files mentioned
          below are already contained in the tar file in the version
          indicated by the VERSION string.</p>
        <p>
          <b>If you don't already have a running pustefix environment, start by
            downloading this file.</b> For further updates, it's
          sufficient to download new pfixcore.jar and
          pfixcore-data.tar.gz files to replace the ones you have currently in your environment.
        </p>
      </td>
    </tr>
    <tr>
      <td>
        pfixcore-&lt;VERSION>.jar
      </td>
      <td>
        This jar file contains all java classes that the core system
        needs. Download this file (and the corresponding
        pfixcore-data.tar.gz file) if you want to update an already running Pustefix environment.
      </td>
    </tr>
    <tr>
      <td>
        pfixcore-data-&lt;VERSION>.tar.gz
      </td>
      <td>
        This tar file contains all the XML/XSLT files that are needed by the core system. Download this file (and the corresponding
        pfixcore.jar file) if you want to update an already running Pustefix environment.
      </td>
    </tr>
  </table>

  <subsection name="Prerequisites">

  <p>
    There are a few things you need to have installed prior to using Pustefix. See the table below for references.
    Note that you don't need Tomcat, it's part of the pustefix environment.
  </p>
  
  <table>
    <tr>
      <th>
        Package/Library
      </th>
      <th>
        Notes
      </th>
    </tr>
    <tr>
      <td>A unixoid OS.</td>
      <td>Yes, java should be platform independent.
          Unfortunately portions of the build environment and code
          are unix specific. Although these platform independant
          portions mainly deal with file system path secifications -
          they exist. There may be even more places where the thing
          wouldn't work on win32.</td>
    </tr>
    <tr>
      <td>
        <a href="http://java.sun.com/j2se/">J2SE &gt;= 1.4.1</a>
      </td>
      <td>
        The Java 2 Platform, Standard Edition (aka Java Development Kit)
        in version 1.4.1 or higher.
      </td>
    </tr>
    <tr>
      <td>
        <a href="http://ant.apache.org/">ant</a>
      </td>
      <td>
          Apache Ant, the Java-based build tool in version 1.6 or higher.
          If you have really large projects consider increasing the memory
          for the java vm ant runs in: To do this set the ANT_OPTS
          environment variable to something like "-mx200m". This variable
          is evaluated within the ant start script contained in the ant
          distribution.
      </td>
    </tr>
    <tr>
      <td>
        <a href="http://oss.software.ibm.com/developerworks/opensource/jikes/">jikes</a>
      </td>
      <td>
        <p><b>Optional</b>: <a href="http://www-124.ibm.com/developerworks/oss/jikes/">Jikes</a>
        is a blazingly fast java compiler from IBM. Pustefix is pre-configured to use jikes, so you
        need to install it in order for the build system to work out of the box. If you want to use
        javac, this is no problem, adjust the ant property build.compiler to <code>modern</code>
        and javac will be used.</p>
      </td>
    </tr>
  </table>

  </subsection>
  </section>
</body>
</document>
