<document>

  <properties>
    <title>What is Pustefix</title>
  </properties>

  <body>

  <section name="What is Pustefix">

  <p>
    Pustefix is a framework that helps you to develop web based
    applications (referred to as <i>projects</i> here). A high level
    view of the system is given on <a href="overview.html">this</a>
    page. The framework consists of two more or less independent
    parts:
  </p>

  <ul>
    <li>A machinery to apply recursive XSLT transformations that
      produces the UI of the web application. You can learn more about
      this <a href="xml.html">here</a>.</li>
    <li>A Java framework that takes input from the UI to change the
      application data and supplies changes of the application data back
      to the UI. This part is explained in much more detail <a href="java.html">here</a></li>
  </ul>

  <p>
    Together, the framework acts similar to the <i>Model-View-Controller</i> pattern.
  </p>

  </section>
  
  <section name="Development news">
  
  <p><b>Current release: 0.8.3</b></p>
  <p>More security work has been done: The ServletManager is now even
  more paranoid about checking session ids marked as "secure" (that
  means all sessions running under SSL). The system will no longer
  allow for a secure session to be used in a request that doesn't use
  SSL, as the integrity of the session is breached whenever the id has
  been submitted over an insecure channel.</p>
  <p>The test for an authorized use of a secure session has also
  changed: we no longer store the secure session id in a cookie, but a
  random ID. This ID is also stored in the secure session. Now we can
  check on every use of a secure session if there's also the correct
  cookie suplied (if cookies are used at all)</p>
  <p>0.8.3: .prop.in files get schema validated now, once they are in the new
  format. See <a href="prop.html">Servlet definition</a>.</p>
  <p>0.8.1: This is a brown-paper-bag-release fixing a security hole in the DerefServer</p>
  <p>0.8.0: The big feature of this release is a lightweight webservices
  implementation for Pustefix and a JavaScript enabled Browser. The
  Java side of things uses AXIS, which is integated into Pustefix so
  that a webservice automatically has access to the ContextResources
  of the current session. The client uses our own small SOAP
  implementation in JavaScript and (depending on the browser's
  featureset) different transports to submit the data to server</p>

  <p>You can see changes with increasing details:</p>
  <ul>  
     <li><p>High level: <a href="changes-report.html">Release announcements</a></p></li>
     <li><p>Mid level: <a href="http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/pustefix/pfixcore/ChangeLog?rev=HEAD&amp;content-type=text/vnd.viewcvs-markup">ChangeLog</a> file</p></li>
     <li><p>Low level: <a href="changelog-report.html">cvs log messages</a></p></li>
  </ul>

  </section>
</body>
</document>
