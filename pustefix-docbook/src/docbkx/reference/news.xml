<?xml version="1.0"?>
<chapter xml:id="news" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0CR7/xsd/docbook.xsd"
>
  <title>What's new in Pustefix 0.22.x</title>
  
  <para>This section lists the new features and enhancements of the current Pustefix release line. 
        If you're interested in new features which already became available with the prior Pustefix release line,
        you can take a look at <xref linkend="newsarchive"/>.</para>

  <para>If you're migrating an existing appliation to the new Pustefix version, you should have a look at <xref linkend="upgrade"/>.</para>

  <section xml:id="news.0_22_0">
    <title>What's new in Pustefix 0.22.0</title>
    <para>
      Added support for Spring 5. The minimum requirement now is Spring version 4.3.
    </para>
    <para>
      Pustefix states used as Spring MVC controllers with <literal>RequestMappings</literal> now work either with the deprecated
      Spring <literal>WebArgumentResolvers</literal>, or with <literal>HandlerMethodArgumentResolvers</literal>. Using Spring 4.3
      both are supported by Pustefix, since Spring 5 <literal>HandlerMethodArgumentResolvers</literal> are required
      (see <xref linkend="springmvc.annotationmethodhandleradapter"/> and <xref linkend="springmvc.requestmappinghandleradapter"/>).
    </para>
  </section>

  <section xml:id="news.0_22_1">
    <title>What's new in Pustefix 0.22.1</title>
    <para>
      Added support for so-called protected submits, i.e. only the HTTP request method POST is allowed and a synchronizer token
      is used to prevent CSRF attacks. Protected submits are enabled by setting the <literal>protected</literal> attribute at the
      <literal>&lt;input&gt;</literal> element to <literal>true</literal> (see <xref linkend="configuration.servlet.contextxml.input"/>
      and <xref linkend="xslt.forms.csrftoken"/>).
    </para>
  </section>

  <section xml:id="news.0_22_2">
    <title>What's new in Pustefix 0.22.2</title>
    <para>
      Pustefix now can be used together with the standard Spring <literal>ApplicationContext</literal> implementations, i.e. without using the custom
      <literal>PustefixWebApplicationContext</literal> implementation. Therefore Pustefix provides a <literal>BeanDefinitionRegistryPostProcessor</literal>
      implementation, which does all the necessary setup (e.g. reading the Pustefix configuration and creating bean definitions). Thus you can configure the
      Spring part of your application in a standard way, e.g. using an <literal>AnnotationConfigWebApplicationContext</literal> and Spring Java Config
      (see <xref linkend="configuration.spring"/> or the Pustefix <link xlink:href="https://github.com/pustefix-projects/pustefix-framework/tree/master/pustefix-samples/pustefix-mvctest">
      pustefix-mvctest</link> sample application).
    </para>
  </section>

  <section xml:id="news.0_22_6">
    <title>What's new in Pustefix 0.22.6</title>
    <para>
      Added support for <literal>MessageSource</literal> preprocessing, i.e. now you can do regular expression based search and replace 
      on <literal>MessageSource</literal> messages, e.g. you could introduce global placeholders processed at runtime, which avoids needing
      multiple versions of a file (see <xref linkend="xslt.messages.configuration"/>).
    </para>
  </section>

  <section xml:id="news.0_22_7">
    <title>What's new in Pustefix 0.22.7</title>
    <para>
      Pustefix now supports running under Java 11 without doing any illegal access operations, i.e. will work with having the JVM option
      <literal>--illegal-access=deny</literal> enabled too.
    </para>
  </section>

</chapter>
