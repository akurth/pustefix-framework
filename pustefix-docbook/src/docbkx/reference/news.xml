<?xml version="1.0"?>
<chapter xml:id="news" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0CR7/xsd/docbook.xsd"
>
  <title>What's new in Pustefix 0.23.x</title>
  
  <para>This section lists the new features and enhancements of the current Pustefix release line. 
        If you're interested in new features which already became available with the prior Pustefix release line,
        you can take a look at <xref linkend="newsarchive"/>.</para>

  <para>If you're migrating an existing appliation to the new Pustefix version, you should have a look at <xref linkend="upgrade"/>.</para>

  <section xml:id="news.0_23_0">
    <title>What's new in Pustefix 0.23.0</title>
    <para>
      The main focus of this release is better integration with Spring MVC, i.e. refactoring Pustefix's internal architecture to get rid of 
      some legacy design flaws and making use of Spring MVC's abstractions wherever it is possible. Thus you should be able to use almost all
      Spring MVC features together with or in parallel to Pustefix, e.g. the Spring <literal>ViewResolver</literal> mechanism will be supported,
      so that you can use regular Spring controllers and render their view with Pustefix.
    </para>
    <para>
      In a first refactoring step, the Pustefix session tracking support was moved from the <literal>HttpRequestHandler</literal> responsible for 
      page requests to a <literal>HandlerInterceptor</literal>. Thus Pustefix's session tracking extensions can also be applied to requests which are dispatched to
      other handlers, e.g. you can directly use a <literal>RequestMapping</literal> annotated Spring controller without losing Pustefix's session control.
    </para>
  </section>

</chapter>
