<?xml version="1.0"?>
<chapter id="gettingstarted" version="5.0" xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0CR7/xsd/docbook.xsd">

  <title>Getting started</title>
  
  <info>
    <title>Getting started</title>
  </info>
  
  <section xml:id="gettingstarted.requirements">
    <title>Requirements</title>
    <para>
     Before we can get started, you have to make sure that some requirements
     are met by your development environment. You will need:
    </para>
    <itemizedlist>
      <listitem>
        <para>JDK 8 or higher</para>
      </listitem>
      <listitem>
        <para>
          POSIX-like operating system (Pustefix has been tested with Linux
          and Mac OS X, but might also work with other systems like *BSD)
        </para>
      </listitem>
      <listitem>
        <para>Apache Maven 3 or higher</para>
      </listitem>
    </itemizedlist>
    <para>
      The installation of these tools is not covered by this
      tutorial. Please refer to the documentation provided with these tools
      for installation instructions.
    </para>
  </section>
  <section xml:id="gettingstarted.mavenarchetypes">
    <title>Generating a new project from a Maven archetype</title>
    <para>
      Pustefix provides some Maven archetypes for quickly creating new applications.
      A good starting point is the basic application archetype.
      Just call <literal>mvn archetype:generate</literal>
      and select the archetype <literal>org.pustefixframework:pustefix-archetype-basic</literal>:
    </para>
    <screen>$ mvn archetype:generate -Dfilter=pustefix</screen>
    <para>
      After choosing the <literal>pustefix-archetype-basic</literal> Maven will ask you for your project's <literal>groupId</literal>, 
      <literal>artifactId</literal>, <literal>version</literal> and <literal>package</literal>.
      Having finished these settings Maven will generate the new project within a new directory called like the <literal>artifactId</literal>
      and located within the current working directory (default is <literal>myapp</literal>).
    </para>
    <screen>$ cd myapp
$ mvn tomcat7:run-war</screen>
    <para>
      The generated project is a standard Maven project with <literal>war</literal> packaging type, i.e. you can immediately build and
      run your application, e.g. using Tomcat by calling <literal>mvn tomcat7:run-war</literal> and
      opening <literal>http://localhost:8080</literal> in your browser.
    </para>
  </section>
  <section xml:id="gettingstarted.getsources">
    <title>Getting the source code</title>
    <para>
    The source code used in the tutorials is available for public checkout. To test the tutorials on
    your local development machine, execute the following commands:
  </para>
  <screen>$ git clone https://github.com/pustefix-projects/pustefix-framework.git pustefix
$ cd pustefix
$ git checkout -b tutorial `git tag -l "pustefixframework-*" --sort v:refname | tail -1`
$ cd pustefix-tutorial/first-app
$ mvn tomcat7:run-war</screen>
  <para/>
  <para>
    This will clone the Pustefix Git repository, checkout/branch the latest Pustefix release tag, and run the tutorial application. 
  </para>
  <para/>
  </section>
</chapter>
