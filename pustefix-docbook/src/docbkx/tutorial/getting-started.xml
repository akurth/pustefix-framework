<?xml version="1.0"?>
<chapter id="gettingstarted" version="5.0" xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0CR7/xsd/docbook.xsd">

  <title>Getting started</title>
  
  <info>
    <title>Getting started</title>
  </info>
  
  <section xml:id="gettingstarted.requirements">
    <title>Requirements</title>
    <para>
     Before we can get started, you have to make sure that some requirements
     are met by your development environment. You will need:
    </para>
    <itemizedlist>
      <listitem>
        <para>JDK 5.0 or newer</para>
      </listitem>
      <listitem>
        <para>
          POSIX-like operating system (Pustefix has been tested with Linux
          and Mac OS X, but might also work with other systems like *BSD)
        </para>
      </listitem>
      <listitem>
        <para>Apache Maven 2.0.10 or newer</para>
      </listitem>
    </itemizedlist>
    <para>
      The installation of these tools is not covered by this
      tutorial. Please refer to the documentation provided with these tools
      for installation instructions.
    </para>
  </section>
  <section xml:id="gettingstarted.mavensetup">
    <title>Maven setup</title>
    <para>
      Pustefix provides some Maven archetypes for quickly creating new applications. Therefore you
      have to configure the repository where the according Pustefix artifacts reside (because
      they currently aren't hosted in the Maven central repository).  
    </para>
    <para>
      You can either configure the repository globally for Maven or always specify the URL of the repository's
      archetype-catalog when generating a new project (and add the repository configuration to the project's POM,
      if not already there). If you don't want to configure it globally,
      you can skip the next paragraphs and continue with the archetype generation in the next section.
    </para>
    <para>
      Adding the Pustefix repository can be easily done by adding the following profile to the
      Maven settings. The profile can be either added to the <filename>settings.xml</filename>
      file located in the <filename>.m2</filename> directory within your home directory (if it
      doesn't already exist you can just create it) or to the <filename>settings.xml</filename> file 
      located in the <filename>conf</filename> directory of your Maven installation.
    </para>
<programlisting language="xml"><![CDATA[<settings>
  <profiles>

    <profile>
      <id>pustefix</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <repositories>
        <repository>
          <id>pustefix</id>
          <name>Pustefix Maven Repository</name>
          <url>http://pustefix-framework.org/repository/maven</url>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <id>pustefix</id>
          <url>http://pustefix-framework.org/repository/maven</url>
        </pluginRepository>
      </pluginRepositories> 

    </profile>
  </profiles>
</settings>]]></programlisting>
  </section>
  <section xml:id="gettingstarted.mavenarchetypes">
    <title>Generating a new project from a Maven archetype</title>
    <para>
      Pustefix provides an archetype for creating a basic application. Just call <literal>mvn archetype:generate</literal>
      and select the archetype <literal>pustefix-archetype-basic</literal>. You only have to specifiy the
      <literal>archetypeCatalog</literal> parameter if you didn't globally setup the Pustefix Maven repository like 
      described in the last section.
    </para>
    <screen>
      $ mvn archetype:generate -DarchetypeCatalog=http://pustefix-framework.org/repository/maven/archetype-catalog.xml</screen>
    <para>
      After choosing the <literal>pustefix-archetype-basic</literal> Maven will ask you for your project's <literal>groupId</literal>, 
      <literal>artifactId</literal>, <literal>version</literal> and <literal>package</literal>.
      Having finished these settings Maven will generate the new project within a new directory called like the <literal>artifactId</literal>
      and located within the current working directory.
    </para>
    <screen>
      $ cd myproject
      $ mvn tomcat:run</screen>
    <para>
      The generated project is a standard Maven project with <literal>war</literal> packaging type, i.e. you can immediately build and
      run your application, e.g. using Tomcat by calling <literal>mvn tomcat:run</literal> or <literal>mvn tomcat:run-war</literal> and
      opening <literal>http://localhost:8080/myproject</literal> in your browser.
    </para>
  </section>
  <section xml:id="gettingstarted.ide">
    <title>Configure your IDE</title>
    <para>
      You can use the IDE of your choice. As a Pustefix project is a standard Maven project, you can
      use an arbitrary IDE supporting projects with Maven layout.
    </para>
    <para>
      Eclipse will be a good choice, e.g. you can just generate an according Eclipse configuration for your project
      using the Eclipse Maven plugin:
    </para>
    <screen>
      $ mvn eclipse:eclipse</screen>
    <para>
      Then you can import your project into Eclipse. Doing this the first time you will have to add 
      the <literal>M2_REPO</literal> classpath variable pointing to your local Maven repository
      (usually <literal>.m2/repository</literal> within your home directory). This can be done by 
      opening the <guimenu>Window</guimenu> ⇒ <guimenuitem>Preferences</guimenuitem> dialog
      and navigating to <guimenu>Java</guimenu> ⇒ <guimenuitem>Build Path</guimenuitem> ⇒
      <guimenuitem>Classpath Variables</guimenuitem>
      (also see the <link xlink:href="http://maven.apache.org/guides/mini/guide-ide-eclipse.html">Maven Eclipse documentation</link>).
    </para>
  </section>
  <section xml:id="gettingstarted.getsources">
    <title>Getting the source code</title>
    <para>
    The source code used in the tutorials is available for public checkout. To test the tutorials on
    your local development machine, execute the following commands:
  </para>
  <screen>$ svn co https://pustefix.svn.sourceforge.net/svnroot/pustefix/tags/pustefixframework-0.18.x/pustefix-tutorial
$ cd pustefix-tutorial/ajax-calculator (or first-app, usermanagement)
$ mvn tomcat:run</screen>
  </section>
</chapter>
