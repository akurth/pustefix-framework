<!--
	A file configuring the java related topics. 
	More Informations here: 
	
	http://pustefix.sourceforge.net/prop.html
	
	Just edit the config.prop.in and never! the config.prop (it will
	be generated by pustefix and all your changes will be overwritten)
-->
<properties xmlns:cus="http://www.schlund.de/pustefix/customize">
	<!--
		<servletinfo with the attributes "depend" and "name" is 
		mandatory.
		If depend starts with a '/' the value is used unchanged, otherwise 
		(which is the usual case) it's interpreted as a path relative to the 
		docroot.
		The attribute name has to be a unique name for the servlet being 
		generated.
	-->
	<servletinfo depend="simpleform/conf/depend.xml" name="pfixcore_project:simpleform::servlet:config">
		<editmode allow="true"/>
	</servletinfo>
	
	<!-- 
		A mandatory tag. It has to be the reference to a valid 
		pageflow (in this case there ist just the one below).
		For this example the tag also describes the ContextResource classes.
		They're needed because you're not able to store informations
		in the sesscion scope by the familiar way! 
		Using pustefix, you will always do it with a Contextresource (even
		for a short DemoText :o).
	-->
	<context defaultflow="DefaultFlow">
    <resource class="de.skelexamples.ContextDemoTextImpl">
      <implements class="de.skelexamples.ContextDemoText"/>
    </resource>
  </context>
  
	<pageflow name="DefaultFlow">
    	<flowstep name="home"/>
    	<flowstep name="output"/>
    </pageflow>
    
        
	<!--
		The name of a page defined in the corresponding depend.xml file.
		<pagerequest> has also two optional attributes called "nostore" 
		and "copyfrom". Go to http://pustefix.sourceforge.net/prop.html
		and search for this items to learn more.
		
		The class DemoText is described by the "interface" tag.
		It is mentioned in order to give the relation to a class representing
		the content of our form. 
		This class is generated by ant based upon an xml file called
		DemoText.iwrp (you will find it in de/schlund/pfixcore/example/
		iwrapper) and it is similiar to the concept of "Struts DynamicForms" (but
		pustefix implemented this concept first ;o).
		The handler being responsible for the action is also mentioned in the
		xml file. 
		A handler is a class dealing with the request sent by the user. In 
		Struts this would be maybe a MyAction.class inherited from
		org.apache.struts.action.Action. 
		In the Pustefix framework it is a class implementing the interface IHandler.
		The main method here is "handleSubmittedData(Args)".
	--> 
   <pagerequest name="home"> 
   	<ihandler>
      <interface prefix="demo" class="de.skelexamples.DemoText"/>
    </ihandler>   
  </pagerequest>
  
  
  <!--
  	Our aim is to give out the text received from our form on 
  	the main_output.xml.
  	Therefore we need a relation to the Contextresource and also the node 
  	containing the text (this is managed by the method
  	ContextDemoTextImpl::insertStatus(Args))
  -->
  	<pagerequest name="output">
    	<output>
      <resource node="data" class="de.skelexamples.ContextDemoText"/>
    </output>
  </pagerequest>

</properties>
